SELECT HOMEPAGE FROM JOURNAL WHERE NAME = "PVLDB" ;
SELECT HOMEPAGE FROM AUTHOR WHERE NAME = "H. V. Jagadish" ;
SELECT ABSTRACT FROM PUBLICATION WHERE TITLE = "Making database systems usable" ;
SELECT YEAR FROM PUBLICATION WHERE TITLE = "Making database systems usable" ;
SELECT TITLE FROM PUBLICATION WHERE YEAR > 2000 ;
SELECT HOMEPAGE FROM CONFERENCE WHERE NAME = "VLDB" ;
SELECT KEYWORD FROM KEYWORD ;
SELECT NAME FROM ORGANIZATION ;
SELECT NAME FROM ORGANIZATION WHERE CONTINENT = "North America" ;
SELECT HOMEPAGE FROM ORGANIZATION WHERE NAME = "University of Michigan" ;
SELECT REFERENCE_NUM FROM PUBLICATION WHERE TITLE = "Making database systems usable" ;
SELECT CITATION_NUM FROM PUBLICATION WHERE TITLE = "Making database systems usable" ;
SELECT TITLE FROM PUBLICATION WHERE CITATION_NUM > 200 ;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB" AND T1.YEAR = 2010;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB" AND T1.YEAR > 2010;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB" AND T1.YEAR = 2002;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB" AND T1.YEAR < 2002;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB" AND T1.YEAR < 2002 AND T1.YEAR > 1995;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE ( T1.YEAR < 1995 OR T1.YEAR > 2002 ) AND T2.NAME = "VLDB";
SELECT T1.NAME FROM DOMAIN AS T1 JOIN DOMAIN_JOURNAL AS T2 ON T1.DID = T2.DID JOIN JOURNAL AS T3 ON T3.JID = T2.JID WHERE T3.NAME = "PVLDB";
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB";
SELECT T1.NAME FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID WHERE T2.NAME = "H. V. Jagadish";
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish";
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish";
SELECT T3.NAME FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID WHERE T2.NAME = "H. V. Jagadish";
SELECT T2.NAME FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T3.TITLE = "Making database systems usable";
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T1.TITLE = "Making database systems usable";
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish";
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB";
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB";
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "PVLDB";
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "VLDB";
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish" AND T3.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "PVLDB" AND T1.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "VLDB" AND T1.YEAR > 2000;
SELECT T3.NAME FROM DOMAIN_CONFERENCE AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN DOMAIN AS T3 ON T3.DID = T1.DID WHERE T2.NAME = "VLDB";
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB";
SELECT T3.KEYWORD FROM DOMAIN AS T1 JOIN DOMAIN_KEYWORD AS T2 ON T1.DID = T2.DID JOIN KEYWORD AS T3 ON T3.KID = T2.KID WHERE T1.NAME = "Databases";
SELECT T3.TITLE FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID WHERE T2.KEYWORD = "Natural Language";
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID WHERE T3.TITLE = "Making database systems usable";
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish";
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB";
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB";
SELECT T6.KEYWORD FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN PUBLICATION_KEYWORD AS T5 ON T4.PID = T5.PID JOIN KEYWORD AS T6 ON T5.KID = T6.KID WHERE T1.NAME = "University of Michigan";
SELECT T3.TITLE FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" AND T2.KEYWORD = "User Study";
SELECT T3.TITLE FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB" AND T2.KEYWORD = "Keyword search";
SELECT T3.TITLE FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB" AND T2.KEYWORD = "Information Retrieval";
SELECT T5.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.KEYWORD = "Relational Database";
SELECT T4.NAME FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases";
SELECT T4.NAME FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases" AND T4.CONTINENT = "North America";
SELECT T2.NAME FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID WHERE T1.NAME = "University of Michigan";
SELECT T2.NAME FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases" AND T4.NAME = "University of Michigan";
SELECT T4.TITLE FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan";
SELECT T4.TITLE FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan" AND T4.YEAR > 2000;
SELECT T4.TITLE FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN CONFERENCE AS T5 ON T4.CID = T5.CID WHERE T5.NAME = "VLDB" AND T1.NAME = "University of Michigan";
SELECT T4.TITLE FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN JOURNAL AS T5 ON T4.JID = T5.JID WHERE T5.NAME = "PVLDB" AND T1.NAME = "University of Michigan";
SELECT T4.TITLE FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN JOURNAL AS T5 ON T4.JID = T5.JID WHERE T5.NAME = "PVLDB" AND T1.NAME = "University of Michigan" AND T4.YEAR > 2000;
SELECT T3.TITLE FROM DOMAIN AS T1 JOIN DOMAIN_PUBLICATION AS T2 ON T1.DID = T2.DID JOIN PUBLICATION AS T3 ON T3.PID = T2.PID WHERE T1.NAME = "Databases" AND T3.CITATION_NUM > 200;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.CITATION_NUM > 200;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.CITATION_NUM > 200;
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish" AND T3.CITATION_NUM > 200;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "PVLDB" AND T1.CITATION_NUM > 200;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "VLDB" AND T1.CITATION_NUM > 200;
SELECT TITLE FROM PUBLICATION WHERE CITATION_NUM > 200 AND YEAR > 2000 ;
SELECT T3.TITLE FROM DOMAIN AS T1 JOIN DOMAIN_PUBLICATION AS T2 ON T1.DID = T2.DID JOIN PUBLICATION AS T3 ON T3.PID = T2.PID WHERE T1.NAME = "Databases" AND T3.CITATION_NUM > 200 AND T3.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.CITATION_NUM > 200 AND T1.YEAR > 2000;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.CITATION_NUM > 200 AND T1.YEAR > 2000;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish" GROUP BY T3.YEAR;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T3.TITLE = "Making database systems usable";
SELECT YEAR , SUM( CITATION_NUM ) FROM PUBLICATION WHERE TITLE = "Making database systems usable" GROUP BY YEAR ;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM PUBLICATION AS T1 JOIN CITE AS T2 ON T1.PID = T2.CITED JOIN PUBLICATION AS T3 ON T3.PID = T2.CITING WHERE T1.TITLE = "Making database systems usable" AND T3.YEAR < 2010;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB";
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB";
SELECT COUNT( DISTINCT ( TITLE ) ) FROM PUBLICATION WHERE YEAR > 2000 ;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR > 2000;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR > 2000;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "PVLDB";
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "VLDB";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish" AND T3.YEAR > 2000;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "PVLDB" AND T1.YEAR > 2000;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" AND T2.NAME = "VLDB" AND T1.YEAR > 2000;
SELECT COUNT( DISTINCT ( KEYWORD ) ) FROM KEYWORD ;
SELECT COUNT( DISTINCT ( T3.KEYWORD ) ) FROM DOMAIN AS T1 JOIN DOMAIN_KEYWORD AS T2 ON T1.DID = T2.DID JOIN KEYWORD AS T3 ON T3.KID = T2.KID WHERE T1.NAME = "Databases";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID WHERE T2.KEYWORD = "Natural Language";
SELECT COUNT( DISTINCT ( T2.KEYWORD ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID WHERE T3.TITLE = "Making database systems usable";
SELECT COUNT( DISTINCT ( T2.KEYWORD ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T5.KEYWORD ) ) FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN DOMAIN_KEYWORD AS T4 ON T3.DID = T4.DID JOIN KEYWORD AS T5 ON T5.KID = T4.KID WHERE T2.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T2.KEYWORD ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB";
SELECT COUNT( DISTINCT ( T2.KEYWORD ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB";
SELECT COUNT( DISTINCT ( T6.KEYWORD ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN PUBLICATION_KEYWORD AS T5 ON T4.PID = T5.PID JOIN KEYWORD AS T6 ON T5.KID = T6.KID WHERE T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" AND T2.KEYWORD = "User Study";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB" AND T2.KEYWORD = "Keyword search";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB" AND T2.KEYWORD = "Information Retrieval";
SELECT COUNT( DISTINCT ( T5.NAME ) ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.KEYWORD = "Relational Database";
SELECT SUM( T3.CITATION_NUM ) FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID WHERE T2.KEYWORD = "Natural Language";
SELECT COUNT( DISTINCT ( NAME ) ) FROM ORGANIZATION ;
SELECT COUNT( DISTINCT ( NAME ) ) FROM ORGANIZATION WHERE CONTINENT = "North America" ;
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases";
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases" AND T4.CONTINENT = "North America";
SELECT COUNT( DISTINCT ( T4.TITLE ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T6.TITLE ) ) FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN DOMAIN_PUBLICATION AS T4 ON T3.DID = T4.DID JOIN ORGANIZATION AS T5 ON T5.OID = T2.OID JOIN PUBLICATION AS T6 ON T6.PID = T4.PID WHERE T3.NAME = "Databases" AND T5.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T4.TITLE ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan" AND T4.YEAR > 2000;
SELECT COUNT( DISTINCT ( T4.TITLE ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN CONFERENCE AS T5 ON T4.CID = T5.CID WHERE T5.NAME = "VLDB" AND T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T4.TITLE ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN JOURNAL AS T5 ON T4.JID = T5.JID WHERE T5.NAME = "PVLDB" AND T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T4.TITLE ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID JOIN JOURNAL AS T5 ON T4.JID = T5.JID WHERE T5.NAME = "PVLDB" AND T1.NAME = "University of Michigan" AND T4.YEAR > 2000;
SELECT SUM( T4.CITATION_NUM ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID WHERE T1.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID WHERE T3.NAME = "Databases" AND T4.NAME = "University of Michigan";
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB";
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB";
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR < 2000;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR < 2000;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB";
SELECT T1.CITATION_NUM FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB";
SELECT T1.TITLE , SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" GROUP BY T1.TITLE;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR = 2005;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR < 2005;
SELECT T1.YEAR , SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" GROUP BY T1.YEAR;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) , T1.YEAR FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" GROUP BY T1.YEAR;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB";
SELECT T1.CITATION_NUM FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB";
SELECT T1.TITLE , SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" GROUP BY T1.TITLE;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR = 2005;
SELECT SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR < 2005;
SELECT T1.YEAR , SUM( T1.CITATION_NUM ) FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" GROUP BY T1.YEAR;
SELECT COUNT( DISTINCT ( T1.TITLE ) ) , T1.YEAR FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" GROUP BY T1.YEAR;
SELECT T2.NAME FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN WRITES AS T5 ON T5.PID = T3.PID JOIN AUTHOR AS T6 ON T4.AID = T6.AID JOIN AUTHOR AS T7 ON T5.AID = T7.AID WHERE T6.NAME = "H. V. Jagadish" AND T7.NAME = "Divesh Srivastava";
SELECT T2.NAME FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN AUTHOR AS T3 ON T1.OID = T3.OID WHERE ( T3.NAME = "H. V. Jagadish" OR T3.NAME = "Divesh Srivastava" );
SELECT T2.NAME FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" AND T3.YEAR > 2000;
SELECT T5.NAME FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T3.YEAR > 2000;
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Divesh Srivastava";
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Yunyao Li" AND T3.YEAR > 2005;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T1.PID JOIN AUTHOR AS T5 ON T3.AID = T5.AID JOIN AUTHOR AS T6 ON T4.AID = T6.AID WHERE T5.NAME = "H. V. Jagadish" AND T6.NAME = "Yunyao Li" AND T2.NAME = "PVLDB";
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T1.PID JOIN AUTHOR AS T5 ON T3.AID = T5.AID JOIN AUTHOR AS T6 ON T4.AID = T6.AID WHERE T5.NAME = "H. V. Jagadish" AND T6.NAME = "Yunyao Li" AND T2.NAME = "PVLDB" AND T1.YEAR > 2005;
SELECT T2.NAME FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish";
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Divesh Srivastava" AND T3.YEAR < 2000;
SELECT T6.NAME FROM PUBLICATION AS T1 JOIN CITE AS T2 ON T1.PID = T2.CITING JOIN PUBLICATION AS T3 ON T3.PID = T2.CITED JOIN WRITES AS T4 ON T4.PID = T1.PID JOIN WRITES AS T5 ON T5.PID = T3.PID JOIN AUTHOR AS T6 ON T4.AID = T6.AID JOIN AUTHOR AS T7 ON T5.AID = T7.AID WHERE T7.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Divesh Srivastava";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Divesh Srivastava" AND T3.YEAR < 2000;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN WRITES AS T5 ON T5.PID = T3.PID JOIN AUTHOR AS T6 ON T4.AID = T6.AID JOIN AUTHOR AS T7 ON T5.AID = T7.AID WHERE T2.NAME = "Cong Yu" AND T6.NAME = "H. V. Jagadish" AND T7.NAME = "Yunyao Li";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish";
SELECT COUNT( DISTINCT ( T6.NAME ) ) FROM PUBLICATION AS T1 JOIN CITE AS T2 ON T1.PID = T2.CITING JOIN PUBLICATION AS T3 ON T3.PID = T2.CITED JOIN WRITES AS T4 ON T4.PID = T1.PID JOIN WRITES AS T5 ON T5.PID = T3.PID JOIN AUTHOR AS T6 ON T4.AID = T6.AID JOIN AUTHOR AS T7 ON T5.AID = T7.AID WHERE T7.NAME = "H. V. Jagadish";
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "H. V. Jagadish" AND T5.NAME = "Divesh Srivastava" AND T3.CITATION_NUM > 200;
SELECT T5.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.KEYWORD = "Relational Database" GROUP BY T5.NAME ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT COUNT( * ) FROM ( SELECT T5.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.KEYWORD = "Relational Database" GROUP BY T5.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 10) ;
SELECT COUNT( * ) FROM ( SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 60) ;
SELECT COUNT( * ) FROM ( SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 60) ;
SELECT COUNT( * ) FROM ( SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 100) ;
SELECT COUNT( * ) FROM ( SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 100) ;
SELECT COUNT( * ) FROM ( SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 10) ;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB" GROUP BY T2.KEYWORD ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB" GROUP BY T2.KEYWORD ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" GROUP BY T2.KEYWORD ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T2.NAME FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan" GROUP BY T2.NAME ORDER BY SUM( T4.CITATION_NUM ) DESC LIMIT 1;
SELECT T5.NAME FROM DOMAIN AS T1 JOIN DOMAIN_PUBLICATION AS T2 ON T1.DID = T2.DID JOIN PUBLICATION AS T3 ON T3.PID = T2.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID JOIN ORGANIZATION AS T6 ON T6.OID = T5.OID WHERE T1.NAME = "Databases" AND T6.NAME = "University of Michigan" GROUP BY T5.NAME ORDER BY SUM( T3.CITATION_NUM ) DESC LIMIT 1;
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "Divesh Srivastava" AND T5.NAME = "H. V. Jagadish" ORDER BY T3.CITATION_NUM DESC LIMIT 1;
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" GROUP BY T2.NAME HAVING COUNT( DISTINCT ( T1.TITLE ) ) > 10;
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T1.TITLE ) ) DESC LIMIT 1;
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" GROUP BY T2.NAME HAVING COUNT( DISTINCT ( T1.TITLE ) ) > 10;
SELECT T2.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T4.NAME = "H. V. Jagadish" GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T1.TITLE ) ) DESC LIMIT 1;
SELECT TITLE FROM PUBLICATION ORDER BY CITATION_NUM DESC LIMIT 1 ;
SELECT T3.TITLE FROM DOMAIN AS T1 JOIN DOMAIN_PUBLICATION AS T2 ON T1.DID = T2.DID JOIN PUBLICATION AS T3 ON T3.PID = T2.PID WHERE T1.NAME = "Databases" ORDER BY T3.CITATION_NUM DESC LIMIT 1;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" ORDER BY T1.CITATION_NUM DESC LIMIT 1;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" ORDER BY T1.CITATION_NUM DESC LIMIT 1;
SELECT T3.TITLE FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN PUBLICATION AS T3 ON T1.PID = T3.PID WHERE T2.NAME = "H. V. Jagadish" ORDER BY T3.CITATION_NUM DESC LIMIT 1;
SELECT TITLE FROM PUBLICATION WHERE YEAR > 2000 ORDER BY CITATION_NUM DESC LIMIT 1 ;
SELECT T3.TITLE FROM DOMAIN AS T1 JOIN DOMAIN_PUBLICATION AS T2 ON T1.DID = T2.DID JOIN PUBLICATION AS T3 ON T3.PID = T2.PID WHERE T1.NAME = "Databases" AND T3.YEAR > 2000 ORDER BY T3.CITATION_NUM DESC LIMIT 1;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID WHERE T2.NAME = "PVLDB" AND T1.YEAR > 2000 ORDER BY T1.CITATION_NUM DESC LIMIT 1;
SELECT T1.TITLE FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID WHERE T2.NAME = "VLDB" AND T1.YEAR > 2000 ORDER BY T1.CITATION_NUM DESC LIMIT 1;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T1.TITLE ) ) > 10;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN JOURNAL AS T2 ON T1.JID = T2.JID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "PVLDB" GROUP BY T4.NAME ORDER BY COUNT( DISTINCT ( T1.TITLE ) ) DESC LIMIT 1;
SELECT T5.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T2.KEYWORD = "Relational Database" GROUP BY T5.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 10;
SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 60;
SELECT T4.NAME FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T2.KEYWORD = "Relational Database" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 60;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN CONFERENCE AS T4 ON T3.CID = T4.CID WHERE T4.NAME = "VLDB" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 100;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN JOURNAL AS T4 ON T3.JID = T4.JID WHERE T4.NAME = "PVLDB" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 100;
SELECT T2.KEYWORD FROM PUBLICATION_KEYWORD AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.KID JOIN PUBLICATION AS T3 ON T3.PID = T1.PID JOIN WRITES AS T4 ON T4.PID = T3.PID JOIN AUTHOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "H. V. Jagadish" GROUP BY T2.KEYWORD HAVING COUNT( DISTINCT ( T3.TITLE ) ) > 10;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB" GROUP BY T4.NAME HAVING COUNT( DISTINCT ( T1.TITLE ) ) > 10;
SELECT T4.NAME FROM PUBLICATION AS T1 JOIN CONFERENCE AS T2 ON T1.CID = T2.CID JOIN WRITES AS T3 ON T3.PID = T1.PID JOIN AUTHOR AS T4 ON T3.AID = T4.AID WHERE T2.NAME = "VLDB" GROUP BY T4.NAME ORDER BY COUNT( DISTINCT ( T1.TITLE ) ) DESC LIMIT 1;
SELECT DERIVED_FIELDalias0 FROM ( SELECT AUTHORalias0.NAME AS DERIVED_FIELDalias0 , COUNT( DISTINCT ( PUBLICATIONalias0.TITLE ) ) AS DERIVED_FIELDalias1 FROM AUTHOR AS AUTHORalias0 , CONFERENCE AS CONFERENCEalias0 , PUBLICATION AS PUBLICATIONalias0 , WRITES AS WRITESalias0 WHERE CONFERENCEalias0.NAME = "VLDB" AND PUBLICATIONalias0.CID = CONFERENCEalias0.CID AND WRITESalias0.AID = AUTHORalias0.AID AND WRITESalias0.PID = PUBLICATIONalias0.PID GROUP BY AUTHORalias0.NAME ) AS DERIVED_TABLEalias0 , ( SELECT AUTHORalias1.NAME AS DERIVED_FIELDalias2 , COUNT( DISTINCT ( PUBLICATIONalias1.TITLE ) ) AS DERIVED_FIELDalias3 FROM AUTHOR AS AUTHORalias1 , CONFERENCE AS CONFERENCEalias1 , PUBLICATION AS PUBLICATIONalias1 , WRITES AS WRITESalias1 WHERE CONFERENCEalias1.NAME = "ICDE" AND PUBLICATIONalias1.CID = CONFERENCEalias1.CID AND WRITESalias1.AID = AUTHORalias1.AID AND WRITESalias1.PID = PUBLICATIONalias1.PID GROUP BY AUTHORalias1.NAME ) AS DERIVED_TABLEalias1 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias1 > DERIVED_TABLEalias1.DERIVED_FIELDalias3 AND DERIVED_TABLEalias1.DERIVED_FIELDalias2 = DERIVED_TABLEalias0.DERIVED_FIELDalias0 ;
SELECT T2.NAME FROM ORGANIZATION AS T1 JOIN AUTHOR AS T2 ON T1.OID = T2.OID JOIN WRITES AS T3 ON T3.AID = T2.AID JOIN PUBLICATION AS T4 ON T3.PID = T4.PID WHERE T1.NAME = "University of Michigan" GROUP BY T2.NAME HAVING SUM( T4.CITATION_NUM ) > 5000;
SELECT T2.NAME FROM DOMAIN_AUTHOR AS T1 JOIN AUTHOR AS T2 ON T1.AID = T2.AID JOIN DOMAIN AS T3 ON T3.DID = T1.DID JOIN ORGANIZATION AS T4 ON T4.OID = T2.OID JOIN WRITES AS T5 ON T5.AID = T2.AID JOIN PUBLICATION AS T6 ON T5.PID = T6.PID WHERE T3.NAME = "Databases" AND T4.NAME = "University of Michigan" GROUP BY T2.NAME HAVING SUM( T6.CITATION_NUM ) > 5000;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T3.DEPARTURE_TIME = 819 AND T5.CITY_NAME = "DENVER";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "PITTSBURGH" AND T7.ROUND_TRIP_COST IS NOT NULL AND T6.CITY_NAME = "BALTIMORE";
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FARE WHERE ROUND_TRIP_COST IS NOT NULL ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "PITTSBURGH" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "BALTIMORE" ) ) ;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME < 800 AND T5.CITY_NAME = "SAN FRANCISCO";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T5.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME < 800 ;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T5.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME < 800;
SELECT DISTINCT T1.FLIGHT_ID FROM FLIGHT AS T1 JOIN DAYS AS T2 ON T1.FLIGHT_DAYS = T2.DAYS_CODE JOIN AIRPORT_SERVICE AS T3 ON T1.TO_AIRPORT = T3.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T3.CITY_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE WHERE T1.DEPARTURE_TIME < 800 AND T5.CITY_NAME = "ATLANTA" AND T6.CITY_NAME = "SAN FRANCISCO";
SELECT DISTINCT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME < 800 AND T5.CITY_NAME = "SAN FRANCISCO";
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE DEPARTURE_TIME < 800 AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ATLANTA" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SAN FRANCISCO" ) ) ;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME < 800 AND T5.CITY_NAME = "SAN FRANCISCO" AND T3.CONNECTIONS = 0;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T3.ARRIVAL_TIME <= 1700 AND T3.ARRIVAL_TIME >= 1600 AND T1.CITY_NAME = "BALTIMORE" AND T5.CITY_NAME = "PITTSBURGH";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "DENVER" AND T7.FARE_BASIS_CODE = "QX" AND T7.ROUND_TRIP_COST IS NOT NULL AND T6.CITY_NAME = "ATLANTA";
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "WASHINGTON" AND T5.CITY_NAME = "OAKLAND";
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "WASHINGTON" AND T5.CITY_NAME = "OAKLAND" AND T7.ROUND_TRIP_COST IS NOT NULL;
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "WASHINGTON" AND T5.CITY_NAME = "OAKLAND" AND T5.STATE_CODE = "DC" AND T7.ROUND_TRIP_COST IS NOT NULL;
SELECT DISTINCT FARE_ID FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "WASHINGTON" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "OAKLAND" AND STATE_CODE = "DC" ) ) ) ) ;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "ATLANTA" AND T7.ROUND_TRIP_REQUIRED = "NO" AND T6.CITY_NAME = "PITTSBURGH";
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FARE WHERE ROUND_TRIP_REQUIRED = "NO" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ATLANTA" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "PITTSBURGH" ) ) ;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID JOIN FARE_BASIS AS T8 ON T7.FARE_BASIS_CODE = T8.FARE_BASIS_CODE WHERE T1.CITY_NAME = "BALTIMORE" AND T6.CITY_NAME = "DENVER" AND T8.CLASS_TYPE = "FIRST" AND T3.AIRLINE_CODE = "UA";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID JOIN FARE_BASIS AS T8 ON T7.FARE_BASIS_CODE = T8.FARE_BASIS_CODE WHERE T1.CITY_NAME = "DENVER" AND T8.CLASS_TYPE = "FIRST" AND T6.CITY_NAME = "BALTIMORE" AND T3.AIRLINE_CODE = "UA";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN STATE AS T5 ON T5.STATE_CODE = T1.STATE_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN STATE AS T7 ON T7.STATE_CODE = T6.STATE_CODE WHERE T1.CITY_NAME = "NEWARK" AND T6.CITY_NAME = "CLEVELAND" AND T5.STATE_NAME = "NEW JERSEY" AND T7.STATE_NAME = "OHIO";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T3.ARRIVAL_TIME <= 1800 AND T3.ARRIVAL_TIME >= 1200 AND T1.CITY_NAME = "BOSTON" AND T5.CITY_NAME = "SAN FRANCISCO" AND T3.DEPARTURE_TIME BETWEEN 0 AND 1200;
SELECT DISTINCT T1.FLIGHT_ID FROM FLIGHT AS T1 JOIN AIRPORT AS T2 ON T1.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT AS T3 ON T1.TO_AIRPORT = T3.AIRPORT_CODE WHERE T2.AIRPORT_CODE = "BWI" AND T3.AIRPORT_CODE = "BOS" AND T1.DEPARTURE_TIME = ( SELECT T1.DEPARTURE_TIME FROM FLIGHT AS T1 JOIN AIRPORT AS T2 ON T1.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT AS T3 ON T1.TO_AIRPORT = T3.AIRPORT_CODE WHERE T2.AIRPORT_CODE = "BWI" AND T3.AIRPORT_CODE = "BOS" ORDER BY T1.DEPARTURE_TIME LIMIT 1);
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT_FARE AS T4 ON T3.FLIGHT_ID = T4.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T5.CITY_CODE JOIN FARE AS T7 ON T4.FARE_ID = T7.FARE_ID JOIN FARE_BASIS AS T8 ON T7.FARE_BASIS_CODE = T8.FARE_BASIS_CODE WHERE T1.CITY_NAME = "LOS ANGELES" AND T3.DEPARTURE_TIME > 1500 AND T8.CLASS_TYPE = "COACH" AND T6.CITY_NAME = "NEWARK";
SELECT DISTINCT T4.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT_STOP AS T3 ON T3.STOP_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT AS T4 ON T4.FLIGHT_ID = T3.FLIGHT_ID WHERE T1.CITY_NAME = "DENVER" AND T4.AIRLINE_CODE = "NW";
SELECT DISTINCT T7.AIRCRAFT_CODE FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN EQUIPMENT_SEQUENCE AS T5 ON T3.AIRCRAFT_CODE_SEQUENCE = T5.AIRCRAFT_CODE_SEQUENCE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN AIRCRAFT AS T7 ON T5.AIRCRAFT_CODE = T7.AIRCRAFT_CODE WHERE T3.DEPARTURE_TIME = 555 AND T3.FLIGHT_NUMBER = 825 AND T1.CITY_NAME = "DENVER" AND T6.CITY_NAME = "ATLANTA" AND T3.AIRLINE_CODE = "EA";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN DAYS AS T4 ON T3.FLIGHT_DAYS = T4.DAYS_CODE JOIN DATE_DAY AS T5 ON T4.DAY_NAME = T5.DAY_NAME WHERE T1.CITY_NAME = "SEATTLE" AND T5.DAY_NUMBER = 27 AND T5.MONTH_NUMBER = 8 AND T5.YEAR = 1991 AND T3.AIRLINE_CODE = "CO";
SELECT DISTINCT T7.FARE_ID , T3.AIRLINE_CODE , T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "DENVER" AND T5.CITY_NAME = "ATLANTA";
SELECT DISTINCT T11.AIRCRAFT_CODE FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT_STOP AS T3 ON T3.STOP_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT AS T4 ON T4.FLIGHT_ID = T3.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T4.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T4.FROM_AIRPORT = T6.AIRPORT_CODE JOIN EQUIPMENT_SEQUENCE AS T7 ON T4.AIRCRAFT_CODE_SEQUENCE = T7.AIRCRAFT_CODE_SEQUENCE JOIN FLIGHT_FARE AS T8 ON T4.FLIGHT_ID = T8.FLIGHT_ID JOIN CITY AS T9 ON T9.CITY_CODE = T5.CITY_CODE JOIN CITY AS T10 ON T10.CITY_CODE = T6.CITY_CODE JOIN AIRCRAFT AS T11 ON T7.AIRCRAFT_CODE = T11.AIRCRAFT_CODE JOIN FARE AS T12 ON T8.FARE_ID = T12.FARE_ID JOIN FARE_BASIS AS T13 ON T12.FARE_BASIS_CODE = T13.FARE_BASIS_CODE WHERE T1.CITY_NAME = "DALLAS" AND T13.CLASS_TYPE = "FIRST" AND T9.CITY_NAME = "SAN FRANCISCO" AND T10.CITY_NAME = "PHILADELPHIA" AND T4.AIRLINE_CODE = "AA";
SELECT DISTINCT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "BOSTON" AND T5.CITY_NAME = "DENVER" AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "BOSTON" AND T5.CITY_NAME = "DENVER" ORDER BY T3.DEPARTURE_TIME LIMIT 1);
SELECT DISTINCT T3.CITY_CODE FROM AIRPORT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.AIRPORT_CODE = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.CITY_CODE = T4.CITY_CODE JOIN FLIGHT AS T5 ON T5.TO_AIRPORT = T1.AIRPORT_CODE JOIN AIRPORT AS T6 ON T6.AIRPORT_CODE = T4.AIRPORT_CODE JOIN FLIGHT AS T7 ON T7.TO_AIRPORT = T6.AIRPORT_CODE WHERE T5.AIRLINE_CODE = "NX" AND T7.AIRLINE_CODE = "CP";
SELECT COUNT( DISTINCT T4.AIRLINE_CODE ) FROM FLIGHT_FARE AS T1 JOIN FARE AS T2 ON T1.FARE_ID = T2.FARE_ID JOIN FLIGHT AS T3 ON T3.FLIGHT_ID = T1.FLIGHT_ID JOIN AIRLINE AS T4 ON T3.AIRLINE_CODE = T4.AIRLINE_CODE WHERE T2.FARE_BASIS_CODE = "YN";
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE T3.ARRIVAL_TIME < T3.DEPARTURE_TIME AND T2.DAY_NUMBER = 22 AND T2.MONTH_NUMBER = 3 AND T2.YEAR = 1991 AND T6.CITY_NAME = "PHILADELPHIA" AND T7.CITY_NAME = "OAKLAND";
SELECT DISTINCT COUNT( * ) , T3.AIRLINE_CODE FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE WHERE T1.CITY_NAME = "ATLANTA" GROUP BY T3.AIRLINE_CODE;
SELECT DISTINCT T5.AIRLINE_CODE FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRLINE AS T5 ON T3.AIRLINE_CODE = T5.AIRLINE_CODE JOIN AIRPORT_SERVICE AS T6 ON T3.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T4.CITY_CODE JOIN CITY AS T8 ON T8.CITY_CODE = T6.CITY_CODE WHERE T1.CITY_NAME = "DALLAS" AND T7.CITY_NAME = "FORT WORTH" AND T5.AIRLINE_NAME LIKE "UNITED" AND T8.CITY_NAME = "BOSTON";
SELECT DISTINCT T4.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT_STOP AS T3 ON T3.STOP_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT AS T4 ON T4.FLIGHT_ID = T3.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T4.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T4.FROM_AIRPORT = T6.AIRPORT_CODE JOIN DAYS AS T7 ON T4.FLIGHT_DAYS = T7.DAYS_CODE JOIN CITY AS T8 ON T8.CITY_CODE = T5.CITY_CODE JOIN CITY AS T9 ON T9.CITY_CODE = T6.CITY_CODE JOIN DATE_DAY AS T10 ON T7.DAY_NAME = T10.DAY_NAME WHERE T1.CITY_NAME = "DALLAS" AND T10.DAY_NUMBER = 21 AND T10.MONTH_NUMBER = 2 AND T10.YEAR = 1991 AND T8.CITY_NAME = "SAN FRANCISCO" AND T9.CITY_NAME = "PHILADELPHIA";
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN FLIGHT_FARE AS T4 ON T3.FLIGHT_ID = T4.FLIGHT_ID JOIN FARE AS T5 ON T4.FARE_ID = T5.FARE_ID JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN AIRPORT_SERVICE AS T7 ON T3.TO_AIRPORT = T7.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T8 ON T3.FROM_AIRPORT = T8.AIRPORT_CODE JOIN FARE_BASIS AS T9 ON T5.FARE_BASIS_CODE = T9.FARE_BASIS_CODE JOIN DAYS AS T10 ON T9.BASIS_DAYS = T10.DAYS_CODE JOIN FARE AS T11 ON T6.FARE_ID = T11.FARE_ID JOIN CITY AS T12 ON T12.CITY_CODE = T7.CITY_CODE JOIN STATE AS T13 ON T13.STATE_CODE = T12.STATE_CODE JOIN CITY AS T14 ON T14.CITY_CODE = T8.CITY_CODE JOIN DATE_DAY AS T15 ON T10.DAY_NAME = T15.DAY_NAME WHERE ( ( ( ( T2.DAY_NUMBER = 27 AND T2.MONTH_NUMBER = 12 AND T2.YEAR = 1991 AND T15.DAY_NUMBER = 27 AND T15.MONTH_NUMBER = 12 AND T15.YEAR = 1991 AND T5.ROUND_TRIP_COST IS NOT NULL ) OR ( T2.DAY_NUMBER = 28 AND T2.MONTH_NUMBER = 12 AND T2.YEAR = 1991 AND T15.DAY_NUMBER = 28 AND T15.MONTH_NUMBER = 12 AND T15.YEAR = 1991 AND T5.ROUND_TRIP_COST IS NOT NULL ) ) AND T11.ROUND_TRIP_COST IS NOT NULL ) AND T12.CITY_NAME = "ORLANDO" AND T13.STATE_NAME = "FLORIDA" ) AND T14.CITY_NAME = "INDIANAPOLIS";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE ( ( T1.CITY_NAME = "ATLANTA" AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "BOSTON" AND T5.CITY_NAME = "ATLANTA" ORDER BY T3.DEPARTURE_TIME LIMIT 1) ) AND T5.CITY_NAME = "BOSTON" ) OR ( ( T1.CITY_NAME = "BOSTON" AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "ATLANTA" AND T5.CITY_NAME = "BOSTON" ORDER BY T3.DEPARTURE_TIME DESC LIMIT 1) ) AND T5.CITY_NAME = "ATLANTA" );
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "MIAMI" AND T3.ARRIVAL_TIME < 1600 AND T5.CITY_NAME = "CLEVELAND" AND T3.AIRLINE_CODE = "US";
SELECT DISTINCT T1.GROUND_FARE FROM GROUND_SERVICE AS T1 JOIN CITY AS T2 ON T1.CITY_CODE = T2.CITY_CODE WHERE T2.CITY_NAME = "PHILADELPHIA" AND T1.TRANSPORT_TYPE = "LIMOUSINE";
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE ( ( ( ( T3.DEPARTURE_TIME BETWEEN 0 AND 1200 ) AND T2.DAY_NUMBER = 23 AND T2.MONTH_NUMBER = 4 AND T2.YEAR = 1991 ) OR ( ( T3.DEPARTURE_TIME BETWEEN 1200 AND 1800 ) AND T2.DAY_NUMBER = 23 AND T2.MONTH_NUMBER = 4 AND T2.YEAR = 1991 ) ) AND T6.CITY_NAME = "BOSTON" ) AND T7.CITY_NAME = "ATLANTA";
SELECT DISTINCT T2.AIRCRAFT_CODE , T2.CAPACITY FROM EQUIPMENT_SEQUENCE AS T1 JOIN AIRCRAFT AS T2 ON T1.AIRCRAFT_CODE = T2.AIRCRAFT_CODE JOIN FLIGHT AS T3 ON T3.AIRCRAFT_CODE_SEQUENCE = T1.AIRCRAFT_CODE_SEQUENCE WHERE T3.AIRLINE_CODE = "AA";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "NASHVILLE" AND T5.CITY_NAME = "ST. PETERSBURG" AND T3.TIME_ELAPSED = ( SELECT T3.TIME_ELAPSED FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "NASHVILLE" AND T5.CITY_NAME = "ST. PETERSBURG" ORDER BY T3.TIME_ELAPSED LIMIT 1);
SELECT COUNT( DISTINCT T1.FLIGHT_ID ) FROM FLIGHT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.FROM_AIRPORT = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE ( ( T3.CITY_NAME = "ATLANTA" ) OR ( T5.CITY_NAME = "ATLANTA" ) ) AND T1.AIRLINE_CODE = "CO";
SELECT DISTINCT AIRCRAFT_CODE FROM AIRCRAFT WHERE CAPACITY = ( SELECT CAPACITY FROM AIRCRAFT ORDER BY CAPACITY DESC LIMIT 1) ;
SELECT DISTINCT T8.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT_FARE AS T4 ON T3.FLIGHT_ID = T4.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN DAYS AS T6 ON T3.FLIGHT_DAYS = T6.DAYS_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE JOIN FARE AS T8 ON T4.FARE_ID = T8.FARE_ID JOIN DATE_DAY AS T9 ON T6.DAY_NAME = T9.DAY_NAME JOIN FARE_BASIS AS T10 ON T8.FARE_BASIS_CODE = T10.FARE_BASIS_CODE JOIN DAYS AS T11 ON T10.BASIS_DAYS = T11.DAYS_CODE JOIN DATE_DAY AS T12 ON T11.DAY_NAME = T12.DAY_NAME WHERE T1.CITY_NAME = "PHILADELPHIA" AND T9.DAY_NUMBER = 1 AND T9.MONTH_NUMBER = 8 AND T9.YEAR = 1991 AND T7.CITY_NAME = "ATLANTA" AND T12.DAY_NUMBER = 1 AND T12.MONTH_NUMBER = 8 AND T12.YEAR = 1991 AND T8.ROUND_TRIP_COST = ( SELECT T8.ROUND_TRIP_COST FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT_FARE AS T4 ON T3.FLIGHT_ID = T4.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN DAYS AS T6 ON T3.FLIGHT_DAYS = T6.DAYS_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE JOIN FARE AS T8 ON T4.FARE_ID = T8.FARE_ID JOIN DATE_DAY AS T9 ON T6.DAY_NAME = T9.DAY_NAME JOIN FARE_BASIS AS T10 ON T8.FARE_BASIS_CODE = T10.FARE_BASIS_CODE JOIN DAYS AS T11 ON T10.BASIS_DAYS = T11.DAYS_CODE JOIN DATE_DAY AS T12 ON T11.DAY_NAME = T12.DAY_NAME WHERE T1.CITY_NAME = "PHILADELPHIA" AND T9.DAY_NUMBER = 1 AND T9.MONTH_NUMBER = 8 AND T9.YEAR = 1991 AND T7.CITY_NAME = "ATLANTA" AND T12.DAY_NUMBER = 1 AND T12.MONTH_NUMBER = 8 AND T12.YEAR = 1991 ORDER BY T8.ROUND_TRIP_COST LIMIT 1);
SELECT DISTINCT FARE_ID FROM FARE WHERE FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE BASIS_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 1 AND MONTH_NUMBER = 8 AND YEAR = 1991 ) ) ) AND FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 1 AND MONTH_NUMBER = 8 AND YEAR = 1991 ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "PHILADELPHIA" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ATLANTA" ) ) ) ) AND ROUND_TRIP_COST = ( SELECT ROUND_TRIP_COST FROM FARE WHERE FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE BASIS_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 1 AND MONTH_NUMBER = 8 AND YEAR = 1991 ) ) ) AND FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 1 AND MONTH_NUMBER = 8 AND YEAR = 1991 ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "PHILADELPHIA" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ATLANTA" ) ) ) ) ORDER BY ROUND_TRIP_COST LIMIT 1) ;
SELECT DISTINCT T3.FLIGHT_ID FROM EQUIPMENT_SEQUENCE AS T1 JOIN AIRCRAFT AS T2 ON T1.AIRCRAFT_CODE = T2.AIRCRAFT_CODE JOIN FLIGHT AS T3 ON T3.AIRCRAFT_CODE_SEQUENCE = T1.AIRCRAFT_CODE_SEQUENCE JOIN DAYS AS T4 ON T3.FLIGHT_DAYS = T4.DAYS_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T3.FROM_AIRPORT = T6.AIRPORT_CODE JOIN DATE_DAY AS T7 ON T4.DAY_NAME = T7.DAY_NAME JOIN CITY AS T8 ON T8.CITY_CODE = T5.CITY_CODE JOIN CITY AS T9 ON T9.CITY_CODE = T6.CITY_CODE WHERE T2.BASIC_TYPE = "747" AND T3.DEPARTURE_TIME < 1000 AND T7.DAY_NUMBER = 22 AND T7.MONTH_NUMBER = 3 AND T7.YEAR = 1991 AND T8.CITY_NAME = "SAN FRANCISCO" AND T9.CITY_NAME = "BALTIMORE";
SELECT DISTINCT T4.FLIGHT_ID FROM FARE AS T1 JOIN FARE_BASIS AS T2 ON T1.FARE_BASIS_CODE = T2.FARE_BASIS_CODE JOIN FLIGHT_FARE AS T3 ON T3.FARE_ID = T1.FARE_ID JOIN FLIGHT AS T4 ON T4.FLIGHT_ID = T3.FLIGHT_ID JOIN AIRPORT AS T5 ON T4.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T4.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T6.CITY_CODE WHERE T5.AIRPORT_CODE = "SFO" AND T2.CLASS_TYPE = "FIRST" AND T7.CITY_NAME = "DALLAS FORT WORTH" AND T4.AIRLINE_CODE = "AA";
SELECT DISTINCT T2.BOOKING_CLASS , T3.FARE_ID FROM FARE_BASIS AS T1 JOIN CLASS_OF_SERVICE AS T2 ON T1.BOOKING_CLASS = T2.BOOKING_CLASS JOIN FARE AS T3 ON T3.FARE_BASIS_CODE = T1.FARE_BASIS_CODE JOIN FLIGHT_FARE AS T4 ON T4.FARE_ID = T3.FARE_ID JOIN FLIGHT AS T5 ON T5.FLIGHT_ID = T4.FLIGHT_ID WHERE T5.AIRLINE_CODE = "US";
SELECT DISTINCT T1.FLIGHT_ID FROM AIRPORT_SERVICE AS T3 JOIN CITY AS T6 ON T6.CITY_CODE = T3.CITY_CODE JOIN FLIGHT AS T1 ON T1.TO_AIRPORT = T3.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T4.CITY_CODE JOIN AIRPORT_SERVICE AS T2 ON T1.FROM_AIRPORT = T2.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T2.CITY_CODE JOIN DAYS AS T9 ON T1.FLIGHT_DAYS = T9.DAYS_CODE JOIN DATE_DAY AS T8 ON T9.DAY_NAME = T8.DAY_NAME WHERE (((T6.CITY_NAME = "DALLAS" AND T7.CITY_NAME = "FORT WORTH") AND T5.CITY_NAME = "BOSTON") AND T8.DAY_NUMBER = 8 AND T8.MONTH_NUMBER = 8 AND T8.YEAR = 1991) AND T1.DEPARTURE_TIME = (SELECT MIN(T1.DEPARTURE_TIME) FROM AIRPORT_SERVICE AS T3 JOIN CITY AS T6 ON T6.CITY_CODE = T3.CITY_CODE JOIN FLIGHT AS T1 ON T1.TO_AIRPORT = T3.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T4.CITY_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN DAYS AS T9 ON T1.FLIGHT_DAYS = T9.DAYS_CODE JOIN DATE_DAY AS T8 ON T9.DAY_NAME = T8.DAY_NAME JOIN AIRPORT_SERVICE AS T2 ON T1.FROM_AIRPORT = T2.AIRPORT_CODE WHERE (T6.CITY_NAME = "DALLAS" AND T7.CITY_NAME = "FORT WORTH") AND T5.CITY_NAME = "BOSTON" AND T8.DAY_NUMBER = 8 AND T8.MONTH_NUMBER = 8 AND T8.YEAR = 1991) ;
SELECT DISTINCT T7.ARRIVAL_TIME , T7.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_LEG AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FLIGHT AS T7 ON T7.FLIGHT_ID = T5.FLIGHT_ID WHERE T1.CITY_NAME = "BOSTON" AND T6.CITY_NAME = "PITTSBURGH" AND T3.FLIGHT_DAYS = "DAILY";
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE ( ( ( T2.DAY_NUMBER = 1 AND T2.MONTH_NUMBER = 3 AND T2.YEAR = 1991 AND T3.ARRIVAL_TIME = ( SELECT T3.ARRIVAL_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN DAYS AS T5 ON T3.FLIGHT_DAYS = T5.DAYS_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN DATE_DAY AS T7 ON T5.DAY_NAME = T7.DAY_NAME WHERE T1.CITY_NAME = "HOUSTON" AND T7.DAY_NUMBER = 1 AND T7.MONTH_NUMBER = 3 AND T7.YEAR = 1991 AND T6.CITY_NAME = "DALLAS" ORDER BY T3.ARRIVAL_TIME LIMIT 1) ) AND T6.CITY_NAME = "HOUSTON" ) AND T7.CITY_NAME = "DALLAS" ) OR ( ( ( T2.DAY_NUMBER = 1 AND T2.MONTH_NUMBER = 3 AND T2.YEAR = 1991 AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN DAYS AS T5 ON T3.FLIGHT_DAYS = T5.DAYS_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN DATE_DAY AS T7 ON T5.DAY_NAME = T7.DAY_NAME WHERE T1.CITY_NAME = "DALLAS" AND T7.DAY_NUMBER = 1 AND T7.MONTH_NUMBER = 3 AND T7.YEAR = 1991 AND T6.CITY_NAME = "HOUSTON" ORDER BY T3.DEPARTURE_TIME DESC LIMIT 1) ) AND T6.CITY_NAME = "DALLAS" ) AND T7.CITY_NAME = "HOUSTON" );
SELECT DISTINCT FARE_ID FROM FARE WHERE ONE_DIRECTION_COST = ( SELECT T2.ONE_DIRECTION_COST FROM FLIGHT_FARE AS T1 JOIN FARE AS T2 ON T1.FARE_ID = T2.FARE_ID JOIN FLIGHT AS T3 ON T3.FLIGHT_ID = T1.FLIGHT_ID ORDER BY T2.ONE_DIRECTION_COST DESC LIMIT 1) ;
SELECT DISTINCT T1.FLIGHT_ID FROM FLIGHT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.TO_AIRPORT = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN AIRPORT_SERVICE AS T6 ON T1.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T6.CITY_CODE WHERE ( ( ( T3.CITY_NAME = "BALTIMORE" ) OR ( T5.CITY_NAME = "WASHINGTON" AND T5.STATE_CODE = "DC" ) ) AND T1.ARRIVAL_TIME < 1230 ) AND T7.CITY_NAME = "DENVER";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T3.DEPARTURE_TIME > 1800 AND T4.AIRPORT_CODE = "IAD";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "WASHINGTON" AND T6.CITY_NAME = "SAN FRANCISCO" AND T3.ARRIVAL_TIME < T3.DEPARTURE_TIME;
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE ( ( ( ( T3.DEPARTURE_TIME <= 2200 AND T3.DEPARTURE_TIME >= 2000 ) AND T2.DAY_NUMBER = 22 AND T2.MONTH_NUMBER = 2 AND T2.YEAR = 1991 ) AND T6.CITY_NAME = "DALLAS" ) AND T7.CITY_NAME = "HOUSTON" ) OR ( ( ( ( T3.DEPARTURE_TIME BETWEEN 0 AND 800 ) AND T2.DAY_NUMBER = 22 AND T2.MONTH_NUMBER = 2 AND T2.YEAR = 1991 ) AND T6.CITY_NAME = "HOUSTON" ) AND T7.CITY_NAME = "DALLAS" );
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE T1.CITY_NAME = "DALLAS" AND T6.CITY_NAME = "FORT WORTH" AND T3.DEPARTURE_TIME > 2000 AND T7.CITY_NAME = "SAN FRANCISCO";
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "OAKLAND" AND T3.FLIGHT_NUMBER = 813 AND T5.CITY_NAME = "BOSTON" AND T3.STOPS = 0 AND T3.AIRLINE_CODE = "AA";
SELECT DISTINCT T1.FLIGHT_ID FROM FLIGHT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.TO_AIRPORT = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE ( ( T1.AIRLINE_CODE = "NW" ) OR ( T1.AIRLINE_CODE = "UA" ) ) AND ( ( T3.CITY_NAME = "DENVER" ) OR ( T5.CITY_NAME = "DENVER" ) );
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T3.DEPARTURE_TIME <= 1400 AND T3.DEPARTURE_TIME >= 1200 AND T1.CITY_NAME = "DALLAS" AND T5.CITY_NAME = "BOSTON" AND T3.STOPS = 0;
SELECT DISTINCT T1.FLIGHT_ID FROM FLIGHT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.TO_AIRPORT = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN AIRPORT_SERVICE AS T4 ON T1.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN AIRPORT_SERVICE AS T6 ON T1.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T6.CITY_CODE WHERE ( ( ( ( T3.CITY_NAME = "SAN FRANCISCO" ) OR ( T5.CITY_NAME = "OAKLAND" ) ) AND T1.ARRIVAL_TIME < 1000 ) AND T7.CITY_NAME = "BOSTON" ) AND T1.CONNECTIONS = 0;
SELECT DISTINCT T1.GROUND_FARE FROM GROUND_SERVICE AS T1 JOIN AIRPORT AS T2 ON T1.AIRPORT_CODE = T2.AIRPORT_CODE WHERE T2.AIRPORT_CODE = "PHL" AND T1.TRANSPORT_TYPE = "AIR TAXI OPERATION";
SELECT DISTINCT T9.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID JOIN FLIGHT_FARE AS T8 ON T8.FARE_ID = T7.FARE_ID JOIN FLIGHT AS T9 ON T9.FLIGHT_ID = T8.FLIGHT_ID JOIN DAYS AS T10 ON T9.FLIGHT_DAYS = T10.DAYS_CODE JOIN AIRPORT_SERVICE AS T11 ON T9.TO_AIRPORT = T11.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T12 ON T9.FROM_AIRPORT = T12.AIRPORT_CODE JOIN FARE_BASIS AS T13 ON T7.FARE_BASIS_CODE = T13.FARE_BASIS_CODE JOIN DATE_DAY AS T14 ON T10.DAY_NAME = T14.DAY_NAME JOIN CITY AS T15 ON T15.CITY_CODE = T11.CITY_CODE JOIN CITY AS T16 ON T16.CITY_CODE = T12.CITY_CODE JOIN DAYS AS T17 ON T13.BASIS_DAYS = T17.DAYS_CODE JOIN DATE_DAY AS T18 ON T17.DAY_NAME = T18.DAY_NAME WHERE T1.CITY_NAME = "WASHINGTON" AND T5.CITY_NAME = "DENVER" AND T18.DAY_NUMBER = 20 AND T18.MONTH_NUMBER = 4 AND T18.YEAR = 1991 AND T9.DEPARTURE_TIME <= 530 AND T9.DEPARTURE_TIME >= 430 AND T7.ONE_DIRECTION_COST = ( SELECT T7.ONE_DIRECTION_COST FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE JOIN FLIGHT_FARE AS T6 ON T3.FLIGHT_ID = T6.FLIGHT_ID JOIN FARE AS T7 ON T6.FARE_ID = T7.FARE_ID JOIN FARE_BASIS AS T8 ON T7.FARE_BASIS_CODE = T8.FARE_BASIS_CODE JOIN DAYS AS T9 ON T8.BASIS_DAYS = T9.DAYS_CODE JOIN DATE_DAY AS T10 ON T9.DAY_NAME = T10.DAY_NAME WHERE T1.CITY_NAME = "WASHINGTON" AND T5.CITY_NAME = "DENVER" AND T10.DAY_NUMBER = 20 AND T10.MONTH_NUMBER = 4 AND T10.YEAR = 1991 ORDER BY T7.ONE_DIRECTION_COST LIMIT 1) AND T14.DAY_NUMBER = 20 AND T14.MONTH_NUMBER = 4 AND T14.YEAR = 1991 AND T15.CITY_NAME = "DENVER" AND T16.CITY_NAME = "WASHINGTON";
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "PHILADELPHIA" AND T6.CITY_NAME = "SAN FRANCISCO" AND T3.DEPARTURE_TIME NOT BETWEEN 601 AND 1759;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN FLIGHT_FARE AS T4 ON T3.FLIGHT_ID = T4.FLIGHT_ID JOIN FARE AS T5 ON T4.FARE_ID = T5.FARE_ID WHERE T1.CITY_NAME = "DALLAS" AND T5.ROUND_TRIP_COST IS NOT NULL;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID JOIN FARE_BASIS AS T8 ON T7.FARE_BASIS_CODE = T8.FARE_BASIS_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T8.CLASS_TYPE = "COACH" AND T6.CITY_NAME = "BOSTON" AND T3.DEPARTURE_TIME NOT BETWEEN 601 AND 1759;
SELECT COUNT( DISTINCT T3.FLIGHT_ID ) FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN DAYS AS T5 ON T3.FLIGHT_DAYS = T5.DAYS_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN DATE_DAY AS T7 ON T5.DAY_NAME = T7.DAY_NAME WHERE T1.CITY_NAME = "OAKLAND" AND T7.DAY_NUMBER = 27 AND T7.MONTH_NUMBER = 7 AND T7.YEAR = 1991 AND T6.CITY_NAME = "DALLAS" AND T3.STOPS = 0;
SELECT DISTINCT T8.ARRIVAL_TIME , T8.DEPARTURE_TIME FROM FLIGHT AS T1 JOIN DAYS AS T2 ON T1.FLIGHT_DAYS = T2.DAYS_CODE JOIN AIRPORT_SERVICE AS T3 ON T1.TO_AIRPORT = T3.AIRPORT_CODE JOIN FLIGHT_LEG AS T4 ON T1.FLIGHT_ID = T4.FLIGHT_ID JOIN AIRPORT_SERVICE AS T5 ON T1.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T3.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE JOIN FLIGHT AS T8 ON T8.FLIGHT_ID = T4.FLIGHT_ID WHERE ( ( ( ( T1.DEPARTURE_TIME <= 2400 AND T1.DEPARTURE_TIME >= 1800 ) AND T2.DAY_NAME = "FRIDAY" ) OR ( ( T1.DEPARTURE_TIME <= 600 AND T1.DEPARTURE_TIME >= 0 ) AND T2.DAY_NAME = "SATURDAY" ) ) AND T6.CITY_NAME = "SAN FRANCISCO" ) AND T7.CITY_NAME = "BALTIMORE";
SELECT DISTINCT T2.FLIGHT_ID FROM FOOD_SERVICE AS T1 JOIN FLIGHT AS T2 ON T1.MEAL_CODE = T2.MEAL_CODE JOIN AIRPORT_SERVICE AS T3 ON T2.TO_AIRPORT = T3.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T2.FROM_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T3.CITY_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE WHERE T2.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T5.CITY_NAME = "ATLANTA" AND T3.AIRLINE_CODE = "DL" ORDER BY T3.DEPARTURE_TIME LIMIT 1) AND T5.CITY_NAME = "ATLANTA" AND T6.CITY_NAME = "SAN FRANCISCO" AND T2.AIRLINE_CODE = "DL";
SELECT DISTINCT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "DENVER" AND T5.CITY_NAME = "BOSTON" AND T3.AIRLINE_CODE = "UA" AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN CITY AS T5 ON T5.CITY_CODE = T4.CITY_CODE WHERE T1.CITY_NAME = "DENVER" AND T5.CITY_NAME = "BOSTON" AND T3.AIRLINE_CODE = "UA" ORDER BY T3.DEPARTURE_TIME DESC LIMIT 1);
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN FOOD_SERVICE AS T4 ON T4.MEAL_CODE = T3.MEAL_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T3.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE JOIN CITY AS T8 ON T8.CITY_CODE = T6.CITY_CODE WHERE T2.DAY_NUMBER = 23 AND T2.MONTH_NUMBER = 4 AND T2.YEAR = 1991 AND T7.CITY_NAME = "SALT LAKE CITY" AND T8.CITY_NAME = "OAKLAND" AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN FOOD_SERVICE AS T4 ON T4.MEAL_CODE = T3.MEAL_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.TO_AIRPORT = T5.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T6 ON T3.FROM_AIRPORT = T6.AIRPORT_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE JOIN CITY AS T8 ON T8.CITY_CODE = T6.CITY_CODE WHERE T2.DAY_NUMBER = 23 AND T2.MONTH_NUMBER = 4 AND T2.YEAR = 1991 AND T7.CITY_NAME = "SALT LAKE CITY" AND T8.CITY_NAME = "OAKLAND" ORDER BY T3.DEPARTURE_TIME DESC LIMIT 1);
SELECT DISTINCT T7.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE ( ( ( T3.FLIGHT_NUMBER = 201 OR T3.FLIGHT_NUMBER = 343 ) AND T1.CITY_NAME = "DENVER" ) AND T6.CITY_NAME = "BOSTON" ) AND T3.AIRLINE_CODE = "UA";
SELECT DISTINCT T4.GROUND_FARE , T4.TRANSPORT_TYPE FROM AIRPORT AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.AIRPORT_CODE = T2.AIRPORT_CODE JOIN CITY AS T3 ON T3.CITY_CODE = T2.CITY_CODE JOIN GROUND_SERVICE AS T4 ON T4.AIRPORT_CODE = T1.AIRPORT_CODE JOIN CITY AS T5 ON T4.CITY_CODE = T5.CITY_CODE WHERE T3.CITY_NAME = "PITTSBURGH" AND T5.CITY_NAME = "PITTSBURGH";
SELECT DISTINCT T3.FLIGHT_ID FROM DAYS AS T1 JOIN DATE_DAY AS T2 ON T1.DAY_NAME = T2.DAY_NAME JOIN FLIGHT AS T3 ON T3.FLIGHT_DAYS = T1.DAYS_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T5 ON T3.FROM_AIRPORT = T5.AIRPORT_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN CITY AS T7 ON T7.CITY_CODE = T5.CITY_CODE WHERE ( ( ( ( ( ( ( T3.ARRIVAL_TIME < 41 OR T3.TIME_ELAPSED >= 60 ) AND T3.DEPARTURE_TIME > T3.ARRIVAL_TIME ) AND T2.DAY_NUMBER = 22 AND T2.MONTH_NUMBER = 3 AND T2.YEAR = 1991 ) OR ( T2.DAY_NUMBER = 22 AND T2.MONTH_NUMBER = 3 AND T2.YEAR = 1991 AND NOT ( ( T3.ARRIVAL_TIME < 41 OR T3.TIME_ELAPSED >= 60 ) AND T3.DEPARTURE_TIME > T3.ARRIVAL_TIME ) ) ) AND T3.ARRIVAL_TIME < 1700 ) AND T6.CITY_NAME = "PITTSBURGH" ) AND T7.CITY_NAME = "LOS ANGELES" ) AND T3.STOPS = 0;
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN FARE AS T7 ON T5.FARE_ID = T7.FARE_ID WHERE T1.CITY_NAME = "LAS VEGAS" AND T6.CITY_NAME = "NEW YORK" AND T3.STOPS = 0 AND T3.AIRLINE_CODE = "TW";
SELECT DISTINCT T6.FARE_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN FARE AS T6 ON T5.FARE_ID = T6.FARE_ID WHERE T4.AIRPORT_CODE = "BWI" AND T1.CITY_NAME = "ATLANTA" AND T6.ROUND_TRIP_COST = ( SELECT T6.ROUND_TRIP_COST FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.FROM_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT AS T4 ON T3.TO_AIRPORT = T4.AIRPORT_CODE JOIN FLIGHT_FARE AS T5 ON T3.FLIGHT_ID = T5.FLIGHT_ID JOIN FARE AS T6 ON T5.FARE_ID = T6.FARE_ID WHERE T4.AIRPORT_CODE = "BWI" AND T1.CITY_NAME = "ATLANTA" ORDER BY T6.ROUND_TRIP_COST LIMIT 1);
SELECT DISTINCT T3.FLIGHT_ID FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN DAYS AS T5 ON T3.FLIGHT_DAYS = T5.DAYS_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN DATE_DAY AS T7 ON T5.DAY_NAME = T7.DAY_NAME WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T7.DAY_NUMBER = 25 AND T7.MONTH_NUMBER = 6 AND T7.YEAR = 1991 AND T6.CITY_NAME = "WASHINGTON" AND T3.STOPS = 0 AND T3.DEPARTURE_TIME = ( SELECT T3.DEPARTURE_TIME FROM CITY AS T1 JOIN AIRPORT_SERVICE AS T2 ON T1.CITY_CODE = T2.CITY_CODE JOIN FLIGHT AS T3 ON T3.TO_AIRPORT = T2.AIRPORT_CODE JOIN AIRPORT_SERVICE AS T4 ON T3.FROM_AIRPORT = T4.AIRPORT_CODE JOIN DAYS AS T5 ON T3.FLIGHT_DAYS = T5.DAYS_CODE JOIN CITY AS T6 ON T6.CITY_CODE = T4.CITY_CODE JOIN DATE_DAY AS T7 ON T5.DAY_NAME = T7.DAY_NAME WHERE T1.CITY_NAME = "SAN FRANCISCO" AND T7.DAY_NUMBER = 25 AND T7.MONTH_NUMBER = 6 AND T7.YEAR = 1991 AND T6.CITY_NAME = "WASHINGTON" AND T3.STOPS = 0 ORDER BY T3.DEPARTURE_TIME LIMIT 1);
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "MILWAUKEE" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "DENVER" ) ) AND DEPARTURE_TIME BETWEEN 0 AND 1000 ;
SELECT DISTINCT FARE_ID FROM FARE WHERE ( ( ( FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE BASIS_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 23 AND MONTH_NUMBER = 4 AND YEAR = 1991 ) ) ) AND FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE ( ( ( ( DEPARTURE_TIME BETWEEN 1800 AND 2200 ) AND FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 23 AND MONTH_NUMBER = 4 AND YEAR = 1991 ) ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ORLANDO" ) ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "MILWAUKEE" ) ) ) ) ) ) OR ( FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE BASIS_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 23 AND MONTH_NUMBER = 4 AND YEAR = 1991 ) ) ) AND FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE ( ( ( ( DEPARTURE_TIME BETWEEN 0 AND 1200 ) AND FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 23 AND MONTH_NUMBER = 4 AND YEAR = 1991 ) ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ORLANDO" ) ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "MILWAUKEE" ) ) ) ) ) ) ) AND ROUND_TRIP_REQUIRED = "NO" ) ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE ARRIVAL_TIME < 1900 AND FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FARE WHERE ROUND_TRIP_COST IS NOT NULL ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SEATTLE" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "BURBANK" ) ) ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE DEPARTURE_TIME > 400 AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SAN FRANCISCO" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "DALLAS" ) ) AND CONNECTIONS > 0 ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FARE WHERE ( ( FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE CLASS_TYPE = "FIRST" ) ) OR ( FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE CLASS_TYPE = "COACH" ) ) ) ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "ORLANDO" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT WHERE AIRPORT_CODE = "JFK" ) ;
SELECT DISTINCT COMPARTMENT , MEAL_CODE , MEAL_NUMBER FROM FOOD_SERVICE WHERE MEAL_CODE IN ( SELECT MEAL_CODE FROM FLIGHT WHERE AIRLINE_CODE = "FF" ) ;
SELECT DISTINCT FARE_ID FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "BOSTON" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) AND ONE_DIRECTION_COST = ( SELECT ONE_DIRECTION_COST FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "BOSTON" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) ORDER BY ONE_DIRECTION_COST LIMIT 1) ;
SELECT DISTINCT FARE_ID FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "WASHINGTON" AND STATE_CODE = "DC" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) AND ONE_DIRECTION_COST = ( SELECT ONE_DIRECTION_COST FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "WASHINGTON" AND STATE_CODE = "DC" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) ORDER BY ONE_DIRECTION_COST LIMIT 1) ;
SELECT DISTINCT FARE_ID FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT WHERE AIRPORT_CODE = "BWI" ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) AND ONE_DIRECTION_COST = ( SELECT ONE_DIRECTION_COST FROM FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FLIGHT_FARE WHERE FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT WHERE AIRPORT_CODE = "BWI" ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SALT LAKE CITY" ) ) ) ) ORDER BY ONE_DIRECTION_COST LIMIT 1) ;
SELECT DISTINCT TRANSPORT_TYPE FROM GROUND_SERVICE WHERE AIRPORT_CODE IN ( SELECT AIRPORT_CODE FROM AIRPORT WHERE AIRPORT_CODE = "LGA" ) AND CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "NEW YORK" ) ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME = "MONDAY" ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "PHOENIX" AND STATE_CODE IN ( SELECT STATE_CODE FROM STATE WHERE STATE_NAME = "ARIZONA" ) ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "CHARLOTTE" AND STATE_CODE IN ( SELECT STATE_CODE FROM STATE WHERE STATE_NAME = "NORTH CAROLINA" ) ) ) ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SAN JOSE" ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "HOUSTON" AND STATE_CODE IN ( SELECT STATE_CODE FROM STATE WHERE STATE_NAME = "TEXAS" ) ) ) AND STOPS = 0 ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE DEPARTURE_TIME <= 1900 AND DEPARTURE_TIME >= 1800 AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "NASHVILLE" ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "NEWARK" ) ) AND AIRLINE_CODE = "AA" ;
SELECT DISTINCT FLIGHT_ID FROM FLIGHT WHERE FLIGHT_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 10 AND MONTH_NUMBER = 6 AND YEAR = 1993 ) ) AND FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE FARE_ID IN ( SELECT FARE_ID FROM FARE WHERE FARE_BASIS_CODE IN ( SELECT FARE_BASIS_CODE FROM FARE_BASIS WHERE BASIS_DAYS IN ( SELECT DAYS_CODE FROM DAYS WHERE DAY_NAME IN ( SELECT DAY_NAME FROM DATE_DAY WHERE DAY_NUMBER = 10 AND MONTH_NUMBER = 6 AND YEAR = 1991 ) ) ) AND ROUND_TRIP_COST <= 300 AND ROUND_TRIP_COST IS NOT NULL ) ) AND FLIGHT_ID IN ( SELECT FLIGHT_ID FROM FLIGHT_STOP WHERE STOP_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "SAN FRANCISCO" ) ) ) AND TO_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "TACOMA" AND STATE_CODE IN ( SELECT STATE_CODE FROM STATE WHERE STATE_NAME = "WASHINGTON" ) ) ) AND FROM_AIRPORT IN ( SELECT AIRPORT_CODE FROM AIRPORT_SERVICE WHERE CITY_CODE IN ( SELECT CITY_CODE FROM CITY WHERE CITY_NAME = "LOS ANGELES" ) ) ;
SELECT DISTINCT ADVISORY_REQUIREMENT , ENFORCED_REQUIREMENT , NAME FROM COURSE WHERE DEPARTMENT = "EECS" AND NUMBER = 595 ;
SELECT COUNT( * ) > 0 FROM COURSE_OFFERING AS T1 JOIN COURSE_OFFERING AS T2 ON T1.SEMESTER = T2.SEMESTER JOIN COURSE AS T3 ON T3.COURSE_ID = T2.COURSE_ID JOIN COURSE AS T4 ON T4.COURSE_ID = T1.COURSE_ID JOIN COURSE_PREREQUISITE AS T5 ON T3.COURSE_ID = T5.PRE_COURSE_ID JOIN COURSE AS T6  ON T6.COURSE_ID = T5.COURSE_ID WHERE T3.DEPARTMENT = "EECS" AND T3.NUMBER = 281 AND T4.DEPARTMENT = "EECS" AND T4.NUMBER = 370;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T3.WORKLOAD FROM COURSE AS T1 INNER JOIN AREA AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID WHERE T2.AREA LIKE "%software%" AND T3.WORKLOAD < ( SELECT T2.WORKLOAD FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 ON T2.COURSE_ID = T1.COURSE_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 ORDER BY T2.WORKLOAD LIMIT 1) ORDER BY T3.WORKLOAD ;
SELECT COUNT( T4.NAME ) , T4.NAME FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 GROUP BY T4.NAME ORDER BY COUNT( T4.NAME ) DESC LIMIT 5;
SELECT COUNT( * ) > 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 AND T4.SEMESTER = "WN" AND T4.YEAR = 2016;
SELECT COUNT( * ) > 0 FROM ( SELECT COURSE_ID FROM STUDENT_RECORD WHERE EARN_CREDIT = "Y" AND STUDENT_ID = 1 ) AS T1, COURSE AS T2 JOIN COURSE_OFFERING AS T3 ON T2.COURSE_ID = T3.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T3.SEMESTER WHERE T2.COURSE_ID NOT IN ( T1.COURSE_ID ) AND T2.COURSE_ID NOT IN (SELECT DISTINCT COURSE_ID FROM COURSE_PREREQUISITE WHERE PRE_COURSE_ID NOT IN (T1.COURSE_ID) ) AND T2.DEPARTMENT = "EECS" AND T2.NUMBER = 270 AND T4.SEMESTER = "SU" AND T4.YEAR = 2016 ; 
SELECT DISTINCT T3.DEPARTMENT , T3.NAME , T3.NUMBER FROM COURSE AS T1 JOIN COURSE_PREREQUISITE AS T2 ON T1.COURSE_ID = T2.PRE_COURSE_ID JOIN COURSE AS T3 ON T3.COURSE_ID = T2.COURSE_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER JOIN INSTRUCTOR AS T5 ON T3.INSTRUCTOR_ID = T5.INSTRUCTOR_ID WHERE T5.NAME LIKE "%deorio%" AND T4.SEMESTER = "FA" AND T4.YEAR = 2016;
SELECT DISTINCT T2.FRIDAY , T2.MONDAY , T2.SATURDAY , T2.SUNDAY , T2.THURSDAY , T2.TUESDAY , T2.WEDNESDAY , T3.SEMESTER , T3.YEAR FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 ORDER BY T3.SEMESTER_ID DESC LIMIT 10;
SELECT DISTINCT T4.NAME FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T2.OFFERING_ID = T3.OFFERING_ID JOIN INSTRUCTOR AS T4 ON T4.INSTRUCTOR_ID = T3.INSTRUCTOR_ID WHERE T1.DEPARTMENT = "EECS" AND T4.INSTRUCTOR_ID NOT IN ( SELECT DISTINCT T3.INSTRUCTOR_ID FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T2.OFFERING_ID = T3.OFFERING_ID WHERE T1.HAS_LAB = "Y");
SELECT COUNT( * ) > 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE ( T1.DESCRIPTION LIKE "%seminar%" OR T1.NAME LIKE "%seminar%" ) AND ( T1.DESCRIPTION LIKE "%Natural Language Processing%" OR T1.NAME LIKE "%Natural Language Processing%" ) AND T3.YEAR = 2016;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE ( T1.NUMBER = 398 OR T1.NUMBER = 498 OR T1.NUMBER = 598 ) AND T1.DEPARTMENT = "EECS" AND T3.SEMESTER = "WN" AND T3.YEAR = 2017 ;
SELECT DISTINCT T1.NAME FROM INSTRUCTOR AS T1 INNER JOIN OFFERING_INSTRUCTOR AS T2 ON T2.INSTRUCTOR_ID = T1.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS T3 ON T2.OFFERING_ID = T3.OFFERING_ID INNER JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T3.SEMESTER INNER JOIN COURSE AS T5 ON T5.COURSE_ID = T3.COURSE_ID WHERE T5.NAME LIKE "%Natural Language Processing%" AND T4.SEMESTER = "WN" AND T4.YEAR = 2017 ;
SELECT DISTINCT T6.NAME FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER INNER JOIN PROGRAM_COURSE AS T4 ON T4.COURSE_ID = T2.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS T5 ON T5.OFFERING_ID = T2.OFFERING_ID INNER JOIN INSTRUCTOR AS T6 ON T5.INSTRUCTOR_ID = T6.INSTRUCTOR_ID WHERE T4.CATEGORY LIKE "%MDE%" AND T3.SEMESTER = "WN" AND T3.YEAR = 2017 ;
SELECT DISTINCT T1.NAME FROM INSTRUCTOR AS T1 INNER JOIN OFFERING_INSTRUCTOR AS T2 ON T2.INSTRUCTOR_ID = T1.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS T3 ON T2.OFFERING_ID = T3.OFFERING_ID INNER JOIN COURSE AS T4 ON T4.COURSE_ID = T3.COURSE_ID INNER JOIN SEMESTER AS T5 ON T5.SEMESTER_ID = T3.SEMESTER WHERE T4.DEPARTMENT = "EECS" AND T4.NUMBER = 482 AND T5.SEMESTER = "FA" AND T5.YEAR = 2016 ;
SELECT DISTINCT T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "EECS" AND T2.NUMBER = 370;
SELECT DISTINCT NUMBER FROM COURSE WHERE ( DESCRIPTION LIKE "%video game%" OR NAME LIKE "%video game%" ) AND DEPARTMENT = "EECS" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER INNER JOIN PROGRAM_COURSE AS T4 ON T4.COURSE_ID = T2.COURSE_ID WHERE T4.CATEGORY LIKE "%MDE%" AND T3.SEMESTER = "WN" AND T3.YEAR = 2017 ;
SELECT DISTINCT HAS_PROJECTS FROM COURSE WHERE DEPARTMENT = "EECS" AND NUMBER = 595 ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T2.FRIDAY = "N" AND T2.MONDAY = "N" AND T3.CATEGORY LIKE "%ULCS%" AND T4.SEMESTER = "FA" AND T4.YEAR = 2016;
SELECT DISTINCT NAME , NUMBER FROM COURSE WHERE DEPARTMENT = "EECS" AND HAS_LAB = "N" AND NUMBER < 400 + 100 AND NUMBER >= 400 ;
SELECT DISTINCT DEPARTMENT , NAME , NUMBER FROM COURSE WHERE ( DESCRIPTION LIKE "%artificial intelligence%" OR NAME LIKE "%artificial intelligence%" ) AND CREDITS = 4 ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN AREA AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID WHERE ( T2.AREA LIKE "%artificial intelligence%" OR T1.DESCRIPTION LIKE "%artificial intelligence%" OR T1.NAME LIKE "%artificial intelligence%" ) AND T3.CATEGORY LIKE "%MDE%" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN AREA AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE ( T2.AREA LIKE "%artificial intelligence%" OR T1.DESCRIPTION LIKE "%artificial intelligence%" OR T1.NAME LIKE "%artificial intelligence%" ) AND T1.ENFORCED_REQUIREMENT = "N / A" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T4.SEMESTER FROM ( SELECT COURSE_ID FROM STUDENT_RECORD WHERE EARN_CREDIT = "Y" AND STUDENT_ID = 1 ) AS T5, COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T1.COURSE_ID NOT IN ( T5.COURSE_ID ) AND T1.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_ID FROM COURSE_PREREQUISITE WHERE PRE_COURSE_ID NOT IN ( COURSE_ID ) ) AND T1.DEPARTMENT = "EECS" AND T3.CATEGORY LIKE "%MDE%" AND T4.SEMESTER IN ( "SP" , "SS" , "SU" ) AND T4.YEAR = 2016;
SELECT DISTINCT ADVISORY_REQUIREMENT FROM COURSE WHERE DEPARTMENT = "EECS" AND NUMBER = 545 ;
SELECT DISTINCT T2.NAME , T2.NUMBER , T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "EECS" AND T2.NUMBER BETWEEN 300 AND 300 + 100 AND T1.WORKLOAD < 3 ORDER BY T1.WORKLOAD ASC;
SELECT DISTINCT T3.START_TIME FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 ON T2.COURSE_ID = T1.COURSE_ID INNER JOIN COURSE_OFFERING AS T3 ON T1.COURSE_ID = T3.COURSE_ID INNER JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T3.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 492 AND T4.SEMESTER = "FA" AND T4.YEAR = 2016 ;
SELECT COUNT( * ) > 0 , T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "EECS" AND T2.NUMBER = 280 AND T1.WORKLOAD > 3;
SELECT DISTINCT DEPARTMENT , NAME , NUMBER FROM COURSE WHERE CREDITS = 3 AND DEPARTMENT = "EECS" AND NUMBER < 400 + 100 AND NUMBER >= 400 ;
SELECT DISTINCT T2.END_TIME , T2.SECTION_NUMBER , T2.START_TIME FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.START_TIME > "12:00" AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 AND T3.SEMESTER = "WN" AND T3.YEAR = 2016;
SELECT DISTINCT T2.DEPARTMENT , T2.NAME , T2.NUMBER FROM PROGRAM_COURSE AS T1 INNER JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "math" ;
SELECT DISTINCT T2.DEPARTMENT , T2.NAME , T2.NUMBER FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT LIKE "%EECS%" AND T1.CATEGORY LIKE "%core%";
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 ON T2.COURSE_ID = T1.COURSE_ID WHERE T1.DEPARTMENT LIKE "%EECS%" AND T2.CATEGORY LIKE "%core%" ;
SELECT DISTINCT T2.DEPARTMENT , T2.NAME , T2.NUMBER FROM PROGRAM_COURSE AS T1 INNER JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT LIKE "%EECS%" AND T1.CATEGORY LIKE "%core%" ;
SELECT DISTINCT T3.YEAR FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 ORDER BY T3.YEAR DESC LIMIT 1;
SELECT COUNT( DISTINCT T2.OFFERING_ID ) FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280;
SELECT COUNT( DISTINCT T2.COURSE_ID ) FROM SEMESTER AS T1 JOIN COURSE_OFFERING AS T2 ON T1.SEMESTER_ID = T2.SEMESTER WHERE T1.SEMESTER = "FA" AND T1.YEAR = 2016;
SELECT DISTINCT T4.NAME FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 AND T4.NAME NOT LIKE "%Smith%";
SELECT DISTINCT TOTAL_CREDIT FROM STUDENT WHERE STUDENT_ID = 1 ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T3.SEMESTER = "WN" AND T3.YEAR = 2016 ORDER BY T1.DEPARTMENT;
SELECT DISTINCT T2.DEPARTMENT , T2.NAME , T2.NUMBER , T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM AS T3 ON T3.PROGRAM_ID = T1.PROGRAM_ID WHERE T3.NAME LIKE "CS-LSA";
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T3.SEMESTER = "SP" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T3.CATEGORY FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T3.CATEGORY IN ( "MDE" , "PreMajor" ) AND T4.SEMESTER = "SP" AND T4.YEAR = 2016 GROUP BY T1.DEPARTMENT , T1.NUMBER;
SELECT COUNT( * ) > 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.START_TIME >= "12:00:00" AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 AND T3.SEMESTER = "FA" AND T3.YEAR = 2015;
SELECT DISTINCT T2.SECTION_NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.MONDAY = "N" AND T1.DEPARTMENT = "ENGR" AND T1.NUMBER = 151 AND T3.SEMESTER = "FA" AND T3.YEAR = 2016;
SELECT DISTINCT ADVISORY_REQUIREMENT FROM COURSE WHERE NAME LIKE "%introduction to artificial intelligence%" ;
SELECT COUNT( DISTINCT T3.DEPARTMENT || T1.NUMBER ) FROM COURSE AS T1 JOIN COURSE_PREREQUISITE AS T2 ON T1.COURSE_ID = T2.PRE_COURSE_ID JOIN COURSE AS T3 ON T3.COURSE_ID = T2.COURSE_ID JOIN STUDENT_RECORD AS T4 ON T4.COURSE_ID = T1.COURSE_ID WHERE T3.DEPARTMENT = "EECS" AND T3.NUMBER = 492 AND T4.STUDENT_ID = 1;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_PREREQUISITE AS T2 ON T1.COURSE_ID = T2.PRE_COURSE_ID JOIN COURSE AS T3 ON T3.COURSE_ID = T2.COURSE_ID WHERE T1.COURSE_ID NOT IN ( SELECT COURSE_ID FROM STUDENT_RECORD WHERE STUDENT_ID = 1 ) AND T3.DEPARTMENT = "EECS" AND T3.NUMBER = 489;
SELECT COUNT( * ) FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.START_TIME > "10:00:00" AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 281 AND T3.SEMESTER = "WN" AND T3.YEAR = 2016;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T3.CATEGORY LIKE "%ULCS%" AND T4.SEMESTER = "FA" AND T4.YEAR = 2016;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER INNER JOIN PROGRAM_COURSE AS T4 ON T4.COURSE_ID = T1.COURSE_ID WHERE T1.DEPARTMENT = "EECS" AND T4.CATEGORY LIKE "%ULCS%" AND T3.SEMESTER = "FA" AND T3.YEAR = 2016 ;
SELECT DISTINCT T2.END_TIME , T2.SECTION_NUMBER , T2.START_TIME FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.END_TIME <= "12:00" AND T2.START_TIME >= "12:00" AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 203 AND T3.SEMESTER = "WN" AND T3.YEAR = 2016;
SELECT DISTINCT T2.NAME , T2.NUMBER , T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT LIKE "%EECS%" AND T1.WORKLOAD < 3;
SELECT DISTINCT T2.END_TIME , T2.FRIDAY , T2.MONDAY , T2.SATURDAY , T2.START_TIME , T2.SUNDAY , T2.THURSDAY , T2.TUESDAY , T2.WEDNESDAY FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 AND T3.SEMESTER IN ( "SP" , "SU" , "SS" ) AND T3.YEAR = 2016;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN PROGRAM_COURSE AS T3 ON T3.COURSE_ID = T1.COURSE_ID JOIN SEMESTER AS T4 ON T4.SEMESTER_ID = T2.SEMESTER WHERE T2.END_TIME <= "12:00:00" AND T3.CATEGORY LIKE "%ULCS%" AND T4.SEMESTER = "WN" AND T4.YEAR = 2016;
SELECT DISTINCT T3.YEAR FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 485 ORDER BY T3.YEAR ASC LIMIT 1;
SELECT COUNT( * ) > 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 370 AND T3.SEMESTER = "SU";
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T2.WORKLOAD FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 WHERE ( ( T1.NUMBER < 400 + 100 AND T1.NUMBER >= 400 ) OR ( T1.NUMBER < 500 + 100 AND T1.NUMBER >= 500 ) ) AND T1.DEPARTMENT = "EECS" AND T2.WORKLOAD = ( SELECT T2.WORKLOAD FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 WHERE ( ( T1.NUMBER < 400 + 100 AND T1.NUMBER >= 400 ) OR ( T1.NUMBER < 500 + 100 AND T1.NUMBER >= 500 ) ) AND T1.DEPARTMENT = "EECS" ORDER BY T2.WORKLOAD LIMIT 1) ;
SELECT DISTINCT T3.SEMESTER , T3.YEAR FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 484 AND T3.YEAR IN ( 2016 , 2017 );
SELECT DISTINCT T2.NAME , T2.NUMBER , T1.WORKLOAD FROM PROGRAM_COURSE AS T1 JOIN COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "EECS" AND T1.WORKLOAD = ( SELECT T2.WORKLOAD FROM COURSE AS T1 JOIN PROGRAM_COURSE AS T2 ON T1.COURSE_ID = T2.COURSE_ID WHERE T1.DEPARTMENT = "EECS" ORDER BY T2.WORKLOAD DESC LIMIT 1);
SELECT DISTINCT T2.NAME, T2.NUMBER FROM (SELECT MAX(T1.WORKLOAD) AS DERIVED_FIELDalias0 FROM COURSE AS T2 JOIN PROGRAM_COURSE AS T1 ON T1.COURSE_ID = T2.COURSE_ID WHERE T2.DEPARTMENT = "EECS") AS T1, COURSE AS T2, PROGRAM_COURSE AS T3 WHERE T3.COURSE_ID = T2.COURSE_ID AND T3.WORKLOAD = T1.DERIVED_FIELDalias0 ; 
SELECT COUNT( * ) = 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE ( T4.NAME NOT LIKE "%smith%" AND T4.NAME NOT LIKE "%jones%" ) AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280;
SELECT COUNT( * ) > 0 FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.FRIDAY = "N" AND T2.MONDAY = "Y" AND T2.THURSDAY = "N" AND T2.TUESDAY = "N" AND T2.WEDNESDAY = "Y" AND T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 AND T3.SEMESTER = "WN" AND T3.YEAR = 2016;
SELECT DISTINCT NAME FROM INSTRUCTOR WHERE NAME NOT IN ( SELECT T4.NAME FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID INNER JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T1.DEPARTMENT = "EECS" AND T1.NUMBER = 280 ) ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN PROGRAM_COURSE AS T2 ON T2.COURSE_ID = T1.COURSE_ID WHERE T1.CREDITS = 4 AND T2.CATEGORY LIKE "ULCS" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T2.FRIDAY = "N" AND T1.DEPARTMENT = "EECS" AND T3.SEMESTER = "WN" AND T3.YEAR = 2016 ;
SELECT COUNT( * ) = 0 FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID INNER JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T2.FRIDAY = "N" AND T4.NAME LIKE "%smith%" ;
SELECT COUNT( * ) = 0 FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID INNER JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T1.DEPARTMENT = "EECS" AND T1.HAS_LAB = "N" AND T1.NUMBER = 280 AND T4.NAME LIKE "%smith%" ;
SELECT COUNT( * ) = 0 FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID INNER JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T1.HAS_EXAMS = "N" AND T4.NAME LIKE "%smith%" ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN OFFERING_INSTRUCTOR AS T3 ON T3.OFFERING_ID = T2.OFFERING_ID JOIN INSTRUCTOR AS T4 ON T3.INSTRUCTOR_ID = T4.INSTRUCTOR_ID WHERE T4.NAME LIKE "%Quentin Stout%";
SELECT COUNT( DISTINCT T2.COURSE_ID ) FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE T1.DEPARTMENT = "EECS" AND T3.SEMESTER = "FA" AND T3.YEAR = 2016;
SELECT DISTINCT T1.DEPARTMENT, T1.NAME, T1.NUMBER, T2.SEMESTER FROM (SELECT COURSE_ID FROM STUDENT_RECORD WHERE EARN_CREDIT = "Y" AND STUDENT_ID = 1 ) AS T3, COURSE AS T1 JOIN COURSE_OFFERING AS T4 ON T1.COURSE_ID = T4.COURSE_ID JOIN  SEMESTER AS T2 On T2.SEMESTER_ID = T4.SEMESTER WHERE ((T2.SEMESTER = "FA" AND T2.YEAR = 2016) OR (T2.SEMESTER = "WN" AND T2.YEAR = 2017)) AND T1.COURSE_ID NOT IN (T3.COURSE_ID) AND T1.COURSE_ID NOT IN (SELECT DISTINCT COURSE_ID FROM COURSE_PREREQUISITE WHERE PRE_COURSE_ID NOT IN (COURSE_ID) ) AND T1.DEPARTMENT = "EECS" AND T1.NUMBER BETWEEN 400 AND 400 + 100;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T3.SEMESTER FROM COURSE AS T1 JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER WHERE ( ( T3.SEMESTER = "FA" AND T3.YEAR = 2016 ) OR ( T3.SEMESTER = "WN" AND T3.YEAR = 2017 ) ) AND T1.DEPARTMENT = "EECS" AND T1.NUMBER BETWEEN 400 AND 400 + 100;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER INNER JOIN PROGRAM_COURSE AS T4 ON T4.COURSE_ID = T1.COURSE_ID WHERE T1.DEPARTMENT = "EECS" AND T4.CATEGORY LIKE "%ULCS%" AND T3.SEMESTER IN ( "SP" , "SS" , "SU" ) AND T3.YEAR = 2016 ;
SELECT DISTINCT T1.DEPARTMENT , T1.NAME , T1.NUMBER , T3.SEMESTER FROM COURSE AS T1 INNER JOIN COURSE_OFFERING AS T2 ON T1.COURSE_ID = T2.COURSE_ID INNER JOIN SEMESTER AS T3 ON T3.SEMESTER_ID = T2.SEMESTER INNER JOIN PROGRAM_COURSE AS T4 ON T4.COURSE_ID = T2.COURSE_ID WHERE T4.CATEGORY LIKE "%MDE%" AND T3.SEMESTER IN ( "SP" , "SS" , "SU" ) AND T3.YEAR = 2016 ;
SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1) ) ;
SELECT POPULATION FROM STATE WHERE STATE_NAME = "washington" ;
SELECT LAKE_NAME FROM LAKE WHERE STATE_NAME = "california" ;
SELECT LAKE_NAME FROM LAKE WHERE AREA > 750 AND STATE_NAME = "california" ;
SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ;
SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = "new york" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = "new york" ;
SELECT COUNT( STATE_NAME ) FROM HIGHLOW WHERE LOWEST_ELEVATION < ( SELECT LOWEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = "alabama" ) ;
SELECT SUM( POPULATION ) FROM STATE ;
SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = "iowa" ;
SELECT RIVER_NAME FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = "florida" ;
SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = "texas" ORDER BY LENGTH DESC LIMIT 1) ;
SELECT CAPITAL FROM STATE WHERE STATE_NAME = "texas" ;
SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 ;
SELECT DISTINCT CAPITAL FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1) ;
SELECT CAPITAL FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ;
SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1) ) ;
SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias0 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) ) ;
SELECT LOWEST_POINT FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1) ;
SELECT POPULATION FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) ) ;
SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1) ;
SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( DISTINCT BORDER ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT STATE_NAME , COUNT( DISTINCT BORDER ) DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) ) ORDER BY AREA LIMIT 1) ;
SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "wyoming" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "wyoming" ) ;
SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = "mississippi" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = "mississippi" ) ;
SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) ) ;
SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "texas" ) ;
SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT DISTINCT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) ;
SELECT STATE_NAME FROM CITY GROUP BY STATE_NAME ORDER BY SUM( POPULATION ) LIMIT 1 ;
SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "mississippi" ) ;
SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) ) ;
SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1) ;
SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = "austin" ) ) ;
SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1) ;
SELECT POPULATION FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "texas" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = "texas" ) ;
SELECT STATE_NAME FROM STATE WHERE CAPITAL = "austin" ;
SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ) ;
SELECT COUNT( DISTINCT RIVER_NAME ) FROM RIVER ;
SELECT DISTINCT CAPITAL FROM STATE ;
SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = "mississippi" ;
SELECT POPULATION / AREA FROM STATE WHERE STATE_NAME = "pennsylvania" ;
SELECT DISTINCT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1) ;
SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) ) ;
SELECT AREA FROM STATE ;
SELECT DENSITY FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1) ;
SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) ) ;
SELECT T2.LOWEST_POINT FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) );
SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1;
SELECT AREA FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) ;
SELECT COUNTRY_NAME FROM STATE WHERE STATE_NAME = "new hampshire" ;
SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH > 750 ;
SELECT COUNT( CITY_NAME ) FROM CITY WHERE CITY_NAME = "austin" ;
SELECT T1.RIVER_NAME FROM RIVER AS T1 JOIN HIGHLOW AS T2 ON T1.TRAVERSE = T2.STATE_NAME WHERE T2.HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1) ORDER BY T1.LENGTH DESC LIMIT 1;
SELECT RELEASE_YEAR FROM MOVIE WHERE TITLE = "The Imitation Game" ;
SELECT BIRTH_YEAR FROM ACTOR WHERE NAME = "Benedict Cumberbatch" ;
SELECT NATIONALITY FROM ACTOR WHERE NAME = "Christoph Waltz" ;
SELECT TITLE FROM MOVIE WHERE RELEASE_YEAR = 2015 ;
SELECT NAME FROM ACTOR WHERE BIRTH_CITY = "Tehran" ;
SELECT NAME FROM ACTOR WHERE NATIONALITY = "Afghanistan" ;
SELECT NAME FROM ACTOR WHERE BIRTH_YEAR = 1984 ;
SELECT BIRTH_YEAR FROM WRITER WHERE NAME = "Kevin Spacey" ;
SELECT BIRTH_YEAR FROM ACTOR WHERE NAME = "actor_name0" ;
SELECT BIRTH_YEAR FROM DIRECTOR WHERE NAME = "director_name0" ;
SELECT BIRTH_YEAR FROM PRODUCER WHERE NAME = "producer_name0" ;
SELECT BIRTH_CITY FROM WRITER WHERE NAME = "Kevin Spacey" ;
SELECT BIRTH_CITY FROM DIRECTOR WHERE NAME = "director_name0" ;
SELECT BIRTH_CITY FROM PRODUCER WHERE NAME = "producer_name0" ;
SELECT BIRTH_CITY FROM ACTOR WHERE NAME = "actor_name0" ;
SELECT NATIONALITY FROM WRITER WHERE NAME = "Kevin Spacey" ;
SELECT NATIONALITY FROM DIRECTOR WHERE NAME = "director_name0" ;
SELECT NATIONALITY FROM PRODUCER WHERE NAME = "producer_name0" ;
SELECT NATIONALITY FROM ACTOR WHERE NAME = "actor_name0" ;
SELECT BUDGET FROM MOVIE WHERE TITLE = "Finding Nemo" ;
SELECT T3.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Steven Spielberg" AND T3.RELEASE_YEAR > 2006;
SELECT T1.NAME FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T3.TITLE = "James Bond";
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T1.ROLE = "Alan Turing" AND T3.TITLE = "The Imitation Game";
SELECT T1.GENRE FROM GENRE AS T1 JOIN CLASSIFICATION AS T2 ON T1.GID = T2.GID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T3.TITLE = "Jurassic Park";
SELECT T1.NAME FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T3.RELEASE_YEAR = 2015 AND T3.TITLE = "Joy";
SELECT T2.TITLE FROM WRITTEN_BY AS T1 JOIN MOVIE AS T2 ON T1.MSID = T2.MID JOIN WRITER AS T3 ON T1.WID = T3.WID WHERE T3.NAME = "Matt Damon";
SELECT T1.TITLE FROM MOVIE AS T1 JOIN MADE_BY AS T2 ON T1.MID = T2.MSID JOIN PRODUCER AS T3 ON T3.PID = T2.PID JOIN WRITTEN_BY AS T4 ON T4.MSID = T1.MID JOIN WRITER AS T5 ON T4.WID = T5.WID WHERE T3.NAME = "Woody Allen" AND T5.NAME = "Woody Allen";
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Robin Wright";
SELECT BUDGET FROM MOVIE WHERE RELEASE_YEAR = 2007 AND TITLE = "Juno" ;
SELECT T3.TITLE FROM GENRE AS T1 JOIN CLASSIFICATION AS T2 ON T1.GID = T2.GID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.GENRE = "Sci-Fi" AND T3.RELEASE_YEAR = 2010;
SELECT NAME FROM ACTOR WHERE BIRTH_CITY = "Austin" AND BIRTH_YEAR > 1980 ;
SELECT T3.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.BIRTH_CITY = "Los Angeles";
SELECT T2.NAME FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T3.TITLE = "Juno";
SELECT T3.TITLE FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Netflix";
SELECT NAME FROM ACTOR WHERE BIRTH_CITY = "New York City" AND BIRTH_YEAR = 1984 ;
SELECT T3.TITLE FROM TAGS AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.ID JOIN MOVIE AS T3 ON T1.MSID = T3.MID WHERE T2.KEYWORD = "nuclear weapons";
SELECT T3.TITLE FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "company_name0" AND T3.RELEASE_YEAR > 2010;
SELECT T1.TITLE FROM MOVIE AS T1 JOIN MADE_BY AS T2 ON T1.MID = T2.MSID JOIN PRODUCER AS T3 ON T3.PID = T2.PID WHERE T1.RELEASE_YEAR > 2010 AND T3.NAME = "Walt Disney";
SELECT T3.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Alfred Hitchcock";
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NAME = "Taraneh Alidoosti" AND T5.NAME = "Asghar Farhadi";
SELECT T3.TITLE FROM PRODUCER AS T1 JOIN MADE_BY AS T2 ON T1.PID = T2.PID JOIN TV_SERIES AS T3 ON T3.SID = T2.MSID WHERE T1.NAME = "Shonda Rhimes";
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN TV_SERIES AS T3 ON T3.SID = T1.MSID WHERE T1.ROLE = "Olivia Pope" AND T3.TITLE = "Scandal";
SELECT T3.NAME FROM WRITTEN_BY AS T1 JOIN MOVIE AS T2 ON T1.MSID = T2.MID JOIN WRITER AS T3 ON T1.WID = T3.WID WHERE T2.TITLE = "The Truman Show";
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN TV_SERIES AS T3 ON T3.SID = T1.MSID WHERE T2.NAME = "Scott Foley";
SELECT T5.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NAME = "Kate Winslet";
SELECT T5.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN MADE_BY AS T4 ON T3.MID = T4.MSID JOIN PRODUCER AS T5 ON T5.PID = T4.PID WHERE T2.NAME = "Kate Winslet";
SELECT T2.NAME FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN TV_SERIES AS T3 ON T3.SID = T1.MSID WHERE T3.TITLE = "Mickey Mouse";
SELECT T3.TITLE FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN TV_SERIES AS T3 ON T3.SID = T1.MSID WHERE T2.NAME = "Netflix";
SELECT T5.NAME FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN TV_SERIES AS T3 ON T3.SID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.SID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NAME = "Netflix" AND T3.TITLE = "House of Cards";
SELECT T1.NAME FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN TV_SERIES AS T3 ON T3.SID = T2.MSID WHERE T3.RELEASE_YEAR = 2013 AND T3.TITLE = "House of Cards";
SELECT NAME FROM ACTOR WHERE BIRTH_CITY = "Austin" AND GENDER = "female" ;
SELECT NAME FROM ACTOR WHERE BIRTH_YEAR > 1980 AND NATIONALITY = "Italy" ;
SELECT NAME FROM ACTOR WHERE BIRTH_CITY = "New York City" AND BIRTH_YEAR > 1980 AND GENDER = "female" ;
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.GENDER = "female" AND T3.TITLE = "Saving Private Ryan";
SELECT NAME FROM DIRECTOR WHERE NATIONALITY = "Afghanistan" ;
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T3.TITLE = "Camp X-Ray";
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NATIONALITY = "Canada" AND T3.TITLE = "James Bond";
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Rowan Atkinson" AND T1.ROLE = "Mr. Bean";
SELECT T1.BIRTH_CITY FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T3.TITLE = "The Past";
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID WHERE T1.ROLE = "Mr. Bean";
SELECT T5.GENRE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID JOIN CLASSIFICATION AS T4 ON T3.MID = T4.MSID JOIN GENRE AS T5 ON T5.GID = T4.GID WHERE T1.NAME = "Asghar Farhadi";
SELECT T1.TITLE FROM MOVIE AS T1 JOIN CAST AS T2 ON T1.MID = T2.MSID WHERE T2.ROLE = "Daffy Duck";
SELECT T1.ROLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T3.TITLE = "Daddy Long Legs";
SELECT T5.NAME FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NAME = "NBCUniversal" AND T5.GENDER = "male";
SELECT T1.NAME FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID JOIN TAGS AS T4 ON T4.MSID = T3.MID JOIN KEYWORD AS T5 ON T4.KID = T5.ID WHERE T5.KEYWORD = "nuclear weapons";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Jennifer Aniston" AND T3.RELEASE_YEAR > 2010;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T3.TITLE = "Saving Private Ryan";
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Steven Spielberg";
SELECT COUNT( DISTINCT ( TITLE ) ) FROM MOVIE WHERE RELEASE_YEAR = 2013 ;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) , T3.RELEASE_YEAR FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Woody Allen" GROUP BY T3.RELEASE_YEAR;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Shahab Hosseini";
SELECT COUNT( DISTINCT ( NAME ) ) FROM ACTOR WHERE BIRTH_CITY = "Los Angeles" AND BIRTH_YEAR > 2000 ;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Humphrey Bogart" AND T3.RELEASE_YEAR < 1942;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) , T3.RELEASE_YEAR FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Brad Pitt" GROUP BY T3.RELEASE_YEAR;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM TAGS AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.ID JOIN MOVIE AS T3 ON T1.MSID = T3.MID WHERE T2.KEYWORD = "Iraq war" AND T3.RELEASE_YEAR = 2015;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM TAGS AS T1 JOIN KEYWORD AS T2 ON T1.KID = T2.ID JOIN MOVIE AS T3 ON T1.MSID = T3.MID WHERE T2.KEYWORD = "Persians" AND T3.RELEASE_YEAR > 1990;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Quentin Tarantino" AND T3.RELEASE_YEAR > 2010;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Quentin Tarantino" AND T3.RELEASE_YEAR < 2010;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID JOIN MADE_BY AS T4 ON T3.MID = T4.MSID JOIN PRODUCER AS T5 ON T5.PID = T4.PID WHERE T1.NAME = "Quentin Tarantino" AND T3.RELEASE_YEAR < 2010 AND T3.RELEASE_YEAR > 2002;
SELECT COUNT( DISTINCT ( T3.TITLE ) ) FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Netflix";
SELECT COUNT( DISTINCT ( NAME ) ) FROM ACTOR WHERE BIRTH_CITY = "New York City" AND BIRTH_YEAR > 1980 AND GENDER = "female" ;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NATIONALITY = "Iran" AND T5.NAME = "Jim Jarmusch";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T3.TITLE = "Camp X-Ray";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NATIONALITY = "China" AND T3.TITLE = "Rush Hour 3";
SELECT COUNT( DISTINCT ( T5.NAME ) ) FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN COPYRIGHT AS T4 ON T3.MID = T4.MSID JOIN COMPANY AS T5 ON T4.CID = T5.ID WHERE T2.NAME = "Gabriele Ferzetti";
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN CAST AS T4 ON T3.MID = T4.MSID JOIN ACTOR AS T5 ON T4.AID = T5.AID WHERE T2.NAME = "Woody Strode" AND T5.NAME = "Jason Robards";
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN CAST AS T4 ON T3.MID = T4.MSID JOIN ACTOR AS T5 ON T4.AID = T5.AID WHERE T5.NAME = "Tom Hanks";
SELECT T5.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN DIRECTED_BY AS T3 ON T1.DID = T3.DID JOIN MOVIE AS T4 ON T4.MID = T2.MSID JOIN MOVIE AS T5 ON T5.MID = T3.MSID WHERE T4.TITLE = "Revolutionary Road";
SELECT MAX(DERIVED_FIELDalias0) FROM ( SELECT COUNT( DISTINCT ( T3.TITLE ) ) AS DERIVED_FIELDalias0 FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = " Brad Pitt " GROUP BY T3.RELEASE_YEAR);
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID GROUP BY T2.AID ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID GROUP BY T2.AID ORDER BY COUNT( DISTINCT ( T3.TITLE ) ) DESC LIMIT 1;
SELECT T3.TITLE FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NATIONALITY = "China" GROUP BY T3.TITLE ORDER BY COUNT( DISTINCT ( T2.NAME ) ) DESC LIMIT 1;
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T5.NAME = "Quentin Tarantino" ORDER BY T3.RELEASE_YEAR DESC LIMIT 1;
SELECT T3.BUDGET , T3.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Quentin Tarantino" ORDER BY T3.RELEASE_YEAR DESC LIMIT 1;
SELECT T5.NAME FROM COPYRIGHT AS T1 JOIN COMPANY AS T2 ON T1.CID = T2.ID JOIN MOVIE AS T3 ON T3.MID = T1.MSID JOIN DIRECTED_BY AS T4 ON T3.MID = T4.MSID JOIN DIRECTOR AS T5 ON T5.DID = T4.DID WHERE T2.NAME = "NBCUniversal" ORDER BY T3.RELEASE_YEAR DESC LIMIT 1;
SELECT T3.TITLE FROM DIRECTOR AS T1 JOIN DIRECTED_BY AS T2 ON T1.DID = T2.DID JOIN MOVIE AS T3 ON T3.MID = T2.MSID WHERE T1.NAME = "Jim Jarmusch" ORDER BY T3.RELEASE_YEAR DESC LIMIT 1;
SELECT T2.NAME FROM CAST AS T1 JOIN ACTOR AS T2 ON T1.AID = T2.AID JOIN MOVIE AS T3 ON T3.MID = T1.MSID WHERE T2.NAME = "Gabriele Ferzetti" ORDER BY T3.RELEASE_YEAR DESC LIMIT 1;
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "san francisco" AND T1.NAME = "buttercup kitchen";
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.REGION = "bay area" AND T1.FOOD_TYPE = "chinese";
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.COUNTY = "santa cruz county" AND T1.NAME = "jamerican cuisine";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.NAME = "jamerican cuisine";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "san francisco" AND T1.FOOD_TYPE = "french" AND T1.RATING = ( SELECT T1.RATING FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "san francisco" AND T1.FOOD_TYPE = "french" ORDER BY T1.RATING DESC LIMIT 1);
SELECT T3.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T1.ID = T3.RESTAURANT_ID WHERE T2.REGION = "bay area" AND T1.NAME = "denny";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "bethel island" AND T2.STREET_NAME = "bethel island rd" AND T1.RATING > 2.5;
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "alameda";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.FOOD_TYPE = "french" AND T1.RATING > 2.5;
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "palo alto" AND T1.FOOD_TYPE = "french";
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.COUNTY = "yolo county" AND T1.FOOD_TYPE = "italian";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "mountain view" AND T1.FOOD_TYPE = "french";
SELECT COUNT( * ) FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.REGION = "bay area" AND T1.NAME = "denny";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "alameda" AND T1.RATING > 2.5;
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "san francisco" AND T2.STREET_NAME = "buchanan" AND T1.FOOD_TYPE = "arabic" AND T1.RATING > 2.5;
SELECT T3.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T1.ID = T3.RESTAURANT_ID WHERE T2.REGION = "bay area" AND T1.FOOD_TYPE = "french";
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.CITY_NAME IN ( SELECT CITY_NAME FROM GEOGRAPHIC WHERE REGION = "bay area" ) AND T1.RATING > 2.5;
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "bethel island" AND T2.STREET_NAME = "bethel island rd";
SELECT T3.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T1.ID = T3.RESTAURANT_ID WHERE T2.REGION = "bay area" AND T1.FOOD_TYPE = "american" AND T1.RATING = ( SELECT T1.RATING FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.REGION = "bay area" AND T1.FOOD_TYPE = "american" ORDER BY T1.RATING DESC LIMIT 1);
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.CITY_NAME IN ( SELECT CITY_NAME FROM GEOGRAPHIC WHERE REGION = "bay area" );
SELECT T3.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T1.ID = T3.RESTAURANT_ID WHERE T2.REGION = "yosemite and mono lake area" AND T1.FOOD_TYPE = "french" AND T1.RATING > 2.5;
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "mountain view" AND T1.FOOD_TYPE = "arabic" AND T1.RATING > 2.5;
SELECT T2.HOUSE_NUMBER , T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME = "san francisco" AND T1.NAME = "jamerican cuisine";
SELECT DISTINCT T1.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" ORDER BY T3.YEAR DESC;
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" AND T3.YEAR = ( SELECT T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" ORDER BY T3.YEAR DESC LIMIT 1);
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" ORDER BY T3.YEAR DESC;
SELECT DISTINCT COUNT( T2.PAPERID ) FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "jeffrey heer" AND T1.VENUENAME = "chi";
SELECT DISTINCT COUNT( DISTINCT T2.PAPERID ) FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "jeffrey heer" AND T1.VENUENAME = "chi";
SELECT DISTINCT COUNT( T2.PAPERID ) FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "jeffrey heer" AND T1.VENUENAME = "chi";
SELECT DISTINCT T2.CITEDPAPERID , COUNT( T2.CITEDPAPERID ) FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T1.YEAR = 2010 AND T3.VENUENAME = "EMNLP" GROUP BY T2.CITEDPAPERID ORDER BY COUNT( T2.CITEDPAPERID ) DESC;
SELECT DISTINCT T2.CITINGPAPERID , COUNT( T1.PAPERID ) FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T1.YEAR = 2010 AND T3.VENUENAME = "EMNLP" GROUP BY T2.CITINGPAPERID ORDER BY COUNT( T1.PAPERID ) DESC;
SELECT DISTINCT COUNT( DISTINCT T1.PAPERID ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID WHERE T2.AUTHORNAME = "Omer Lev";
SELECT DISTINCT COUNT( DISTINCT T3.PAPERID ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Omer Lev";
SELECT DISTINCT COUNT( T3.PAPERID ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Omer Lev";
SELECT DISTINCT COUNT( 1 ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Omer Lev";
SELECT DISTINCT COUNT( T1.PAPERID ) FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID WHERE T2.AUTHORNAME = "Omer Lev";
SELECT DISTINCT T2.KEYPHRASEID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "shwetak patel";
SELECT DISTINCT T3.KEYPHRASEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPERKEYPHRASE AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "shwetak patel";
SELECT DISTINCT T2.KEYPHRASENAME FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "shwetak patel";
SELECT DISTINCT COUNT( DISTINCT PAPERID ) FROM PAPER ;
SELECT DISTINCT T3.VENUEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Yejin Kim" AND T3.YEAR = 2015;
SELECT DISTINCT T3.VENUEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Yejin Kim" AND T3.YEAR = 2015 GROUP BY T3.VENUEID;
SELECT DISTINCT T3.VENUEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Yejin Kim" AND T3.YEAR = 2015;
SELECT DISTINCT T4.AUTHORNAME , T2.CITEDPAPERID , COUNT( T2.CITEDPAPERID ) FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME IN ( "tom mitchell" , "oren etzioni" ) GROUP BY T2.CITEDPAPERID , T4.AUTHORNAME ORDER BY COUNT( T2.CITEDPAPERID ) DESC;
SELECT DISTINCT T2.KEYPHRASEID , T1.YEAR FROM PAPER AS T1 JOIN PAPERKEYPHRASE AS T2 ON T1.PAPERID = T2.PAPERID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "Luke S Zettlemoyer" ORDER BY T1.YEAR , T2.KEYPHRASEID;
SELECT DISTINCT T1.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Luke S Zettlemoyer" AND T3.YEAR >= YEAR(CURDATE()) - 8;
SELECT DISTINCT T3.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Luke S Zettlemoyer" AND T3.YEAR >= YEAR(CURDATE()) - 8;
SELECT DISTINCT T2.KEYPHRASENAME , T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "michael jordan" ORDER BY T3.YEAR DESC;
SELECT DISTINCT T3.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "michael jordan" ORDER BY T3.YEAR DESC;
SELECT DISTINCT COUNT( T3.PAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN VENUE AS T4 ON T4.VENUEID = T3.VENUEID WHERE T2.KEYPHRASENAME = "Semantic Parsing" AND T3.YEAR = 2014 AND T4.VENUENAME = "ACL";
SELECT DISTINCT COUNT( DISTINCT T2.CITINGPAPERID ) , T1.PAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T1.YEAR = 2015 AND T3.VENUENAME = "EMNLP" GROUP BY T1.PAPERID ORDER BY COUNT( DISTINCT T2.CITINGPAPERID ) DESC;
SELECT DISTINCT T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T2.YEAR = 2014 AND T1.VENUENAME = "ACL";
SELECT DISTINCT T2.JOURNALID , T1.VENUEID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "li dong";
SELECT DISTINCT T4.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T2.AUTHORNAME = "ras bodik";
SELECT DISTINCT T2.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID WHERE T2.AUTHORNAME != "ras bodik" AND T1.PAPERID IN ( SELECT T1.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID WHERE T2.AUTHORNAME = "ras bodik");
SELECT DISTINCT T4.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T2.AUTHORNAME = "ras bodik" AND T5.AUTHORNAME != "ras bodik" GROUP BY T4.AUTHORID;
SELECT DISTINCT T2.DATASETID FROM PAPER AS T1 JOIN PAPERDATASET AS T2 ON T1.PAPERID = T2.PAPERID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T2.DATASETID FROM PAPERDATASET AS T1 JOIN DATASET AS T2 ON T1.DATASETID = T2.DATASETID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T2.PAPERID FROM KEYPHRASE AS T1 , PAPERKEYPHRASE AS T2 WHERE T1.KEYPHRASENAME IN ( "Neural" , "Relation Extraction" ) GROUP BY T2.PAPERID HAVING COUNT( DISTINCT T1.KEYPHRASEID ) = 1 ;
SELECT DISTINCT T3.PAPERID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME IN ( "Neural" , "Relation Extraction" ) GROUP BY T3.PAPERID HAVING COUNT( DISTINCT T2.KEYPHRASENAME ) > 1;
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME IN ( "Neural" , "Relation Extraction" ) GROUP BY T3.PAPERID HAVING COUNT( DISTINCT T2.KEYPHRASENAME ) > 1;
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME = "semantic parsing" ORDER BY T3.YEAR DESC;
SELECT DISTINCT T2.DATASETID , T4.YEAR FROM PAPERDATASET AS T1 JOIN DATASET AS T2 ON T1.DATASETID = T2.DATASETID JOIN PAPERKEYPHRASE AS T3 ON T3.PAPERID = T1.PAPERID JOIN PAPER AS T4 ON T4.PAPERID = T1.PAPERID JOIN KEYPHRASE AS T5 ON T3.KEYPHRASEID = T5.KEYPHRASEID WHERE T5.KEYPHRASENAME = "semantic parsing" ORDER BY T4.YEAR DESC;
SELECT DISTINCT T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "alvin cheung" GROUP BY T3.YEAR;
SELECT DISTINCT T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "alvin cheung";
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "alvin cheung" ORDER BY T3.YEAR;
SELECT DISTINCT COUNT( T3.PAPERID ) , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "alvin cheung" GROUP BY T3.YEAR;
SELECT DISTINCT T1.PAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITINGPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T2.CITEDPAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T1.PAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITINGPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T2.CITEDPAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T1.PAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITINGPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T2.CITEDPAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T3.CITINGPAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN CITE AS T3 ON T1.PAPERID = T3.CITEDPAPERID WHERE T2.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T2.CITINGPAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "oren etzioni";
SELECT DISTINCT T3.PAPERID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME = "character recognition" AND T3.YEAR < 2010;
SELECT DISTINCT T4.CITEDPAPERID , COUNT( T4.CITEDPAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN CITE AS T4 ON T3.PAPERID = T4.CITEDPAPERID WHERE T2.KEYPHRASENAME = "stochastic optimization" GROUP BY T4.CITEDPAPERID ORDER BY COUNT( T4.CITEDPAPERID ) DESC;
SELECT DISTINCT T3.CITEDPAPERID , COUNT( DISTINCT T3.CITINGPAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN CITE AS T3 ON T1.PAPERID = T3.CITEDPAPERID WHERE T2.KEYPHRASENAME = "stochastic optimization" GROUP BY T3.CITEDPAPERID ORDER BY COUNT( DISTINCT T3.CITINGPAPERID ) DESC;
SELECT DISTINCT T4.CITEDPAPERID , COUNT( T3.PAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN CITE AS T4 ON T3.PAPERID = T4.CITINGPAPERID WHERE T2.KEYPHRASENAME = "stochastic optimization" GROUP BY T4.CITEDPAPERID ORDER BY COUNT( T3.PAPERID ) DESC;
SELECT DISTINCT T2.CITEDPAPERID , COUNT( T2.CITEDPAPERID ) FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN AUTHOR AS T4 ON T3.AUTHORID = T4.AUTHORID WHERE T4.AUTHORNAME = "ali farhadi" GROUP BY T2.CITEDPAPERID ORDER BY COUNT( T2.CITEDPAPERID ) DESC;
SELECT DISTINCT COUNT( T2.PAPERID ) , T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T2.YEAR = 2010 AND T1.VENUENAME = "ACL" GROUP BY T3.AUTHORID ORDER BY COUNT( T2.PAPERID ) DESC;
SELECT DISTINCT COUNT( DISTINCT T3.PAPERID ) , T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T2.YEAR = 2010 AND T1.VENUENAME = "ACL" GROUP BY T3.AUTHORID ORDER BY COUNT( DISTINCT T3.PAPERID ) DESC;
SELECT DISTINCT COUNT( T3.PAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME = "question answering" AND T3.YEAR >= YEAR(CURDATE()) - 5;
SELECT DISTINCT COUNT( DISTINCT T2.PAPERID ) FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID WHERE T2.YEAR = 2016 AND T1.VENUENAME = "ACL";
SELECT DISTINCT COUNT( T3.PAPERID ) , T2.KEYPHRASEID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN VENUE AS T4 ON T4.VENUEID = T3.VENUEID WHERE T3.YEAR = 2014 AND T4.VENUENAME = "ACL" GROUP BY T2.KEYPHRASEID ORDER BY COUNT( T3.PAPERID ) DESC;
SELECT DISTINCT COUNT( T3.PAPERID ) , T2.KEYPHRASEID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN VENUE AS T4 ON T4.VENUEID = T3.VENUEID WHERE T3.YEAR = 2014 AND T4.VENUENAME = "ACL" GROUP BY T2.KEYPHRASEID ORDER BY COUNT( T3.PAPERID ) DESC;
SELECT DISTINCT T2.KEYPHRASEID FROM PAPER AS T1 JOIN PAPERKEYPHRASE AS T2 ON T1.PAPERID = T2.PAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T1.YEAR = 2014 AND T3.VENUENAME = "ACL";
SELECT DISTINCT T3.PAPERID FROM PAPERDATASET AS T1 JOIN DATASET AS T2 ON T1.DATASETID = T2.DATASETID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.DATASETNAME = "ImageNet";
SELECT DISTINCT T1.PAPERID FROM PAPERDATASET AS T1 JOIN DATASET AS T2 ON T1.DATASETID = T2.DATASETID WHERE T2.DATASETNAME = "ImageNet";
SELECT DISTINCT T5.AUTHORNAME , T3.PAPERID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME != "chris dyer" AND T2.KEYPHRASENAME = "syntactic parsing";
SELECT DISTINCT PAPERID FROM PAPER WHERE YEAR = ( SELECT YEAR FROM PAPER ORDER BY YEAR DESC LIMIT 1) ;
SELECT DISTINCT COUNT( T3.PAPERID ) , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" GROUP BY T3.YEAR ORDER BY T3.YEAR;
SELECT DISTINCT COUNT( T3.PAPERID ) , T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "richard anderson" GROUP BY T3.YEAR ORDER BY T3.YEAR;
SELECT DISTINCT COUNT( T3.CITINGPAPERID ) , T4.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN CITE AS T3 ON T1.PAPERID = T3.CITEDPAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.CITINGPAPERID WHERE T2.AUTHORNAME = "Luke Zettlemoyer" GROUP BY T4.AUTHORID ORDER BY COUNT( T3.CITINGPAPERID ) DESC;
SELECT DISTINCT COUNT( DISTINCT T2.CITINGPAPERID ) , T4.AUTHORID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITINGPAPERID JOIN WRITES AS T3 ON T3.PAPERID = T2.CITEDPAPERID JOIN WRITES AS T4 ON T4.PAPERID = T1.PAPERID JOIN AUTHOR AS T5 ON T3.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "Luke Zettlemoyer" GROUP BY T4.AUTHORID ORDER BY COUNT( DISTINCT T2.CITINGPAPERID ) DESC;
SELECT DISTINCT COUNT( 1 ) , T3.JOURNALID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "yuting ye" GROUP BY T3.JOURNALID;
SELECT DISTINCT T2.CITINGPAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T3.VENUENAME = "ACL" GROUP BY T2.CITINGPAPERID HAVING COUNT( DISTINCT T2.CITEDPAPERID ) < 5;
SELECT DISTINCT T2.CITEDPAPERID , COUNT( T2.CITINGPAPERID ) AS DERIVED_FIELDalias0 FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITINGPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T3.VENUENAME = "ACL" GROUP BY T2.CITEDPAPERID HAVING COUNT( T2.CITINGPAPERID ) < 5;
SELECT DISTINCT T2.PAPERID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID WHERE T2.TITLE LIKE "neural attention" AND T2.YEAR = 2016 AND T1.VENUENAME = "ACL";
SELECT DISTINCT T4.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T3.AUTHORID = T5.AUTHORID WHERE T2.AUTHORNAME = "Ameet Soni" AND T5.AUTHORNAME = "Ras Bodik";
SELECT DISTINCT COUNT( 1 ) , T3.VENUEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Luke Zettlemoyer" GROUP BY T3.VENUEID ORDER BY COUNT( 1 ) DESC;
SELECT DISTINCT COUNT( T3.PAPERID ) , T3.VENUEID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Luke Zettlemoyer" GROUP BY T3.VENUEID ORDER BY COUNT( T3.PAPERID ) DESC;
SELECT DISTINCT T3.PAPERID , T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME IN ( "Decision Feedback" , "Multiuser Receiver" ) GROUP BY T3.PAPERID , T3.YEAR HAVING COUNT( DISTINCT T2.KEYPHRASENAME ) > 1 ORDER BY T3.YEAR ASC;
SELECT DISTINCT T3.YEAR FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Luke S Zettlemoyer" ORDER BY T3.YEAR;
SELECT DISTINCT T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T1.VENUENAME IN ( "vldb" , "icml" ) GROUP BY T3.AUTHORID;
SELECT DISTINCT T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T1.VENUENAME = "NIPS";
SELECT DISTINCT T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME = "deep learning" GROUP BY T3.YEAR ORDER BY T3.YEAR ASC;
SELECT DISTINCT COUNT( T3.PAPERID ) FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.KEYPHRASENAME = "question answering" AND T3.YEAR >= 2011;
SELECT DISTINCT COUNT( 1 ) , T3.AUTHORID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID WHERE T2.AUTHORNAME = "Richard Sutton" GROUP BY T3.AUTHORID ORDER BY COUNT( 1 ) DESC;
SELECT DISTINCT T2.CITINGPAPERID FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID GROUP BY T2.CITINGPAPERID HAVING COUNT( DISTINCT T2.CITEDPAPERID ) > 5;
SELECT DISTINCT CITEDPAPERID , COUNT( CITINGPAPERID ) FROM CITE GROUP BY CITEDPAPERID HAVING COUNT( CITINGPAPERID ) > 5 ;
SELECT DISTINCT PAPERID FROM PAPER WHERE YEAR != 2015 ;
SELECT DISTINCT T3.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "Boyd" AND T2.KEYPHRASENAME = "Raccoon";
SELECT DISTINCT T4.YEAR FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN PAPER AS T4 ON T3.PAPERID = T4.PAPERID JOIN AUTHOR AS T5 ON T3.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "Boyd" AND T2.KEYPHRASENAME = "Raccoon";
SELECT DISTINCT T3.YEAR , T1.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME IN ( "Nigam H. Shah" , "Srinivasan Iyer" ) GROUP BY T1.PAPERID HAVING COUNT( DISTINCT T1.AUTHORID ) = 2 ORDER BY T3.YEAR DESC;
SELECT DISTINCT COUNT( 1 ) , T1.AUTHORID FROM WRITES AS T1 JOIN PAPER AS T2 ON T1.PAPERID = T2.PAPERID GROUP BY T1.AUTHORID ORDER BY COUNT( 1 ) DESC;
SELECT DISTINCT T4.PAPERID FROM PAPERDATASET AS T1 JOIN DATASET AS T2 ON T1.DATASETID = T2.DATASETID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID WHERE T2.DATASETNAME = "ImageNet" GROUP BY T4.PAPERID;
SELECT DISTINCT T3.AUTHORID FROM VENUE AS T1 JOIN PAPER AS T2 ON T1.VENUEID = T2.VENUEID JOIN WRITES AS T3 ON T3.PAPERID = T2.PAPERID WHERE T1.VENUENAME IN ( "ICML" , "ACL" ) GROUP BY T3.AUTHORID HAVING COUNT( DISTINCT T1.VENUEID ) = 2;
SELECT DISTINCT T2.KEYPHRASEID FROM PAPER AS T1 JOIN PAPERKEYPHRASE AS T2 ON T1.PAPERID = T2.PAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID JOIN WRITES AS T4 ON T4.PAPERID = T1.PAPERID JOIN AUTHOR AS T5 ON T4.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME = "dan klein" AND T3.VENUENAME = "emnlp";
SELECT DISTINCT COUNT( T3.PAPERID ) , T4.AUTHORID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN WRITES AS T4 ON T4.PAPERID = T3.PAPERID WHERE T2.KEYPHRASENAME = "Neutralizing Antibody" AND T3.YEAR = 2012 GROUP BY T4.AUTHORID ORDER BY COUNT( T3.PAPERID ) DESC;
SELECT DISTINCT T4.TITLE FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN PAPER AS T4 ON T3.PAPERID = T4.PAPERID JOIN VENUE AS T5 ON T5.VENUEID = T4.VENUEID JOIN AUTHOR AS T6 ON T3.AUTHORID = T6.AUTHORID WHERE T6.AUTHORNAME LIKE "Eric C. Kerrigan" AND T2.KEYPHRASENAME = "Liquid" AND T5.VENUENAME = "Automatica";
SELECT DISTINCT COUNT( T2.CITEDPAPERID ) , T3.VENUENAME FROM PAPER AS T1 JOIN CITE AS T2 ON T1.PAPERID = T2.CITEDPAPERID JOIN VENUE AS T3 ON T3.VENUEID = T1.VENUEID WHERE T3.VENUENAME IN ( "popl" , "oopsla" ) GROUP BY T3.VENUENAME;
SELECT DISTINCT T4.YEAR , T3.PAPERID FROM Author AS T5, PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN PAPER AS T4 ON T3.PAPERID = T4.PAPERID WHERE T5.AUTHORNAME = "Nabil Aouf" AND T2.KEYPHRASENAME = "Semantic Parsing" ORDER BY T4.YEAR DESC;
SELECT DISTINCT VENUEID FROM PAPER WHERE TITLE = "Fracture of acrylic bone cement" ;
SELECT DISTINCT T2.KEYPHRASEID FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN PAPER AS T3 ON T3.PAPERID = T1.PAPERID JOIN VENUE AS T4 ON T4.VENUEID = T3.VENUEID WHERE T4.VENUENAME = "uist";
SELECT DISTINCT T3.PAPERID FROM WRITES AS T1 JOIN AUTHOR AS T2 ON T1.AUTHORID = T2.AUTHORID JOIN PAPER AS T3 ON T1.PAPERID = T3.PAPERID WHERE T2.AUTHORNAME = "Su-In Lee" AND T3.YEAR < 2012;
SELECT DISTINCT T4.TITLE FROM PAPERKEYPHRASE AS T1 JOIN KEYPHRASE AS T2 ON T1.KEYPHRASEID = T2.KEYPHRASEID JOIN WRITES AS T3 ON T3.PAPERID = T1.PAPERID JOIN PAPER AS T4 ON T3.PAPERID = T4.PAPERID JOIN AUTHOR AS T5 ON T3.AUTHORID = T5.AUTHORID WHERE T5.AUTHORNAME LIKE "Ranjit Jhala" AND T2.KEYPHRASENAME = "Liquid Haskell";
SELECT NAME FROM BUSINESS WHERE RATING > 4.5 ;
SELECT NAME FROM BUSINESS WHERE RATING = 3.5 ;
SELECT USER_ID FROM USER WHERE NAME = "Michelle" ;
SELECT STATE FROM BUSINESS WHERE NAME = "Whataburger" ;
SELECT T2.CITY FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "MGM Grand Buffet" AND T1.CATEGORY_NAME = "restaurant";
SELECT CITY FROM BUSINESS WHERE RATING < 1.5 ;
SELECT CITY FROM BUSINESS WHERE NAME = "Taj Mahal" ;
SELECT TEXT FROM REVIEW WHERE RATING < 1 ;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.RATING > 3.5 AND T1.CATEGORY_NAME = "restaurant";
SELECT T2.CITY FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Taj Mahal" AND T1.CATEGORY_NAME = "restaurant";
SELECT T2.TEXT FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T1.NAME = "Niloofar";
SELECT T2.NAME FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T3.NAME = "Niloofar";
SELECT T2.NAME FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T1.RATING = 5 AND T3.NAME = "Niloofar";
SELECT T4.TEXT FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T5 ON T5.USER_ID = T4.USER_ID WHERE T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "restaurant" AND T5.NAME = "Michelle";
SELECT T2.REVIEW_COUNT FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho" AND T2.STATE = "Texas" AND T1.CATEGORY_NAME = "restaurant";
SELECT COUNT( DISTINCT ( T3.TEXT ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho" AND T2.STATE = "Texas" AND T1.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.RATING = 5 AND T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "restaurant";
SELECT T4.NEIGHBOURHOOD_NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "restaurant";
SELECT T4.NEIGHBOURHOOD_NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T2.RATING < 2.5 AND T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.STATE = "Pennsylvania" AND T1.CATEGORY_NAME = "restaurant";
SELECT T3.TEXT FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.REVIEW_COUNT > 100 AND T1.CATEGORY_NAME = "Pet Groomers";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.REVIEW_COUNT > 100 AND T1.CATEGORY_NAME = "Pet Groomers";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "Pet Groomers" GROUP BY T2.NAME HAVING COUNT( DISTINCT ( T3.TEXT ) ) > 100;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "breweries";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T2.REVIEW_COUNT > 100 AND T1.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "restaurant" GROUP BY T2.NAME HAVING COUNT( DISTINCT ( T3.TEXT ) ) > 100;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T2.REVIEW_COUNT >= 30 AND T1.CATEGORY_NAME = "Bars";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "Bars" GROUP BY T2.NAME HAVING COUNT( DISTINCT ( T3.TEXT ) ) >= 30;
SELECT T4.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.NAME = "Mesa Grill" AND T1.CATEGORY_NAME = "restaurant";
SELECT FULL_ADDRESS FROM BUSINESS WHERE CITY = "Los Angeles" AND NAME = "Walmart" ;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "restaurant" AND T4.NAME = "Patrick";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T1.CATEGORY_NAME = "Bars" AND T4.NAME = "Patrick";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.RATING >= 3 AND T1.CATEGORY_NAME = "Bars" AND T4.NAME = "Patrick";
SELECT T3.NAME FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.NAME = "Barrio Cafe" AND T1.YEAR = 2015;
SELECT NAME FROM BUSINESS WHERE RATING < 2 AND STATE = "Texas" ;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "Seafood" AND T3.CATEGORY_NAME = "restaurant";
SELECT T2.TEXT FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T2.RATING > 4 AND T1.NAME = "Patrick";
SELECT BUSINESS_ID FROM BUSINESS WHERE CITY = "Los Angeles" AND NAME = "Apple Store" ;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T2.RATING > 4.5 AND T1.CATEGORY_NAME = "restaurant";
SELECT T1.NEIGHBOURHOOD_NAME FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Flat Top Grill";
SELECT T3.NEIGHBOURHOOD_NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Flat Top Grill" AND T1.CATEGORY_NAME = "restaurant";
SELECT T1.TEXT FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Vintner Grill" AND T1.LIKES > 9;
SELECT T1.TEXT FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Kabob Palace" AND T1.YEAR = 2014;
SELECT T3.NAME FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.CITY = "Dallas";
SELECT T2.CITY FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "MGM Grand Buffet" AND T2.STATE = "Texas" AND T1.CATEGORY_NAME = "restaurant";
SELECT T4.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN TIP AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T1.CATEGORY_NAME = "Pet Groomers";
SELECT T3.TEXT FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.RATING < 1.5 AND T1.CATEGORY_NAME = "Bistros";
SELECT T3.TEXT FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "Bistros" AND T3.RATING < 1.5;
SELECT T1.neighbourhood_name FROM BUSINESS AS T2 JOIN NEIGHBOURHOOD AS T1 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T4.NAME = "Michelle";
SELECT T1.TEXT FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho" AND T2.STATE = "Texas";
SELECT T4.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T1.CATEGORY_NAME = "restaurant";
SELECT T1.TEXT FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho" AND T2.STATE = "Pennsylvania" AND T1.YEAR = 2010;
SELECT T4.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T1.CATEGORY_NAME = "restaurant" AND T3.YEAR = 2010;
SELECT T3.TEXT FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID JOIN TIP AS T3 ON T1.USER_ID = T3.USER_ID WHERE T2.YEAR = 2012;
SELECT T1.TEXT FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.RATING = 2.5;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T1.CATEGORY_NAME = "escape games";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.RATING > 3.5 AND T1.CATEGORY_NAME = "restaurant";
SELECT SUM( T4.COUNT ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN CHECKIN AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Moroccan";
SELECT SUM( T4.COUNT ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN CHECKIN AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "Moroccan" AND T3.CATEGORY_NAME = "restaurant" AND T4.DAY = "Friday";
SELECT T4.DAY , SUM( T4.COUNT ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN CHECKIN AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T1.CATEGORY_NAME = "Moroccan" AND T3.CATEGORY_NAME = "restaurant" GROUP BY T4.DAY;
SELECT T2.STATE , SUM( T4.COUNT ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN CHECKIN AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "Delis" AND T4.DAY = "Sunday" GROUP BY T2.STATE;
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T2.YEAR = 2015 AND T1.NAME = "Niloofar";
SELECT AVG ( T2.RATING ) FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T1.NAME = "Michelle";
SELECT T1.COUNT FROM CHECKIN AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho" AND T1.DAY = "Friday";
SELECT COUNT( DISTINCT ( T3.NAME ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.CITY = "Pittsburgh" AND T2.NAME = "Sushi Too";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Pittsburgh" AND T2.RATING = 4.5 AND T1.CATEGORY_NAME = "restaurant";
SELECT COUNT( DISTINCT ( TEXT ) ) FROM TIP WHERE YEAR = 2015 ;
SELECT SUM( T2.LIKES ) FROM USER AS T1 JOIN TIP AS T2 ON T1.USER_ID = T2.USER_ID WHERE T1.NAME = "Niloofar";
SELECT SUM( T1.LIKES ) FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Cafe Zinho";
SELECT SUM( T1.LIKES ) FROM TIP AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.NAME = "Cafe Zinho" AND T3.NAME = "Niloofar";
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN TIP AS T2 ON T1.USER_ID = T2.USER_ID WHERE T2.YEAR = 2010 AND T1.NAME = "Michelle";
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN TIP AS T2 ON T1.USER_ID = T2.USER_ID WHERE T2.MONTH = "April" AND T1.NAME = "Michelle";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.STATE = "Texas" AND T1.CATEGORY_NAME = "restaurant";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T2.RATING > 3.5 AND T1.CATEGORY_NAME = "Bars";
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.CITY = "Dallas" AND T2.NAME = "Texas de Brazil" AND T2.STATE = "Texas" AND T1.CATEGORY_NAME = "restaurant";
SELECT COUNT( DISTINCT ( T3.NAME ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.NAME = "Bistro Di Napoli" AND T1.YEAR = 2015;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "restaurant" AND T3.NEIGHBOURHOOD_NAME = "Hazelwood";
SELECT COUNT( DISTINCT ( BUSINESS_ID ) ) FROM BUSINESS WHERE CITY = "Dallas" AND NAME = "Starbucks" AND STATE = "Texas" ;
SELECT REVIEW_COUNT FROM BUSINESS WHERE NAME = "Acacia Cafe" ;
SELECT COUNT( DISTINCT ( T1.TEXT ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Acacia Cafe";
SELECT AVG ( T3.COUNT ) , T3.DAY FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CHECKIN AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.NAME = "Barrio Cafe" AND T1.CATEGORY_NAME = "restaurant" GROUP BY T3.DAY;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T1.NEIGHBOURHOOD_NAME = "Stone Meadows";
SELECT COUNT( DISTINCT ( T1.TEXT ) ) , T1.MONTH FROM BUSINESS AS T2 , REVIEW AS T1 , USER AS T3 WHERE T1.BUSINESS_ID = T2.BUSINESS_ID AND T3.NAME = "Michelle" GROUP BY T1.MONTH ; 
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T1.NAME = "Adrienne";
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID WHERE T2.MONTH = "March" AND T2.YEAR = 2014 AND T1.NAME = "Michelle";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T1.YEAR = 2010 AND T3.NAME = "Michelle";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.CITY = "San Diego" AND T1.YEAR = 2010 AND T3.NAME = "Christine";
SELECT COUNT( DISTINCT ( BUSINESS_ID ) ) FROM BUSINESS WHERE CITY = "Los Angeles" AND NAME = "Target" ;
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "Irish Pub";
SELECT AVG ( RATING ) FROM REVIEW WHERE YEAR = 2014 ;
SELECT COUNT( DISTINCT ( T3.NAME ) ) FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T3 ON T3.USER_ID = T1.USER_ID WHERE T2.NAME = "Vintner Grill" AND T1.YEAR = 2010;
SELECT COUNT( DISTINCT ( T4.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN USER AS T4 ON T4.USER_ID = T3.USER_ID WHERE T2.NAME = "Vintner Grill" AND T1.CATEGORY_NAME = "category_name0" AND T3.YEAR = 2010;
SELECT SUM( T2.REVIEW_COUNT ) FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.NEIGHBOURHOOD_NAME = "South Summerlin";
SELECT COUNT( DISTINCT ( T3.TEXT ) ) FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.NEIGHBOURHOOD_NAME = "South Summerlin";
SELECT COUNT( DISTINCT ( NAME ) ) FROM USER WHERE NAME = "Michelle" ;
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "restaurant";
SELECT COUNT( DISTINCT ( CITY ) ) FROM BUSINESS WHERE NAME = "Panda Express" ;
SELECT COUNT( DISTINCT ( T2.TEXT ) ) FROM USER AS T1 JOIN TIP AS T2 ON T1.USER_ID = T2.USER_ID WHERE T1.NAME = "Michelle";
SELECT SUM( T1.COUNT ) FROM CHECKIN AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T3.NEIGHBOURHOOD_NAME = "Brighton Heights";
SELECT SUM( COUNT ) FROM CHECKIN WHERE DAY = "Sunday" ;
SELECT COUNT( DISTINCT ( TEXT ) ) FROM REVIEW WHERE MONTH = "March" ;
SELECT COUNT( DISTINCT ( TEXT ) ) , MONTH FROM TIP GROUP BY MONTH ;
SELECT COUNT( DISTINCT ( T1.NEIGHBOURHOOD_NAME ) ) FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T2.RATING = 5;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.STATE = "Texas" AND T1.CATEGORY_NAME = "Moroccan" AND T3.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Thai" ORDER BY T2.REVIEW_COUNT DESC LIMIT 1;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Thai" GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T4.TEXT ) ) DESC LIMIT 1;
SELECT T2.NAME FROM CHECKIN AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID  GROUP BY T2.NAME ORDER BY SUM( T1.COUNT ) DESC LIMIT 1;
SELECT T1.NAME FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID  GROUP BY T1.NAME ORDER BY COUNT( DISTINCT ( T2.TEXT ) ) DESC LIMIT 1;
SELECT T1.USER_ID FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID  GROUP BY T1.USER_ID ORDER BY COUNT( DISTINCT ( T2.TEXT ) ) DESC LIMIT 1;
SELECT T1.NEIGHBOURHOOD_NAME FROM NEIGHBOURHOOD AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" GROUP BY T1.NEIGHBOURHOOD_NAME ORDER BY COUNT( DISTINCT ( T2.NAME ) ) DESC LIMIT 1;
SELECT T4.NEIGHBOURHOOD_NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Italian" ORDER BY T2.RATING DESC LIMIT 1;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T2.RATING > 3.5 AND T1.CATEGORY_NAME = "Mexican" AND T3.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T2.STATE = "Texas" AND T1.CATEGORY_NAME = "Valet Service" AND T3.CATEGORY_NAME = "restaurant";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN NEIGHBOURHOOD AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Madison" AND T1.CATEGORY_NAME = "Italian" AND T3.CATEGORY_NAME = "restaurant" AND T4.NEIGHBOURHOOD_NAME = "Meadowood";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Los Angeles" AND T2.RATING > 3 AND T2.REVIEW_COUNT > 30 AND T1.CATEGORY_NAME = "Bars";
SELECT COUNT( DISTINCT ( T2.NAME ) ) FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Edinburgh" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Egyptian";
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Italian" ORDER BY T2.RATING DESC LIMIT 1;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Indian" ORDER BY T2.REVIEW_COUNT DESC LIMIT 1;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID JOIN CATEGORY AS T3 ON T3.BUSINESS_ID = T2.BUSINESS_ID JOIN REVIEW AS T4 ON T4.BUSINESS_ID = T2.BUSINESS_ID WHERE T2.CITY = "Dallas" AND T1.CATEGORY_NAME = "restaurant" AND T3.CATEGORY_NAME = "Indian" GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T4.TEXT ) ) DESC LIMIT 1;
SELECT T1.NAME FROM USER AS T1 JOIN REVIEW AS T2 ON T1.USER_ID = T2.USER_ID  GROUP BY T1.NAME HAVING AVG ( T2.RATING ) < 3;
SELECT T2.NAME FROM REVIEW AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID WHERE T1.MONTH = "April" GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T1.TEXT ) ) DESC LIMIT 1;
SELECT T2.NAME FROM CATEGORY AS T1 JOIN BUSINESS AS T2 ON T1.BUSINESS_ID = T2.BUSINESS_ID  GROUP BY T2.NAME ORDER BY COUNT( DISTINCT ( T1.CATEGORY_NAME ) ) DESC LIMIT 1;
