select count ( * ) from singer
select count ( * ) from singer
select Name , Country , Age from singer order by Age desc
select Name , Country , Age from singer order by Age desc
select avg ( Age ) , min ( Age ) , max ( Age ) from singer where Country = 1
select avg ( Age ) , min ( Age ) , max ( Age ) from singer where Country = 1
select Song_Name , Song_release_year from singer order by Age limit 1
select Song_Name , Song_release_year from singer order by Age limit 1
select Country from singer where Age > 1
select Country from singer where Age > 1
select Country , count ( * ) from singer group by Country
select Country , count ( * ) from singer group by Country
select Song_Name from singer where Age > ( select avg ( Age ) from singer )
select Song_Name from singer where Age > ( select avg ( Age ) from singer )
select Location , Name from stadium where Capacity between 1 and 1
select Location , Name from stadium where Capacity between 1 and 1
select avg ( Average ) , max ( Capacity ) from stadium
select avg ( Average ) , max ( Capacity ) from stadium
select T1.Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by T2.Stadium_ID order by avg ( T1.Average ) desc limit 1
select Name , Capacity from stadium order by Average desc limit 1
select count ( * ) from concert where Year = 1 or Year = 1
select count ( * ) from concert where Year = 1 or Year = 1
select Name , count ( * ) from stadium group by Stadium_ID
select T2.Stadium_ID , count ( * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by T2.Stadium_ID
select T1.Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year > = 1 group by T1.Stadium_ID order by count ( * ) desc limit 1
select T1.Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year > 1 group by T2.Stadium_ID order by count ( * ) desc limit 1
select Year from concert group by Year order by count ( * ) desc limit 1
select Year from concert group by Year order by count ( * ) desc limit 1
select Name from stadium where Stadium_ID not in ( select Stadium_ID from concert )
select Name from stadium where Stadium_ID not in ( select Stadium_ID from concert )
select Country from singer where Age > 1 intersect select Country from singer where Age < 1
select Name from stadium except select T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year = 1
select Name from stadium where Stadium_ID not in ( select Stadium_ID from concert where Year = 1 )
select concert_Name , Theme , count ( * ) from concert group by concert_ID
select concert_Name , Theme , count ( * ) from concert group by concert_Name
select Name , count ( * ) from singer group by Name
select Name , count ( * ) from singer group by Name
select T3.Name from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID where T1.Year = 1
select T3.Name from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID where T1.Year = 1
select Name , Country from singer where Song_Name like 1
select Name , Country from singer where Song_Name like 1
select T1.Name , T1.Location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year = 1 intersect select T3.Name , T3.Location from stadium as T3 join concert as T4 on T3.Stadium_ID = T4.Stadium_ID where T4.Year = 1
select T1.Name , T1.Location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year = 1 intersect select T3.Name , T3.Location from stadium as T3 join concert as T4 on T3.Stadium_ID = T4.Stadium_ID where T4.Year = 1
select count ( * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID order by T1.Capacity desc limit 1
select count ( * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID order by T1.Capacity desc limit 1
select count ( * ) from Pets where weight > 1
select count ( * ) from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.weight > 1
select weight from Pets order by pet_age limit 1
select weight from Pets order by pet_age limit 1
select max ( weight ) , max ( weight ) , PetType from Pets group by PetType
select max ( weight ) , max ( weight ) , PetType from Pets group by PetType
select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
select count ( * ) from Student where Age > 1
select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 1
select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 1
select count ( PetType ) from Pets
select count ( PetType ) from Pets
select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.PetType = 1 or T3.PetType = 1
select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.PetType = 1 or T3.PetType = 1
select T1.Fname , T1.LName from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.PetType = 1 intersect select Fname from Student
select T1.Fname , T1.LName from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.PetType = 1 intersect select T4.Fname from Student as T4 join Has_Pet as T5 on T4.StuID = T5.StuID join Pets as T6 on T5.PetID = T6.PetID where T6.PetType = 1
select Major , Age from Student except select Major , Age from Student where StuID in ( select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.pet_age = ( select min ( pet_age ) from Pets ) )
select Major , Age from Student where Major not in ( select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.pet_age = 1 )
select StuID from Student except select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 1
select StuID from Student except select StuID from Has_Pet
select Fname , Age from Student where StuID not in ( select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 1 )
select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.PetType = 1 except select T4.Fname from Student as T4 join Has_Pet as T5 on T4.StuID = T5.StuID join Pets as T6 on T5.PetID = T6.PetID where T6.PetType = 1
select PetType , weight from Pets order by pet_age limit 1
select PetType , weight from Pets order by pet_age limit 1
select PetID , weight from Pets where pet_age > 1 group by PetID
select PetID , weight from Pets where pet_age > 1
select avg ( pet_age ) , max ( pet_age ) , PetType from Pets group by PetType
select avg ( pet_age ) , max ( pet_age ) , PetType from Pets group by PetType
select avg ( weight ) , PetType from Pets group by PetType
select avg ( weight ) , PetType from Pets group by PetType
select Fname , Age from Student
select Fname , Age from Student
select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.LName = 1
select T3.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.LName = 1
select count ( * ) , StuID from Has_Pet group by StuID
select count ( * ) , StuID from Has_Pet group by StuID
select T2.Fname , T2.Sex from Has_Pet as T1 join Student as T2 on T1.StuID = T2.StuID group by T1.StuID having count ( * ) > 1
select T2.Fname , T2.Sex from Has_Pet as T1 join Student as T2 on T1.StuID = T2.StuID group by T1.StuID having count ( * ) > 1
select LName from Student where Age = 1
select LName from Student where Age = 1
select avg ( Age ) from Student where StuID not in ( select StuID from Has_Pet )
select avg ( Age ) from Student where StuID not in ( select StuID from Has_Pet )
select count ( * ) from continents
select count ( * ) from continents
select T1.Continent , count ( * ) , T2.CountryName from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T2.Continent
select T1.Continent , count ( T1.* ) , T2.CountryName from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T2.Continent
select count ( * ) from countries
select count ( * ) from countries
select T1.FullName , T1.Id , count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T2.Maker
select FullName , Id , count ( * ) from car_makers group by Id
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Horsepower asc limit 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Horsepower asc limit 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight < ( select avg ( Weight ) from cars_data )
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight < ( select avg ( Weight ) from cars_data )
select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
select T1.Make , T2.Year from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T2.Year asc limit 1
select T1.Maker , T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Year - T4.Year limit 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year > 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year > 1
select Continent , count ( * ) from continents group by Continent
select Continent , count ( * ) from continents group by Continent
select Country from car_makers group by Country order by count ( * ) desc limit 1
select T2.CountryName from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId group by T1.Country order by count ( * ) desc limit 1
select count ( * ) , T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T2.Maker
select Id , FullName , count ( * ) from car_makers group by Id
select T4.Accelerate from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T3.Make = 1 and T1.FullName = 1
select T2.Accelerate from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T1.Model = 1 and T2.Accelerate = 1
select count ( * ) from car_makers where Country = 1
select count ( * ) from car_makers where Country = 1
select count ( * ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join countries as T3 on T2.Country = T3.CountryId where T3.Continent = 1
select count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Country = 1
select avg ( MPG ) from cars_data where Cylinders = 1
select avg ( Horsepower ) from cars_data where Cylinders = 1
select min ( Weight ) from cars_data where Year = 1 and Year = 1
select Weight from cars_data where Year = 1 and Cylinders = 1
select T1.Maker , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker
select T1.Maker , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker
select T1.Country , T2.CountryId from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId
select CountryName , CountryId from countries group by CountryId having count ( * ) > = 1
select count ( * ) from cars_data where Horsepower > 1
select count ( * ) from cars_data where Horsepower > 1
select Year , avg ( Weight ) from cars_data group by Year
select avg ( Weight ) , avg ( Year ) , Year from cars_data group by Year
select Country from car_makers group by Country having count ( * ) > = 1
select CountryName from countries group by CountryName having count ( * ) > = 1
select max ( Horsepower ) , max ( Cylinders ) from cars_data where Cylinders = 1
select max ( T3.Horsepower ) , T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Cylinders = 1 group by T1.Model
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id group by T1.Model order by max ( T3.Cylinders ) desc limit 1
select T1.Make from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id order by T2.MPG desc limit 1
select avg ( Horsepower ) from cars_data where Year < 1
select avg ( Horsepower ) from cars_data where Year < 1
select avg ( T3.Edispl ) from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Model = 1
select avg ( Edispl ) from cars_data
select max ( Accelerate ) from cars_data
select max ( Accelerate ) from cars_data
select Model from model_list group by Model order by count ( * ) desc limit 1
select Model from model_list group by Model order by count ( * ) desc limit 1
select count ( * ) from cars_data where Cylinders > 1
select count ( * ) from cars_data where Cylinders > 1
select count ( * ) from cars_data where Year = 1
select count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
select count ( * ) from car_makers where FullName = 1
select count ( * ) from model_list where Maker = 1
select T1.FullName , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T2.Maker having count ( * ) > 1
select T1.FullName , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T2.Maker having count ( * ) > 1
select T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.FullName = 1 or T1.FullName = 1
select T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Maker = 1 or T1.Maker = 1
select Year from cars_data where Weight between 1 and 1
select Year from cars_data where Weight < 1 intersect select Year from cars_data where Weight > 1
select Horsepower from cars_data order by Accelerate desc limit 1
select Horsepower from cars_data order by Accelerate desc limit 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Accelerate limit 1
select T1.Model , count ( * ) from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T2.Model = 1 group by T1.Model order by count ( * ) asc limit 1
select count ( * ) from cars_data where Horsepower > ( select max ( Horsepower ) from cars_data ) order by Horsepower desc limit 1
select count ( * ) from cars_data where Accelerate > ( select max ( Horsepower ) from cars_data ) order by Horsepower desc limit 1
select count ( * ) from car_makers ( select Country from car_makers group by Country having count ( * ) > 1 )
select count ( * ) from car_makers ( select Country from car_makers group by Country having count ( * ) > 1 )
select count ( * ) from cars_data where Cylinders > 1
select count ( * ) from cars_data where Cylinders > 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Cylinders = ( select max ( Cylinders ) from cars_data )
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Model = 1 order by T3.Horsepower desc limit 1
select T1.Make , T1.Make from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Cylinders > 1 except select T3.MakeId , T3.Make from car_names as T3 join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > 1
select T1.MakeId , T2.Id from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Cylinders < 1 order by T2.Cylinders limit 1
select max ( Horsepower ) from cars_data where Cylinders < 1 or Year < 1
select max ( MPG ) from cars_data where Cylinders < 1 or Year < 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight > 1 except select T5.Model from car_makers as T4 join model_list as T5 on T4.Id = T5.Maker where T4.FullName = 1
select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight > 1 except select T5.Model from car_makers as T4 join model_list as T5 on T4.Id = T5.Maker where T4.FullName = 1
select CountryName from countries except select CountryName from countries
select CountryName from countries where CountryId not in ( select Country from car_makers )
select Id , Maker from car_makers group by Id having count ( * ) > = 1 intersect select Id , Maker from car_makers group by Id having count ( * ) > = 1
select Id , Maker from car_makers group by Id having count ( * ) > = 1 intersect select Id , Maker from car_makers group by Id having count ( * ) > = 1
select T1.Id , T2.CountryName from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId where T1.Maker = 1 union select T3.Id , T6.CountryName from car_makers as T5 join model_list as T6 on T5.Id = T6.Maker join car_names as T5 on T6.Model = T5.Model join countries as T6 on T5.Country = T6.CountryId where T5.Model = 1
select T1.Id , T2.CountryName from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId group by T1.Id having count ( * ) > 1 union select T3.Id , T4.CountryName from car_makers as T3 join countries as T4 on T3.Country = T4.CountryId where T3.Maker = 1
select Country from airlines where Airline = 1
select Country from airlines where Airline = 1
select Abbreviation from airlines where Airline = 1
select Abbreviation from airlines where Airline = 1
select Airline , Abbreviation from airlines where Country = 1
select Airline , Abbreviation from airlines where Country = 1
select AirportCode , City from airports where City = 1
select AirportCode , AirportName from airports where City = 1
select count ( * ) from airlines
select count ( * ) from airlines
select count ( * ) from airports
select count ( * ) from airports
select count ( * ) from flights
select count ( * ) from flights
select Airline from airlines where Abbreviation = 1
select Airline from airlines where Abbreviation = 1
select count ( * ) from airlines where Country = 1
select count ( * ) from airlines where Country = 1
select City , Country from airports where AirportName = 1
select City , Country from airports where AirportName = 1
select AirportName from airports where AirportName = 1
select AirportName from airports where AirportCode = 1
select AirportName from airports where City = 1
select AirportName from airports where City = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportCode = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportCode = 1
select count ( * ) from airports where AirportName = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 1
select count ( * ) from airports where City = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select count ( * ) from airports where City = 1 and City = 1
select count ( * ) from airports where City = 1 and City = 1
select count ( * ) from airlines where Airline = 1
select count ( * ) from airlines where Airline = 1
select count ( * ) from airports where AirportName = 1
select count ( * ) from airports where AirportName = 1
select count ( * ) from airports where AirportName = 1
select count ( * ) from airports where AirportName = 1
select count ( * ) from airports where City = 1 and City = 1
select count ( * ) from airports as T1 join airlines as T2 where T1.City = 1 and T2.Airline = 1
select City from airports group by City order by count ( * ) desc limit 1
select City from airports group by City order by count ( * ) desc limit 1
select City from airports group by City order by count ( * ) desc limit 1
select City from airports group by City order by count ( * ) desc limit 1
select AirportCode from airports group by AirportCode order by count ( * ) desc limit 1
select AirportCode from airports group by AirportCode order by count ( * ) desc limit 1
select AirportCode from airports group by AirportCode order by count ( * ) limit 1
select AirportCode from airports order by AirportCode limit 1
select Airline from airlines group by Airline order by count ( * ) desc limit 1
select T1.Airline from airlines as T1 join flights as T2 group by T2.Airline order by count ( * ) desc limit 1
select T1.Abbreviation , T1.Country from airlines as T1 join flights as T2 group by T2.FlightNo order by count ( * ) limit 1
select Abbreviation , Country from airlines group by Abbreviation order by count ( * ) limit 1
select count ( * ) from airports where AirportName = 1
select T1.Airline from airlines as T1 join flights as T2 where T2.SourceAirport = 1
select T2.Airline , T2.Airline from airports as T1 join airlines as T2 where T1.AirportCode = 1
select T2.Airline from airports as T1 join airlines as T2 where T1.AirportCode = 1
select T2.Airline from airports as T1 join airlines as T2 where T1.AirportName in ( select AirportCode from airports where AirportName = 1 intersect select T3.AirportCode from airports as T3 join flights as T4 on T3.AirportCode = T4.DestAirport where T4.FlightNo = 1 )
select T2.Airline from airports as T1 join airlines as T2 where T1.AirportName = 1 intersect select T4.Airline from airports as T3 join airlines as T4 where T3.AirportName = 1
select T2.Airline from airports as T1 join airlines as T2 where T1.AirportName = 1 except select T4.Airline from airports as T3 join airlines as T4 where T3.AirportName = 1
select T2.Airline from airports as T1 join airlines as T2 where T1.AirportName = 1 except select T4.Airline from airports as T3 join airlines as T4 where T3.AirportName = 1
select T1.Airline from airlines as T1 join flights as T2 group by T1.uid having count ( * ) > = 1
select T1.Airline from airlines as T1 join flights as T2 group by T2.Airline having count ( * ) > = 1
select count ( * ) , T1.uid from airlines as T1 join flights as T2 where T2.FlightNo < 1 group by T1.uid
select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo < 1
select T2.FlightNo from airlines as T1 join flights as T2 where T1.Airline = 1
select T2.FlightNo from airlines as T1 join flights as T2 where T1.Airline = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportName = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
select count ( * ) from airports where City = 1 or City = 1
select count ( * ) from airports where City = 1 or Country = 1
select AirportName from airports where AirportCode not in ( select FlightNo from flights )
select AirportCode from airports except select T1.AirportCode from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.FlightNo = 1
select count ( * ) from employee
select count ( * ) from employee
select Name from employee order by Age asc
select Name from employee order by Age asc
select City , count ( * ) from employee group by City
select City , count ( * ) from employee group by City
select City from employee where Age < 1 group by City having count ( * ) > 1
select City from employee where Age < 1 group by City having count ( * ) > 1
select District , count ( * ) from shop group by District
select District , count ( * ) from shop group by Location
select Manager_name , District from shop order by Number_products desc limit 1
select Name , District from shop order by Number_products desc limit 1
select min ( Number_products ) , max ( Number_products ) from shop
select min ( Number_products ) , max ( Number_products ) from shop
select Name , Location , District from shop order by Number_products desc
select Name , Location , District from shop order by Number_products desc
select Name from shop where Number_products > ( select avg ( Number_products ) from shop )
select Name from shop where Number_products > ( select avg ( Number_products ) from shop )
select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Employee_ID order by count ( * ) desc limit 1
select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Employee_ID order by count ( * ) desc limit 1
select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID order by T1.Bonus desc limit 1
select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID order by T1.Bonus desc limit 1
select Name from employee where Employee_ID not in ( select Employee_ID from evaluation )
select Name from employee where Employee_ID not in ( select Employee_ID from evaluation )
select T2.Name from hiring as T1 join shop as T2 on T1.Shop_ID = T2.Shop_ID group by T1.Shop_ID order by count ( * ) desc limit 1
select Name from shop group by Name order by count ( * ) desc limit 1
select Name from shop where Shop_ID not in ( select Shop_ID from hiring )
select Name from shop except select Name from shop
select count ( * ) , T2.Name from hiring as T1 join shop as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T1.Employee_ID = T3.Employee_ID group by T1.Shop_ID
select count ( * ) , Name from shop group by Name
select sum ( Bonus ) from evaluation
select sum ( Bonus ) from evaluation
select * from hiring
select * from hiring
select District from shop where Number_products < 1 intersect select District from shop where Number_products > 1
select District from shop where Number_products < 1 intersect select District from shop where Number_products > 1
select count ( Location ) from shop
select count ( Location ) from shop
select count ( * ) from Documents
select count ( * ) from Documents
select Document_ID , Document_Name , Document_Description from Documents
select Document_ID , Document_Name , Document_Description from Documents
select Document_Name , Template_ID from Documents where Document_Description like 1
select Document_Name , Template_ID from Documents where Document_Description like 1
select Document_ID , Template_ID , Document_Description from Documents where Document_Name = 1
select Document_ID , Template_ID , Document_Description from Documents where Document_Name = 1
select count ( Template_Type_Code ) from Templates
select count ( Template_ID ) from Documents
select count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1
select count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1
select Template_ID , count ( * ) from Documents group by Template_ID
select T2.Template_ID , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_ID
select T1.Template_ID , T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_ID order by count ( * ) desc limit 1
select T3.Template_ID , T2.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T1.Template_ID = T3.Template_ID group by T1.Template_ID order by count ( * ) desc limit 1
select Template_ID from Documents group by Template_ID having count ( * ) > 1
select Template_ID from Templates group by Template_ID having count ( * ) > 1
select Template_ID from Templates except select Template_ID from Documents
select Template_ID from Templates except select Template_ID from Documents
select count ( * ) from Templates
select count ( * ) from Templates
select Template_ID , Version_Number , Template_Type_Code from Templates
select Template_ID , Version_Number , Template_Type_Code from Templates
select Template_Type_Code from Templates
select Template_Type_Code from Templates
select Template_ID from Templates where Template_Type_Code = 1 or Template_Type_Code = 1
select Template_ID from Templates where Template_Type_Code = 1 or Template_Type_Code = 1
select count ( * ) from Templates where Template_Type_Code = 1
select count ( * ) from Templates where Template_Type_Code = 1
select Version_Number , Template_Type_Code from Templates where Date_Effective_From > 1
select Version_Number , Template_Type_Code from Templates group by Template_Type_Code having count ( * ) < 1
select Template_Type_Code , count ( * ) from Templates group by Template_Type_Code
select Template_Type_Code , count ( * ) from Templates group by Template_Type_Code
select Template_Type_Code from Templates group by Template_Type_Code order by count ( * ) desc limit 1
select T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T1.Template_Type_Code order by count ( * ) desc limit 1
select Template_Type_Code from Templates group by Template_Type_Code having count ( * ) < 1
select Template_Type_Code from Templates group by Template_Type_Code having count ( * ) < 1
select min ( Version_Number ) , Template_Type_Code from Templates
select min ( Version_Number ) , Template_Type_Code from Templates
select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 1
select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T2.Document_Name = 1
select T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1
select T2.Document_Name from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1
select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
select T2.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T1.Template_ID = T3.Template_ID group by T1.Template_Type_Code order by count ( * ) desc limit 1
select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code order by count ( * ) desc limit 1
select Template_Type_Code from Ref_Template_Types except select Template_Type_Code from Templates
select Template_Type_Code from Ref_Template_Types except select Template_Type_Code from Templates
select Template_Type_Code , Template_Type_Description from Ref_Template_Types
select Template_Type_Code , Template_Type_Description from Ref_Template_Types
select Template_Type_Description from Ref_Template_Types where Template_Type_Code = 1
select Template_Type_Description from Ref_Template_Types where Template_Type_Code = 1
select Template_Type_Code from Ref_Template_Types where Template_Type_Description = 1
select Template_Type_Code from Ref_Template_Types where Template_Type_Description = 1
select Template_Type_Description from Ref_Template_Types
select Template_Type_Description from Ref_Template_Types
select T1.Template_ID from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Description = 1
select T1.Template_ID from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Description = 1
select count ( * ) from Paragraphs
select count ( * ) from Paragraphs
select count ( * ) from Documents where Document_Name = 1
select count ( * ) from Documents where Document_Name = 1
select Paragraph_Text from Paragraphs where Paragraph_Text = 1
select Other_Details from Paragraphs where Paragraph_Text like 1
select T2.Paragraph_ID , T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
select T2.Paragraph_ID , T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
select T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
select T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
select Document_ID , count ( * ) from Paragraphs group by Document_ID order by count ( * )
select T2.Document_ID , count ( * ) from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID order by count ( * ) asc
select Document_ID , Document_Name , count ( * ) from Documents group by Document_ID
select T2.Document_ID , T2.Document_Name , count ( * ) from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID
select Document_ID from Paragraphs group by Document_ID having count ( * ) > = 1
select Document_ID from Paragraphs group by Document_ID having count ( * ) > = 1
select Document_ID , Document_Name from Documents group by Document_ID order by count ( * ) desc limit 1
select Document_ID , Document_Name from Documents group by Document_ID order by count ( * ) desc limit 1
select Document_ID from Paragraphs group by Document_ID order by count ( * ) asc limit 1
select T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID group by T2.Document_ID order by count ( * ) asc limit 1
select Document_ID from Paragraphs group by Document_ID having count ( * ) between 1 and 1
select T2.Document_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID having count ( * ) between 1 and 1
select T2.Document_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where T1.Paragraph_Text = 1 intersect select Document_ID from Paragraphs where Paragraph_Text = 1
select T2.Document_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where T1.Paragraph_Text = 1 intersect select Document_ID from Paragraphs where Paragraph_Text = 1
select count ( * ) from teacher
select count ( * ) from teacher
select Name from teacher order by Age asc
select Name from teacher order by Age asc
select Age , Hometown from teacher
select Age , Hometown from teacher
select Name from teacher where Hometown != 1
select Name from teacher where Hometown != 1
select Name from teacher where Age = 1 or Age = 1
select Name from teacher where Age = 1 or Age = 1
select Hometown from teacher order by Age limit 1
select ( Age ) from teacher order by Age limit 1
select Hometown , count ( * ) from teacher group by Hometown
select Hometown , count ( * ) from teacher group by Hometown
select Hometown from teacher group by Hometown order by count ( * ) desc limit 1
select Hometown from teacher group by Hometown order by count ( * ) desc limit 1
select Hometown from teacher group by Hometown having count ( * ) > = 1
select Hometown from teacher group by Hometown having count ( * ) > = 1
select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID
select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID
select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID order by T1.Name
select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID order by T1.Name
select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID where T3.Course = 1
select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID where T3.Course = 1
select Name , count ( * ) from teacher group by Name
select Name , count ( * ) from teacher group by Name
select Name from teacher group by Teacher_ID having count ( * ) > = 1
select Name from teacher group by Teacher_ID having count ( * ) > = 1
select Name from teacher where Teacher_ID not in ( select Teacher_ID from course_arrange )
select Name from teacher where Teacher_ID not in ( select Teacher_ID from course_arrange )
select count ( * ) from visitor where Age < 1
select Name from visitor where Level_of_membership > 1 order by Level_of_membership
select avg ( Age ) from visitor where Level_of_membership != 1
select Name , Level_of_membership from visitor where Age > 1 order by Level_of_membership
select Museum_ID , Name from museum group by Museum_ID order by sum ( Num_of_Staff ) desc limit 1
select avg ( Num_of_Staff ) from museum where Open_Year < 1
select Open_Year , Num_of_Staff from museum where Name = 1
select Name from museum where Num_of_Staff > ( select min ( Num_of_Staff ) from museum where Open_Year > 1 )
select ID , Name , Age from visitor group by ID having count ( * ) > = 1
select T1.ID , T1.Name , T1.Level_of_membership from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID group by T1.ID order by sum ( T2.Total_spent ) desc limit 1
select T2.Museum_ID , T2.Name from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID group by T1.Museum_ID order by count ( * ) desc limit 1
select Name from museum where Museum_ID not in ( select Museum_ID from visit )
select Name , Age from visitor group by ID order by count ( * ) desc limit 1
select avg ( Num_of_Ticket ) , max ( Num_of_Ticket ) from visit
select sum ( T2.Total_spent ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T1.Level_of_membership = 1
select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year < 1 intersect select T4.Name from visitor as T4 join visit as T5 on T4.ID = T5.visitor_ID join museum as T6 on T5.Museum_ID = T6.Museum_ID where T6.Open_Year > 1
select count ( * ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year > 1
select count ( * ) from museum where Open_Year > 1 or Open_Year < 1
select count ( * ) from players
select count ( * ) from players
select count ( * ) from matches
select count ( * ) from matches
select first_name , birth_date from players where country_code = 1
select first_name , birth_date from players where country_code = 1
select avg ( loser_age ) , avg ( loser_age ) from matches
select avg ( loser_age ) , avg ( loser_age ) from matches
select avg ( winner_rank ) from matches
select avg ( winner_rank ) from matches
select min ( loser_rank_points ) from matches
select max ( loser_rank_points ) from matches
select count ( country_code ) from players
select count ( country_code ) from players
select count ( loser_name ) from matches
select count ( loser_name ) from matches
select tourney_name from matches group by tourney_id having count ( * ) > 1
select tourney_name from matches group by tourney_name having count ( * ) > 1
select winner_name from matches where year = 1 intersect select winner_name from matches where year = 1
select T2.first_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.year = 1 intersect select T4.first_name from matches as T3 join players as T4 on T3.winner_id = T4.player_id where T3.year = 1
select count ( * ) from matches where year = 1 or year = 1
select count ( * ) from matches where year = 1 or year = 1
select T2.country_code , T2.first_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.tourney_name = 1 intersect select T4.country_code , T4.first_name from matches as T3 join players as T4 on T3.winner_id = T4.player_id where T3.tourney_name = 1
select T2.first_name , T2.country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.winner_name = 1 intersect select T4.first_name , T4.country_code from matches as T3 join players as T4 on T3.winner_id = T4.player_id where T3.winner_name = 1
select T2.first_name , T2.country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T1.loser_age desc limit 1
select T2.first_name , T2.country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T1.winner_age desc limit 1
select first_name , last_name from players order by birth_date
select first_name , last_name from players order by birth_date
select first_name , last_name from players where birth_date != 1 order by last_name
select first_name , last_name from players where birth_date = 1 order by birth_date
select first_name , country_code from players group by country_code order by count ( * ) desc limit 1
select first_name , country_code from players group by country_code order by count ( * ) desc limit 1
select year from matches group by year order by count ( * ) desc limit 1
select year from matches group by year order by count ( * ) desc limit 1
select winner_name , winner_rank from matches group by winner_id order by count ( * ) desc limit 1
select winner_name , winner_rank_points from matches group by winner_name order by count ( * ) desc limit 1
select T1.winner_name , T2.last_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.tourney_name = 1 and T1.winner_rank_points = ( select min ( winner_rank_points ) from matches where tourney_name = 1 )
select winner_name from matches where winner_rank = 1 group by winner_name order by count ( * ) desc limit 1
select loser_name , loser_rank from matches order by minutes desc limit 1
select winner_name , loser_name from matches order by minutes desc limit 1
select avg ( T1.ranking ) , T2.first_name from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.first_name
select T2.first_name , avg ( T1.ranking ) from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T1.player_id
select sum ( T1.ranking_points ) , T2.first_name from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.first_name
select T2.first_name , sum ( T1.ranking_points ) from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.first_name
select count ( * ) , country_code from players group by country_code
select country_code , count ( * ) from players group by country_code
select T2.country_code from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code order by count ( * ) desc limit 1
select T2.country_code from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code order by count ( * ) desc limit 1
select country_code from players group by country_code having count ( * ) > 1
select T2.country_code from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code having count ( * ) > 1
select count ( * ) , T1.ranking_date from rankings as T1 join players as T2 on T1.player_id = T2.player_id join matches as T3 on T2.player_id = T3.winner_id group by T1.ranking_date
select count ( * ) , T1.ranking_date from rankings as T1 join players as T2 on T1.player_id = T2.player_id join matches as T3 on T2.player_id = T3.winner_id group by T1.ranking_date
select count ( * ) , year from matches group by year
select year , count ( * ) from matches group by year
select winner_name , winner_rank from matches order by winner_age limit 1
select winner_name , winner_rank from matches order by winner_age limit 1
select count ( winner_id ) from matches where loser_name = 1 intersect select winner_rank from matches where loser_name = 1
select count ( * ) from players where hand = 1 and hand = 1
select T2.first_name , T2.country_code , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T1.winner_rank_points limit 1
select T2.first_name , T2.country_code , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T1.winner_rank_points desc limit 1
select hand , count ( * ) from players group by hand
select hand , count ( * ) from players group by hand
select count ( * ) from ship where lost_in_battle = 1
select name , tonnage from ship order by name desc
select name , date , result from battle
select max ( injured ) , min ( injured ) , count ( * ) , min ( injured ) from death group by count ( * )
select avg ( injured ) from death
select T2.killed , T2.injured from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.tonnage = 1
select name , result from battle where bulgarian_commander != 1
select T1.id , T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.ship_type = 1
select T1.id , T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id group by T1.id having sum ( T3.killed ) > 1
select T1.id , T1.name from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id group by T1.id order by sum ( T2.injured ) desc limit 1
select name from battle where bulgarian_commander = 1 intersect select name from battle where latin_commander = 1
select count ( result ) from battle
select count ( * ) from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.tonnage = 1
select T1.name , T1.date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.name = 1 and T2.lost_in_battle = 1
select T1.name , T1.result , T1.bulgarian_commander from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.lost_in_battle != 1
select note from death where note like 1
select address_id , line_2 from Addresses where line_1 = 1
select line_1 , line_2 from Addresses
select count ( * ) from Courses
select count ( * ) from Courses
select T2.course_name from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id where T1.section_name = 1
select course_description from Courses where course_name = 1
select zip_postcode from Addresses where city = 1
select zip_postcode from Addresses where city = 1
select T1.department_name , T2.department_id from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by T2.department_id order by count ( * ) desc limit 1
select department_id from Degree_Programs group by department_id order by count ( * ) desc limit 1
select count ( department_id ) from Degree_Programs
select count ( department_id ) from Degree_Programs
select count ( degree_summary_name ) from Degree_Programs
select count ( degree_program_id ) from Degree_Programs
select count ( * ) from Departments where department_name = 1
select count ( * ) from Departments where department_name = 1
select section_name , section_description from Sections
select section_name , section_description from Sections
select T2.course_name , T1.course_id from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id group by T1.course_id having count ( * ) < = 1
select T2.course_name , T1.course_id from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id group by T1.course_id having count ( * ) < 1
select section_name from Sections order by section_name desc
select section_name from Sections order by section_name desc
select T1.semester_name , T2.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id group by T2.semester_id order by count ( * ) desc limit 1
select semester_name , semester_id from Semesters group by semester_id order by count ( * ) desc limit 1
select department_description from Departments where department_name like 1
select department_description from Departments where department_name like 1
select T3.first_name , T3.middle_name , T1.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T1.semester_id having count ( * ) = 1
select T3.first_name , T3.middle_name , T3.last_name , T1.semester_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T1.semester_id having count ( * ) = 1
select T4.first_name , T4.middle_name , T4.last_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where T1.course_name = 1
select T4.first_name , T4.middle_name , T4.last_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where T1.course_name = 1
select course_name from Courses group by course_name order by count ( * ) desc limit 1
select degree_summary_name from Degree_Programs group by degree_summary_name order by count ( * ) desc limit 1
select student_enrolment_Courses.course_id , count ( * ) from Student_Enrolment_Courses group by student_enrolment_Courses.course_id order by count ( * ) desc limit 1
select degree_program_id , degree_summary_name from Degree_Programs group by degree_program_id order by count ( * ) desc limit 1
select student_id , first_name , count ( * ) , last_name from Students group by student_id order by count ( * ) desc limit 1
select first_name , middle_name , last_name , count ( * ) from Students group by student_id order by count ( * ) desc limit 1
select semester_name from Semesters where semester_id not in ( select semester_id from Student_Enrolment )
select semester_name from Semesters where semester_id not in ( select semester_id from Student_Enrolment )
select degree_summary_name from Degree_Programs
select degree_summary_name from Degree_Programs
select course_name from Courses group by course_id order by count ( * ) desc limit 1
select course_name from Courses group by course_name order by count ( * ) desc limit 1
select T2.last_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 1 except select last_name from Students
select T2.last_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 1 except select last_name from Students
select transcript_date , transcript_id from Transcripts group by transcript_id having count ( * ) > = 1
select T1.transcript_date , T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T1.transcript_id having count ( * ) > = 1
select cell_mobile_number from Students where first_name = 1 and last_name = 1
select cell_mobile_number from Students where first_name = 1 and last_name = 1
select first_name , middle_name , last_name from Students order by date_first_registered asc limit 1
select first_name , middle_name , last_name from Students order by date_first_registered asc limit 1
select first_name , middle_name , last_name from Students order by last_name asc limit 1
select first_name , middle_name , last_name from Students order by last_name limit 1
select first_name from Students except select first_name from Students
select first_name from Students where current_address_id = ( select student_id from Student_Enrolment )
select address_id , line_1 from Addresses group by address_id order by count ( * ) desc limit 1
select address_id , line_1 , line_2 from Addresses group by address_id order by count ( * ) desc limit 1
select avg ( transcript_date ) from Transcripts
select avg ( transcript_date ) from Transcripts
select transcript_date , other_details from Transcripts order by transcript_date asc limit 1
select transcript_date , other_details from Transcripts order by transcript_date asc limit 1
select count ( * ) from Transcripts
select count ( * ) from Transcripts
select transcript_date from Transcripts order by transcript_date desc limit 1
select transcript_date from Transcripts order by transcript_date desc limit 1
select count ( * ) , T1.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id
select T4.transcript_id , count ( * ) from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Transcript_Contents as T3 on T2.student_course_id = T3.student_course_id join Transcripts as T4 on T3.transcript_id = T4.transcript_id group by T1.course_name order by count ( * ) desc limit 1
select T2.transcript_id , T1.transcript_date from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id order by count ( * ) asc limit 1
select T1.transcript_date , T2.transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by T2.transcript_id order by count ( * ) asc limit 1
select semester_name from Semesters where semester_name = 1 intersect select semester_name from Semesters where semester_name = 1
select T3.semester_id from Degree_Programs as T1 join Student_Enrolment as T2 on T1.degree_program_id = T2.degree_program_id join Semesters as T3 on T2.semester_id = T3.semester_id where T1.degree_summary_name = 1 intersect select T5.semester_id from Degree_Programs as T4 join Student_Enrolment as T5 on T4.degree_program_id = T5.degree_program_id where T4.degree_summary_name = 1
select count ( * ) from Addresses
select address_id from Addresses
select other_student_details from Students order by other_student_details desc
select other_student_details from Students order by other_student_details desc
select section_name from Sections where section_name = 1
select section_description from Sections where section_name = 1
select T2.first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.country = 1 or T2.cell_mobile_number = 1
select first_name from Students where cell_mobile_number = 1 or cell_mobile_number = 1
select Title from Cartoon order by Title
select Title from Cartoon order by Title
select Directed_by from Cartoon where Directed_by = 1
select Title from Cartoon where Directed_by = 1
select count ( * ) from Cartoon where Written_by = 1
select count ( * ) from Cartoon where Written_by = 1
select Title , Directed_by from Cartoon order by Original_air_date
select Title , Directed_by from Cartoon order by Original_air_date
select Title from Cartoon where Directed_by = 1 or Directed_by = 1
select Title from Cartoon where Directed_by = 1 or Directed_by = 1
select Country , count ( * ) from TV_Channel group by Country order by count ( * ) desc limit 1
select Country , count ( * ) from TV_Channel group by Country order by count ( * ) desc limit 1
select count ( series_name ) , count ( Content ) from TV_Channel
select count ( series_name ) , count ( Content ) from TV_Channel
select Content from TV_Channel where series_name = 1
select Content from TV_Channel where series_name = 1
select Package_Option from TV_Channel where series_name = 1
select Package_Option from TV_Channel where series_name = 1
select count ( * ) from TV_Channel where Language = 1
select count ( * ) from TV_Channel where Language = 1
select Language , count ( * ) from TV_Channel group by Language order by count ( * ) asc limit 1
select Language , count ( * ) from TV_Channel group by Language order by count ( * ) asc limit 1
select Language , count ( * ) from TV_Channel group by Language
select Language , count ( * ) from TV_Channel group by Language
select T1.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1
select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 1
select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 1
select Episode from TV_series order by Rating
select Episode from TV_series order by Rating
select Episode , Episode , Rating from TV_series order by Rating desc limit 1
select Episode , Rating from TV_series order by Rating desc limit 1
select min ( Share ) , max ( Share ) from TV_series
select max ( Share ) , min ( Share ) from TV_series
select Air_Date from TV_series where Episode = 1
select Episode from TV_series where Episode = 1
select Weekly_Rank from TV_series where Episode = 1
select Weekly_Rank from TV_series where Episode = 1
select Channel from TV_series where Episode = 1
select T1.series_name from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T2.Episode = 1
select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
select count ( * ) , Directed_by from Cartoon group by Directed_by
select count ( * ) , Directed_by from Cartoon group by Directed_by
select T3.Production_code , T3.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel order by T1.Air_Date desc limit 1
select T2.Production_code , T2.Channel from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel order by T1.Package_Option desc limit 1
select Package_Option , series_name from TV_Channel where Hight_definition_TV = 1
select Package_Option , series_name from TV_Channel where Hight_definition_TV = 1
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 1
select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 1
select Country from TV_Channel except select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 1
select Country from TV_Channel except select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Written_by = 1
select T1.series_name , T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1 intersect select T3.series_name , T3.Country from TV_Channel as T3 join Cartoon as T4 on T3.id = T4.Channel where T4.Directed_by = 1
select T1.series_name , T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1 intersect select T3.series_name , T3.Country from TV_Channel as T3 join Cartoon as T4 on T3.id = T4.Channel where T4.Directed_by = 1
select Pixel_aspect_ratio_PAR , Country from TV_Channel where Language != 1
select Pixel_aspect_ratio_PAR , Country from TV_Channel where Language != 1
select id from TV_Channel group by id having count ( * ) > 1
select id from TV_Channel group by id having count ( * ) > 1
select id from TV_Channel except select id from Cartoon where Directed_by = 1
select id from TV_Channel except select T1.id from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1
select Package_Option from TV_Channel except select T1.Package_Option from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1
select Package_Option from TV_Channel except select T1.Package_Option from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1
select count ( * ) from poker_player
select count ( * ) from poker_player
select Earnings from poker_player order by Earnings desc
select Earnings from poker_player order by Earnings desc
select Final_Table_Made , Best_Finish from poker_player
select Final_Table_Made , Best_Finish from poker_player
select avg ( Earnings ) from poker_player
select avg ( Earnings ) from poker_player
select Money_Rank from poker_player order by Earnings desc limit 1
select Money_Rank from poker_player order by Earnings desc limit 1
select max ( Final_Table_Made ) from poker_player where Earnings < 1
select max ( Final_Table_Made ) from poker_player where Earnings < 1
select Name from people
select Name from people
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Earnings > 1
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Earnings > 1
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Final_Table_Made asc
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Final_Table_Made asc
select T2.Birth_Date from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc limit 1
select T2.Birth_Date from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings asc limit 1
select T1.Money_Rank from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T2.Height desc limit 1
select T1.Money_Rank from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T2.Height desc limit 1
select avg ( T1.Earnings ) from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T2.Height > 1
select avg ( T1.Earnings ) from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T2.Height > 1
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings desc
select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings desc
select Nationality , count ( * ) from people group by Nationality
select Nationality , count ( * ) from people group by Nationality
select Nationality from people group by Nationality order by count ( * ) desc limit 1
select Nationality from people group by Nationality order by count ( * ) desc limit 1
select Nationality from people group by Nationality having count ( * ) > = 1
select Nationality from people group by Nationality having count ( * ) > = 1
select Name , Birth_Date from people order by Name asc
select Name , Birth_Date from people order by Name asc
select Name from people where Nationality != 1
select Name from people where Nationality != 1
select Name from people where People_ID not in ( select People_ID from poker_player )
select Name from people where People_ID not in ( select People_ID from poker_player )
select count ( Nationality ) from people
select count ( Nationality ) from people
select count ( * ) from AREA_CODE_STATE
select contestant_number , contestant_name from CONTESTANTS order by contestant_name desc
select vote_id , phone_number , state from VOTES
select max ( area_code ) , min ( area_code ) from AREA_CODE_STATE
select max ( created ) from VOTES where state = 1
select contestant_name from CONTESTANTS where contestant_name != 1
select state , created from VOTES
select T1.contestant_number , T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T2.contestant_number having count ( * ) > = 1
select T1.contestant_number , T1.contestant_name , min ( T2.vote_id ) from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T2.contestant_number order by count ( * ) limit 1
select count ( * ) from AREA_CODE_STATE where state = 1 or state = 1
select count ( * ) from CONTESTANTS where contestant_number not in ( select contestant_number from VOTES )
select T2.area_code from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state group by T2.area_code order by count ( * ) desc limit 1
select T2.created , T2.state , T2.phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T1.contestant_name = 1
select T3.area_code from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number join AREA_CODE_STATE as T3 on T2.state = T3.state where T1.contestant_name = 1 intersect select T6.area_code from CONTESTANTS as T4 join VOTES as T5 on T4.contestant_number = T5.contestant_number join AREA_CODE_STATE as T6 on T5.state = T6.state where T4.contestant_name = 1
select contestant_name from CONTESTANTS where contestant_name like 1
select Name from country where IndepYear > 1
select Name from country where IndepYear > 1
select count ( GovernmentForm ) from country where GovernmentForm = 1
select count ( GovernmentForm ) from country where GovernmentForm like 1
select sum ( SurfaceArea ) from country where Region = 1
select T1.SurfaceArea from country as T1 join sqlite_sequence as T2 where T2.seq = 1
select Continent from country where Name = 1
select Continent from country where Name = 1
select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Name = 1
select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Name = 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1 group by T2.Language order by count ( * ) desc limit 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.LocalName = 1
select Population , LifeExpectancy from country where Continent = 1
select Population , LifeExpectancy from country where Continent = 1
select Region , Population from country where Name = 1
select Region , Population from country where Name = 1
select avg ( LifeExpectancy ) from country where Region = 1
select avg ( LifeExpectancy ) from country where Continent = 1
select Name from country where Continent = 1 order by LifeExpectancy limit 1
select Name from country where Continent = 1 order by LifeExpectancy limit 1
select sum ( Population ) , max ( GNP ) from country where Continent = 1
select Population , sum ( GNP ) from country where Continent = 1 group by Continent
select avg ( LifeExpectancy ) from country where Continent = 1
select avg ( LifeExpectancy ) from country where Continent = 1
select sum ( SurfaceArea ) from country where Continent = 1 or Continent = 1
select sum ( SurfaceArea ) from country where Continent = 1 or Continent = 1
select Population from city where District = 1
select sum ( T1.Population ) from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.District = 1
select avg ( GNP ) , avg ( Population ) from country where GovernmentForm = 1
select avg ( GNP ) , avg ( Population ) from country where Region = 1
select count ( Language ) from countrylanguage
select count ( Language ) from countrylanguage
select count ( GovernmentForm ) from country where Continent = 1
select count ( GovernmentForm ) from country where Continent = 1
select count ( T2.Language ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1
select count ( T2.Language ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1
select count ( T2.Language ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1
select count ( GovernmentForm ) from country where Name = 1
select Name from country group by Name order by count ( * ) desc limit 1
select Name from country group by Name order by count ( * ) desc limit 1
select Continent from country group by Continent order by count ( * ) desc limit 1
select Continent from country group by Continent order by count ( * ) desc limit 1
select count ( * ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 intersect select count ( * ) from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.Language = 1
select count ( * ) from countrylanguage where Language = 1
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 intersect select T3.Name from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.Language = 1
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 intersect select T3.Name from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.Language = 1
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 intersect select T3.Name from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.IsOfficial = 1
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.IsOfficial = 1 intersect select T3.Name from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.IsOfficial = 1
select count ( T1.Continent ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1
select count ( * ) from country where Name = 1
select T1.Region from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 or T2.Language = 1
select T1.Region from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 or T2.Language = 1
select CountryCode from countrylanguage where IsOfficial = 1 or Language = 1
select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.IsOfficial = 1 or T2.Language = 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Continent = 1 group by T2.Language order by count ( * ) desc limit 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Continent = 1 group by T2.Language order by count ( * ) desc limit 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.GovernmentForm = 1 group by T2.Language having count ( * ) = 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.GovernmentForm = 1 group by T2.Language having count ( * ) > = 1
select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.Language = 1 order by T1.Population desc limit 1
select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.Language = 1 order by T1.Population desc limit 1
select Name , Population , LifeExpectancy from country where Region = ( select max ( Region ) from country where Name = 1 )
select Name , Population , LifeExpectancy from country where Region = 1 order by LifeExpectancy desc limit 1
select avg ( LifeExpectancy ) from country where GovernmentForm = 1
select avg ( LifeExpectancy ) from country where GovernmentForm = 1
select sum ( T1.Population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 1
select T1.Population from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 1
select T2.IsOfficial from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.HeadOfState = 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.HeadOfState = 1
select count ( T2.Language ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.IndepYear < 1
select count ( GovernmentForm ) from country where IndepYear < 1
select T2.CountryCode from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.SurfaceArea > ( select max ( SurfaceArea ) from country )
select Name from country where Region > ( select max ( Region ) from country where Continent = 1 )
select Continent from country where Continent = 1 and Population < ( select min ( Population ) from country where Continent = 1 )
select Continent from country where Population < ( select max ( Population ) from country where Continent = 1 )
select Name from country where Population > ( select max ( Population ) from country where Continent = 1 )
select Name from country where Population > ( select max ( Population ) from country where Continent = 1 )
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 except select T3.Code from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T4.Language = 1
select Code from country where GovernmentForm = 1 and GovernmentForm != 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 except select Code from country where GovernmentForm = 1
select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T3.IsOfficial = 1 except select T4.Name from city as T4 join country as T5 on T4.CountryCode = T5.Code join countrylanguage as T6 on T5.Code = T6.CountryCode where T6.IsOfficial = 1
select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.GovernmentForm = 1 except select T4.Name from country as T3 join city as T4 on T3.Code = T4.CountryCode where T3.GovernmentForm = 1
select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode join countrylanguage as T3 on T1.Code = T3.CountryCode where T1.GovernmentForm = 1 and T3.IsOfficial = 1
select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode join countrylanguage as T3 on T1.Code = T3.CountryCode where T1.GovernmentForm = 1 and T3.IsOfficial = 1
select Name , IndepYear , SurfaceArea from country order by Population limit 1
select Name , IndepYear , SurfaceArea from country order by Population limit 1
select Population , LocalName , Name from country order by Region desc limit 1
select T2.name , T1.Population , T1.HeadOfState from country as T1 join sqlite_sequence as T2 order by T1.Region desc limit 1
select Name , count ( * ) from country group by Name having count ( * ) > = 1
select Name , count ( * ) from country group by Name having count ( * ) > 1
select count ( * ) , District from city where Population > ( select avg ( Population ) from city ) group by District
select District , count ( * ) from city where Population > ( select avg ( Population ) from city )
select GovernmentForm , sum ( LifeExpectancy ) from country group by GovernmentForm having avg ( LifeExpectancy ) > 1
select sum ( LifeExpectancy ) , GovernmentForm from country group by GovernmentForm having avg ( LifeExpectancy ) < 1
select avg ( LifeExpectancy ) , Continent from country where LifeExpectancy < 1 group by Continent
select Continent , sum ( LifeExpectancy ) from country where LifeExpectancy < 1 group by Continent
select Name , Region from country order by Region desc limit 1
select Name , SurfaceArea from country order by Region desc limit 1
select Name from country order by Population desc limit 1
select Name from country order by Population desc limit 1
select Name from country order by Population limit 1
select Name from country order by Population asc limit 1
select count ( * ) from country where Continent = 1
select count ( * ) from country where Continent = 1
select Name from country where Continent = 1 and Population = 1
select Name from country where Continent = 1 and Population like 1
select sum ( Population ) , avg ( SurfaceArea ) from country where Continent > 1 and SurfaceArea > 1
select sum ( Population ) , avg ( SurfaceArea ) from country where Region > 1
select Name from city where Population between 1 and 1
select Name from city where Population between 1 and 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Language order by count ( * ) desc limit 1
select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Language order by count ( * ) desc limit 1
select T2.Language , sum ( T1.Population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Language
select T1.Code , T2.Language , sum ( T1.Population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T2.Language order by count ( * ) desc limit 1
select count ( * ) from countrylanguage where Language = 1 order by Percentage desc limit 1
select count ( * ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1 order by T2.Percentage desc limit 1
select T1.Code from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1
select count ( * ) from conductor
select count ( * ) from conductor
select Name from conductor order by Age asc
select Name from conductor order by Age asc
select Name from conductor where Nationality != 1
select Name from conductor where Nationality != 1
select Record_Company from orchestra order by Year_of_Founded desc
select Record_Company from orchestra order by Year_of_Founded desc
select avg ( Attendance ) from show
select avg ( Attendance ) from show
select max ( Share ) , min ( Share ) from performance where Type != 1
select max ( Share ) , min ( Share ) from performance where Type != 1
select count ( Nationality ) from conductor
select count ( Nationality ) from conductor
select Name from conductor order by Year_of_Work desc
select Name from conductor order by Year_of_Work desc
select Name from conductor order by Year_of_Work desc limit 1
select Name from conductor order by Year_of_Work desc limit 1
select T1.Name , T2.Orchestra from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID
select T1.Name , T2.Orchestra from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID group by T2.Conductor_ID having count ( * ) > 1
select Name from conductor group by Name having count ( * ) > 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID group by T2.Conductor_ID order by count ( * ) desc limit 1
select Name from conductor group by Name order by count ( * ) desc limit 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Year_of_Founded > 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Year_of_Founded > 1
select Record_Company , count ( * ) from orchestra group by Record_Company
select Record_Company , count ( * ) from orchestra group by Record_Company
select T1.Major_Record_Format from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID join show as T3 on T2.Performance_ID = T3.Performance_ID group by T1.Major_Record_Format order by count ( * ) asc
select Major_Record_Format from orchestra group by Major_Record_Format order by count ( * )
select Record_Company from orchestra group by Record_Company order by count ( * ) desc limit 1
select Record_Company from orchestra group by Record_Company order by count ( * ) desc limit 1
select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Orchestra_ID not in ( select Orchestra_ID from performance )
select Orchestra from orchestra where Orchestra_ID not in ( select Orchestra_ID from performance )
select Record_Company from orchestra where Year_of_Founded < 1 intersect select Record_Company from orchestra where Year_of_Founded > 1
select Record_Company from orchestra where Year_of_Founded < 1 intersect select Record_Company from orchestra where Year_of_Founded > 1
select count ( * ) from orchestra where Major_Record_Format = 1 or Major_Record_Format = 1
select count ( * ) from orchestra where Major_Record_Format = 1 or Major_Record_Format = 1
select T1.Year_of_Founded from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID group by T2.Orchestra_ID having count ( * ) > 1
select T1.Year_of_Founded from orchestra as T1 join performance as T2 on T1.Orchestra_ID = T2.Orchestra_ID group by T2.Orchestra_ID having count ( * ) > 1
select count ( * ) from Highschooler
select count ( * ) from Highschooler
select name , grade from Highschooler
select name , grade from Highschooler
select grade from Highschooler
select grade from Highschooler
select grade from Highschooler where name = 1
select grade from Highschooler where name = 1
select name from Highschooler where grade = 1
select name from Highschooler where grade = 1
select ID from Highschooler where name = 1
select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
select count ( * ) from Highschooler where grade = 1
select count ( * ) from Highschooler where grade = 1
select grade , count ( * ) from Highschooler group by grade
select grade , count ( * ) from Highschooler group by grade
select grade from Highschooler group by grade order by count ( * ) desc limit 1
select grade from Highschooler group by grade order by count ( * ) desc limit 1
select grade from Highschooler group by grade having count ( * ) > = 1
select grade from Highschooler group by grade having count ( * ) > = 1
select student_id , count ( * ) from Friend group by student_id
select count ( * ) , student_id from Friend group by student_id
select T2.name , count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID group by T1.student_id
select name , count ( * ) from Highschooler group by name
select name from Highschooler group by ID order by count ( * ) desc limit 1
select name from Highschooler group by ID order by count ( * ) desc limit 1
select name from Highschooler group by ID having count ( * ) > = 1
select name from Highschooler group by ID having count ( * ) > = 1
select name from Highschooler where name = 1
select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
select count ( * ) from Highschooler where name = 1
select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
select ID from Highschooler except select student_id from Friend
select ID from Highschooler except select student_id from Friend
select name from Highschooler where ID not in ( select student_id from Friend )
select name from Highschooler where ID not in ( select student_id from Friend )
select ID from Highschooler intersect select ID from Highschooler
select student_id from Friend intersect select student_id from Likes
select name from Highschooler intersect select name from Highschooler
select name from Highschooler intersect select name from Highschooler
select count ( * ) , student_id from Likes group by student_id
select student_id , count ( * ) from Likes group by student_id
select name , count ( * ) from Highschooler group by ID
select count ( * ) , name from Highschooler group by name
select name from Highschooler group by ID order by count ( * ) desc limit 1
select T1.name from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T2.student_id order by count ( * ) desc limit 1
select T1.name from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T2.student_id having count ( * ) > = 1
select T1.name from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T2.student_id having count ( * ) > = 1
select T2.name from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.grade > 1 group by T1.student_id order by count ( * ) > = 1
select name from Highschooler where grade > 1 group by name having count ( * ) > = 1
select count ( * ) from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T1.name = 1
select count ( * ) from Highschooler where name = 1
select avg ( grade ) from Highschooler where ID in ( select student_id from Friend )
select avg ( grade ) from Highschooler where ID in ( select student_id from Friend )
select min ( grade ) from Highschooler where ID not in ( select student_id from Friend )
select min ( grade ) from Highschooler where ID not in ( select student_id from Friend )
select state from Owners intersect select state from Professionals
select state from Owners intersect select state from Professionals
select avg ( age ) from Dogs
select avg ( age ) from Dogs
select professional_id , last_name , home_phone from Professionals where state = 1 union select professional_id , last_name , home_phone from Professionals group by professional_id having count ( * ) > 1
select professional_id , last_name , cell_number from Professionals where state = 1 union select professional_id , last_name , cell_number from Professionals group by professional_id having count ( * ) > 1
select name from Dogs except select T2.name from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id where T1.cost_of_treatment > 1
select T2.name from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id group by T1.dog_id having sum ( T1.cost_of_treatment ) > 1
select first_name from Professionals except select first_name from Owners
select T1.first_name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T4.first_name = 1 except select first_name from Professionals
select professional_id , role_code , email_address from Professionals except select professional_id , role_code , email_address from Professionals
select professional_id , role_code , email_address from Professionals except select professional_id , role_code , email_address from Professionals
select owner_id , first_name , last_name from Owners group by owner_id order by count ( * ) desc limit 1
select owner_id , first_name , last_name from Owners group by owner_id order by count ( * ) desc limit 1
select professional_id , role_code , first_name from Professionals group by professional_id having count ( * ) > = 1
select professional_id , role_code , first_name from Professionals group by professional_id having count ( * ) > = 1
select T2.breed_name from Dogs as T1 join Breeds as T2 on T1.breed_code = T2.breed_code group by T1.breed_code order by count ( * ) desc limit 1
select T2.breed_name from Dogs as T1 join Breeds as T2 on T1.breed_code = T2.breed_code group by T1.breed_code order by count ( * ) desc limit 1
select owner_id , last_name from Owners group by owner_id order by count ( * ) desc limit 1
select T1.owner_id , T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id group by T1.owner_id order by count ( * ) desc limit 1
select T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code group by T2.treatment_type_code order by sum ( T2.cost_of_treatment ) limit 1
select T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code group by T2.treatment_type_code order by sum ( T2.cost_of_treatment ) limit 1
select T2.owner_id , T3.zip_code from Charges as T1 join Dogs as T2 join Owners as T3 group by T2.owner_id order by sum ( T1.charge_amount ) desc limit 1
select T2.owner_id , T3.zip_code from Charges as T1 join Dogs as T2 join Owners as T3 group by T2.owner_id order by sum ( T1.charge_amount ) desc limit 1
select T1.professional_id , T2.cell_number from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id group by T2.professional_id having count ( * ) > = 1
select professional_id , home_phone from Professionals group by professional_id having count ( * ) > = 1
select T2.first_name , T2.last_name from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id where T1.cost_of_treatment < ( select avg ( cost_of_treatment ) from Treatments )
select T2.first_name , T2.last_name from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id where T1.cost_of_treatment < ( select avg ( cost_of_treatment ) from Treatments )
select T1.date_of_treatment , T2.first_name from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id
select T1.date_of_treatment , T2.first_name from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id
select T1.treatment_type_code , T2.treatment_type_description , T2.treatment_type_description from Treatments as T1 join Treatment_Types as T2 on T1.treatment_type_code = T2.treatment_type_code
select T1.cost_of_treatment , T2.treatment_type_description from Treatments as T1 join Treatment_Types as T2 on T1.treatment_type_code = T2.treatment_type_code
select T3.first_name , T3.last_name , T1.size_code from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code join Owners as T3 on T2.owner_id = T3.owner_id
select T3.first_name , T3.last_name , T1.size_code from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code join Owners as T3 on T2.owner_id = T3.owner_id
select T2.first_name , T1.name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id
select first_name , last_name from Owners
select T2.name , T1.date_of_treatment from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Breeds as T3 on T2.breed_code = T3.breed_code order by T3.breed_name limit 1
select T2.name , T1.date_of_treatment from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Breeds as T3 on T2.breed_code = T3.breed_code order by T3.breed_name limit 1
select T2.first_name , T1.name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T2.state = 1
select first_name , last_name from Owners where state = 1
select date_arrived , date_departed from Dogs
select date_arrived , date_departed from Dogs
select T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age limit 1
select T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age limit 1
select email_address from Professionals where state = 1 or state = 1
select email_address from Professionals where state = 1 or state = 1
select date_arrived , date_departed from Dogs
select date_arrived , date_departed from Dogs
select count ( * ) from Dogs
select count ( dog_id ) from Treatments
select count ( professional_id ) from Treatments
select count ( professional_id ) from Treatments
select first_name , street , state from Professionals where city like 1
select role_code , street , state from Professionals where city like 1
select first_name , last_name , email_address from Owners where state like 1
select first_name , last_name , email_address from Owners where state like 1
select count ( * ) from Dogs where age < ( select avg ( age ) from Dogs )
select count ( * ) from Dogs where age < ( select avg ( age ) from Dogs )
select cost_of_treatment from Treatments order by cost_of_treatment desc limit 1
select cost_of_treatment from Treatments order by date_of_treatment desc limit 1
select count ( * ) from Dogs where dog_id not in ( select dog_id from Treatments )
select count ( * ) from Dogs
select count ( * ) from Owners where owner_id not in ( select owner_id from Dogs )
select count ( * ) from Owners where owner_id not in ( select owner_id from Dogs )
select count ( * ) from Professionals where professional_id not in ( select professional_id from Treatments )
select count ( * ) from Professionals where professional_id not in ( select professional_id from Treatments )
select name , age , weight from Dogs where abandoned_yn = 1 and abandoned_yn = 1
select name , age , weight from Dogs where abandoned_yn like 1 and weight != 1
select avg ( age ) from Dogs
select avg ( age ) from Dogs
select age from Dogs order by age desc limit 1
select age from Dogs order by age desc limit 1
select charge_type , sum ( charge_amount ) from Charges group by charge_type
select charge_type , charge_amount from Charges
select charge_type from Charges order by charge_amount desc limit 1
select charge_amount from Charges order by charge_amount desc limit 1
select email_address , home_phone , cell_number from Professionals
select email_address , home_phone , cell_number from Professionals
select T3.breed_name , T1.size_description from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code join Breeds as T3 on T2.breed_code = T3.breed_code
select T2.breed_code , T1.size_code from Sizes as T1 join Dogs as T2 on T1.size_code = T2.size_code
select T3.first_name , T3.last_name , T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Professionals as T3 on T2.professional_id = T3.professional_id
select T3.first_name , T3.last_name , T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Professionals as T3 on T2.professional_id = T3.professional_id
select count ( * ) from singer
select count ( * ) from singer
select Name from singer order by Net_Worth_Millions asc
select Name from singer order by Net_Worth_Millions asc
select Birth_Year , Citizenship from singer
select Birth_Year , Citizenship from singer
select Name from singer where Citizenship != 1
select Name from singer where Citizenship != 1
select Name from singer where Birth_Year = 1 or Birth_Year = 1
select Name from singer where Birth_Year = 1 or Birth_Year = 1
select Name from singer order by Net_Worth_Millions desc limit 1
select Name from singer order by Net_Worth_Millions desc limit 1
select Citizenship , count ( * ) from singer group by Citizenship
select Citizenship , count ( * ) from singer group by Citizenship
select Citizenship from singer group by Citizenship order by count ( * ) desc limit 1
select Citizenship from singer where Citizenship = 1
select Citizenship , max ( Net_Worth_Millions ) from singer group by Citizenship
select max ( Net_Worth_Millions ) , Citizenship from singer group by Citizenship
select T1.Title , T2.Name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID
select T1.Title , T2.Name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID
select T2.Name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where T1.Sales > 1
select T2.Name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where T1.Sales > 1
select T2.Name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Singer_ID having count ( * ) > 1
select Name from singer group by Name having count ( * ) > 1
select T2.Name , sum ( T1.Sales ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Name
select T2.Name , sum ( T1.Sales ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Name
select Name from singer where Singer_ID not in ( select Singer_ID from song )
select Name from singer where Singer_ID not in ( select Singer_ID from song )
select Citizenship from singer where Birth_Year < 1 intersect select Citizenship from singer where Birth_Year > 1
select Citizenship from singer where Birth_Year < 1 intersect select Citizenship from singer where Birth_Year > 1
select count ( * ) from Other_Available_Features
select feature_type_name from Ref_Feature_Types where feature_type_code = 1
select property_type_description from Ref_Property_Types
select property_name from Properties where room_count > 1 or room_count > 1
