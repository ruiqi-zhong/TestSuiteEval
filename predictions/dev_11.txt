select count(*) from singer
select count(*) from singer
select singer.name , singer.country , singer.age from singer   order by singer.age asc
select singer.name , singer.country , singer.age from singer   order by singer.age desc
select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.country = "value"
select avg(singer.age) , min(singer.age) , max(singer.age) from singer
select singer.song_name , singer.song_release_year from singer   order by singer.age asc limit 1
select singer.song_name , singer.song_release_year from singer   order by singer.age asc limit 1
select distinct singer.country from singer where  singer.age > "value"
select distinct singer.country from singer where  singer.age > "value"
select singer.country , count(*) from singer  group by singer.country
select singer.country , count(*) from singer  group by singer.country
select singer.song_name from singer where  singer.age > (select avg(singer.age) from singer  )
select singer.song_name from singer_in_concert join concert on singer_in_concert.concert_ID = concert.concert_ID join stadium on concert.Stadium_ID = stadium.Stadium_ID join singer on singer_in_concert.Singer_ID = singer.Singer_ID where  stadium.average > (select avg(stadium.Average) from stadium  )
select stadium.location , stadium.name from stadium where  stadium.capacity between "value" and "value"
select stadium.location , stadium.name from stadium where  stadium.capacity between "value" and "value"
select avg(stadium.capacity) , max(stadium.capacity) from stadium
select avg(stadium.average) , max(stadium.capacity) from stadium
select stadium.name , stadium.capacity from stadium  group by stadium.Stadium_ID  order by avg(stadium.average) desc limit 1
select stadium.name , stadium.capacity from stadium  group by stadium.Stadium_ID  order by avg(stadium.average) desc limit 1
select count(*) from concert where  concert.year = "value" or concert.year = "value"
select count(*) from concert where  concert.year = "value" or concert.year = "value"
select stadium.name , count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID  group by stadium.name
select stadium.name , count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID  group by stadium.name
select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value" or concert.year = "value"  group by stadium.Stadium_ID  order by count(*) desc limit 1
select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year > "value"  group by stadium.Stadium_ID  order by count(*) desc limit 1
select concert.year from concert  group by concert.year  order by count(*) desc limit 1
select concert.year from concert  group by concert.year  order by count(*) desc limit 1
select stadium.name from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )
select stadium.name from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )
select singer.country from singer where  singer.age > "value" and singer.age < "value"
select stadium.name from stadium where  stadium.name not in (select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"  )
select stadium.name from stadium where  stadium.name not in (select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"  )
select concert.concert_name , concert.theme , count(*) from singer_in_concert join concert on singer_in_concert.concert_ID = concert.concert_ID  group by concert.concert_ID
select concert.concert_name , concert.theme , count(*) from singer_in_concert join concert on singer_in_concert.concert_ID = concert.concert_ID  group by concert.concert_ID
select singer.name , count(*) from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID  group by singer.name
select singer.name , count(*) from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID  group by singer.name
select singer.name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = "value"
select singer.name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = "value"
select singer.name , singer.age from singer where  singer.song_name = "value"
select singer.name , singer.country from singer where  singer.song_name like "value"
select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"   intersect select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"
select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"   intersect select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = "value"
select count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID   order by stadium.capacity desc limit 1
select count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID   order by stadium.capacity desc limit 1
select count(*) from Pets where  pets.weight > "value"
select count(*) from Has_Pet join Pets on Has_Pet.PetID = Pets.PetID where  pets.weight > "value"
select pets.weight from Pets where  pets.pettype = "value"   order by pets.pet_age asc limit 1
select sum(student.age) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"
select max(pets.weight) , pets.pettype from Pets  group by pets.pettype
select max(pets.weight) , pets.pettype from Pets  group by pets.pettype
select count(*) from Pets where  pets.pet_age > "value"
select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.age > "value"
select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.sex = "value"   intersect select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.sex = "value"
select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.sex = "value"
select count( distinct pets.pettype) from Pets
select count( distinct pets.pettype) from Pets
select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value" or pets.pettype = "value"
select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value" or pets.pettype = "value"
select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"   intersect select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"
select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.fname = "value" and pets.pet_age = "value"
select student.major , student.age from Student where  student.major not in (select student.major from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"  )
select student.stuid , student.major from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype != "value"
select student.stuid from Student where  student.stuid not in (select Has_Pet.StuID from Has_Pet join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"  )
select student.stuid from Student where  student.stuid not in (select Has_Pet.StuID from Has_Pet join Pets on Has_Pet.PetID = Pets.PetID where  pets.pet_age != "value"  )
select student.fname , student.age from Student where  student.fname not in (select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"  )
select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"   except select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "value"
select pets.pettype , pets.weight from Pets   order by pets.pet_age asc limit 1
select pets.pettype , pets.pet_age , min(pets.pet_age) from Pets  group by Pets.PetID
select pets.petid , pets.weight from Pets where  pets.pet_age > "value"
select pets.petid , pets.weight from Pets where  pets.pet_age > "value"
select pets.pettype , max(student.age) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID  group by pets.pettype
select pets.pettype , max(student.age) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID  group by pets.pettype
select pets.pettype , avg(pets.weight) from Pets  group by pets.pettype
select pets.pettype , avg(pets.weight) from Pets  group by pets.pettype
select student.fname , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID
select distinct student.fname , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID
select pets.petid from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.lname = "value"
select pets.petid from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.lname = "value"
select count(*) , has_pet.stuid from Has_Pet join Pets on Has_Pet.PetID = Pets.PetID  group by has_pet.stuid
select count(*) , has_pet.stuid from Has_Pet  group by has_pet.stuid
select student.fname , student.sex from Has_Pet join Student on Has_Pet.StuID = Student.StuID  group by Student.StuID having  count(*) > "value"
select student.fname , student.sex from Has_Pet join Student on Has_Pet.StuID = Student.StuID  group by Student.StuID having  count(*) > "value"
select student.lname from Student where  student.age = "value"
select student.lname from Student where  student.age = "value"
select avg(student.age) from Student where  student.stuid not in (select Has_Pet.StuID from Has_Pet  )
select avg(student.age) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.stuid not in (select Has_Pet.StuID from Has_Pet  ) and pets.petid not in (select Pets.PetID from Pets  )
select count(*) from continents
select count(*) from continents
select continents.contid , continents.continent , count(*) from countries join continents on countries.Continent = continents.ContId  group by continents.ContId
select countries.countryid , continents.continent , count(*) from countries join continents on countries.Continent = continents.ContId  group by countries.countryid,continents.continent
select count(*) from countries
select count(*) from countries
select car_makers.maker , car_names.makeid , count(*) from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id  group by car_makers.maker,car_names.makeid
select car_makers.fullname , car_makers.id , count(*) from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.Id
select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.horsepower asc limit 1
select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.horsepower asc limit 1
select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )
select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )
select car_makers.maker from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = "value"
select distinct car_makers.id from car_makers where  car_makers.maker = "value"
select car_names.make , cars_data.year from cars_data join car_names on cars_data.Id = car_names.MakeId   order by cars_data.year asc limit 1
select car_makers.maker from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id   order by cars_data.year desc limit 1
select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > "value"
select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > "value"
select continents.continent , count(*) from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId  group by continents.continent
select continents.continent , count(*) from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId  group by continents.continent
select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname  order by count(*) desc limit 1
select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname  order by count(*) desc limit 1
select count(*) , car_makers.fullname from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.fullname
select car_makers.id , car_makers.fullname , count(*) from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.Id
select cars_data.accelerate from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = "value"
select sum(cars_data.accelerate) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = "value"
select count(*) from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = "value"
select count(*) from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = "value"
select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = "value"
select count(*) from model_list where  model_list.maker = "value"
select avg(car_names.make) , avg(cars_data.cylinders) from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = "value"
select avg(car_names.make) from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = "value"
select cars_data.weight from cars_data where  cars_data.cylinders = "value"
select cars_data.weight from cars_data where  cars_data.cylinders = "value"
select car_makers.maker , model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id
select car_makers.maker , model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id
select countries.countryname , car_makers.id from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname,car_makers.id having  count(*) >= "value"
select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.CountryId having  count(*) >= "value"
select count(*) from cars_data where  cars_data.horsepower > "value"
select count(*) from cars_data where  cars_data.horsepower > "value"
select avg(cars_data.weight) , cars_data.year from cars_data  group by cars_data.year
select avg(cars_data.weight) , cars_data.year from cars_data  group by cars_data.year
select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId where  continents.continent = "value"  group by countries.countryname having  count(*) >= "value"
select countries.countryname from countries  group by countries.countryname having  count(*) >= "value"
select max(cars_data.horsepower) , car_names.make from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = "value"  group by car_names.make
select cars_data.horsepower from cars_data where  cars_data.cylinders = "value"
select model_list.model from car_names join model_list on car_names.Model = model_list.Model  group by model_list.model  order by count(*) desc limit 1
select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId   order by cars_data.mpg desc limit 1
select avg(cars_data.horsepower) from cars_data where  cars_data.year < "value"
select avg(cars_data.horsepower) from cars_data where  cars_data.year < "value"
select avg(cars_data.edispl) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  model_list.model = "value"
select avg(cars_data.edispl) from cars_data
select max(cars_data.accelerate) , cars_data.cylinders from cars_data  group by cars_data.cylinders
select cars_data.cylinders , max(cars_data.accelerate) from cars_data  group by cars_data.cylinders
select model_list.model from car_names join model_list on car_names.Model = model_list.Model  group by model_list.model  order by count(*) desc limit 1
select model_list.model from car_names join model_list on car_names.Model = model_list.Model  group by model_list.model  order by count(*) desc limit 1
select count(*) from cars_data where  cars_data.cylinders > "value"
select count(*) from cars_data where  cars_data.cylinders > "value"
select count(*) from cars_data where  cars_data.year = "value"
select count(*) , car_names.make from car_names  group by car_names.make
select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "value"
select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "value"
select car_makers.fullname , car_names.makeid from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id  group by car_makers.fullname,car_names.makeid having  count(*) > "value"
select car_makers.maker , car_makers.id from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.Id having  count(*) > "value"
select model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "value" or model_list.maker > "value"
select distinct model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "value" or car_makers.fullname > "value"
select cars_data.year from cars_data where  cars_data.year < "value" and cars_data.year > "value"
select cars_data.year from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make < "value" and cars_data.weight > "value"
select cars_data.horsepower from cars_data   order by cars_data.accelerate desc limit 1
select cars_data.horsepower from cars_data   order by cars_data.accelerate desc limit 1
select cars_data.cylinders from cars_data   order by cars_data.accelerate asc limit 1
select cars_data.cylinders from cars_data   order by cars_data.accelerate asc limit 1
select count(*) from cars_data where  cars_data.accelerate > "value"   order by cars_data.horsepower desc limit 1
select count(*) from cars_data where  cars_data.accelerate > "value"   order by count(*) desc limit 1
select count(*) from car_makers where  car_makers.id > "value"
select count(*) from car_makers where  car_makers.id > "value"
select count(*) from cars_data where  cars_data.cylinders > "value"
select count(*) from cars_data where  cars_data.cylinders > "value"
select cars_data.horsepower from cars_data where  cars_data.cylinders = "value"   order by cars_data.horsepower desc limit 1
select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.cylinders > "value"  group by model_list.model  order by count(*) desc limit 1
select car_names.model , car_names.make from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders > (select avg(cars_data.Cylinders) from cars_data  group by avg(cars_data.Cylinders) having  count(*) > "value" )
select car_names.makeid , car_names.model from car_names where  car_names.makeid not in (select cars_data.Id from cars_data where  cars_data.cylinders < "value"  )
select max(car_names.make) from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = "value" or cars_data.year < "value"
select max(cars_data.mpg) from cars_data where  cars_data.cylinders > "value" or cars_data.year < "value"
select model_list.model from car_names join model_list on car_names.Model = model_list.Model where  car_names.make > "value"   except select model_list.model from model_list where  model_list.model = "value"
select distinct model_list.model from car_names join model_list on car_names.Model = model_list.Model where  car_names.make > "value"   except select distinct model_list.model from model_list where  model_list.model = "value"
select countries.countryname from countries where  countries.countryid not in (select car_makers.Country from car_makers  )
select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId where  car_makers.id not in (select car_makers.Id from car_makers  )
select car_makers.id , car_makers.maker from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id  group by car_makers.Id having  count(*) >= "value" and count(*) > "value"
select car_makers.id , car_makers.maker from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  model_list.maker = "value"  group by car_makers.Id having  count(*) > "value"
select countries.countryid , countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.CountryId having  count(*) > "value"  union select countries.countryid , countries.countryname from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  model_list.model = "value"  group by countries.CountryId
select countries.countryid , countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.CountryId having  count(*) > "value"  union select countries.countryid , countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.CountryId having  count(*) > "value"
select airlines.country from airlines where  airlines.airline = "value"
select airlines.country from airlines where  airlines.airline = "value"
select airlines.abbreviation from airlines where  airlines.airline = "value"
select airlines.abbreviation from airlines where  airlines.airline = "value"
select airlines.airline , airlines.abbreviation from airlines where  airlines.country = "value"
select airlines.airline , airlines.abbreviation from airlines where  airlines.country = "value"
select airports.airportcode , airports.city from airports where  airports.city = "value"
select airports.airportcode , airports.airportname from airports where  airports.city = "value"
select count(*) from airports
select count(*) from airports
select count(*) from airports
select count(*) from airports
select count(*) from flights
select count(*) from flights
select airlines.airline from airlines where  airlines.abbreviation = "value"
select airlines.airline from airlines where  airlines.abbreviation = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airlines.country = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airlines.country = "value"
select airports.city , airports.country from airports where  airports.airportname = "value"
select airports.city , airports.country from airports where  airports.airportname = "value"
select airports.airportname from airports where  airports.airportname = "value"
select airports.airportname from airports where  airports.airportcode = "value"
select airports.airportname from airports where  airports.city = "value"
select airports.airportname from airports where  airports.city = "value"
select count(*) from flights where  flights.flightno = "value"
select count(*) from flights where  flights.flightno = "value"
select count(*) from flights
select count(*) from flights
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"   intersect select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "value"
select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airlines.airline = "value" and airports.airportname = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.airportname = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airlines.airline = "value" and airports.airportname = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.airportname = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airports.city = "value"
select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airlines.airline = "value" and airports.city = "value"
select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1
select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1
select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1
select airports.city from airports  group by airports.city  order by count(*) desc limit 1
select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) desc limit 1
select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) desc limit 1
select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) desc limit 1
select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) asc limit 1
select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline  order by count(*) desc limit 1
select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline  order by count(*) desc limit 1
select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.uid  order by count(*) asc limit 1
select airlines.abbreviation , count(*) from airlines join flights on airlines.uid = flights.Airline  group by airlines.abbreviation  order by count(*) asc limit 1
select airlines.country from airlines join airports on airlines.uid = airports.AirportCode where  airports.airportname = "value"
select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "value"
select airlines.country from airlines join airports on airlines.uid = airports.AirportCode where  airports.airportname = "value"
select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = "value"
select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.flightno = "value"   intersect select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.flightno = "value"
select airlines.country from flights join airports on flights.DestAirport = airports.AirportCode join airlines on flights.Airline = airlines.uid where  flights.flightno = "value" and airports.country = "value"
select airlines.country from airlines join airports on airlines.uid = airports.AirportCode where  airports.airportname = "value"   except select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.flightno = "value"
select distinct airlines.country from airlines   except select distinct airlines.country from airlines join flights on airlines.uid = flights.Airline
select airlines.country from airlines  group by airlines.country having  count(*) >= "value"
select airlines.country from airlines  group by airlines.country having  count(*) >= "value"
select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.flightno < "value"
select airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.flightno < "value"
select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "value"
select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.airportname = "value"
select flights.flightno from flights where  flights.flightno = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.airportname = "value"
select flights.flightno from flights where  flights.flightno = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value" or airports.city = "value"
select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "value" or airports.city = "value"
select airports.airportname from airports where  airports.airportname not in (select airports.airportname from flights join airports on flights.DestAirport = airports.AirportCode  )
select airports.airportname from airports where  airports.country not in (select airports.country from flights join airports on flights.DestAirport = airports.AirportCode where  flights.flightno = "value"  )
select count(*) from employee
select count(*) from employee
select employee.name from employee   order by employee.age asc
select employee.name from employee   order by employee.age asc
select count(*) , employee.city from hiring join employee on hiring.Employee_ID = employee.Employee_ID  group by employee.city
select count(*) , employee.city from employee  group by employee.city
select employee.city from employee where  employee.age > "value"
select employee.city from employee where  employee.age > "value"
select count(*) , shop.location from shop  group by shop.location
select count(*) , shop.location from shop  group by shop.location
select shop.manager_name , shop.district from shop   order by shop.number_products desc limit 1
select shop.manager_name , shop.district from shop  group by shop.Shop_ID  order by count(*) desc limit 1
select min(shop.number_products) , max(shop.number_products) from shop
select min(shop.number_products) , max(shop.number_products) from shop
select shop.name , shop.location , shop.district from shop   order by shop.number_products desc
select shop.name , shop.location , shop.district from shop   order by shop.number_products asc
select shop.name from shop where  shop.number_products > (select avg(shop.number_products) from shop  )
select shop.name from shop where  shop.number_products > (select avg(shop.number_products) from shop  )
select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID  group by employee.name  order by count(*) desc limit 1
select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID  group by employee.name  order by count(*) desc limit 1
select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID   order by evaluation.bonus desc limit 1
select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID   order by evaluation.bonus desc limit 1
select employee.name from employee where  employee.name not in (select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID where  evaluation.year_awarded = "value"  )
select employee.name from employee where  employee.name not in (select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID  )
select shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by shop.name  order by count(*) desc limit 1
select shop.name from shop  group by shop.name  order by count(*) desc limit 1
select shop.name from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  )
select shop.name from shop where  shop.name not in (select shop.name from shop  )
select count(*) , shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by shop.name
select count(*) , shop.name from shop  group by shop.name
select sum(evaluation.bonus) from evaluation
select sum(evaluation.bonus) from evaluation
select * from hiring
select * from hiring
select shop.district from shop where  shop.number_products < "value" and shop.number_products > "value"
select shop.district from shop where  shop.number_products < "value" and shop.number_products > "value"
select count( distinct shop.location) from shop
select count( distinct shop.location) from shop
select count(*) from Documents
select count(*) from Documents
select documents.document_id , documents.document_name , documents.document_description from Documents
select documents.document_id , documents.document_name , documents.document_description from Documents
select documents.document_name , documents.template_id from Documents where  documents.document_description like "value"
select documents.document_name , documents.template_id from Documents where  documents.document_description like "value"
select documents.document_id , documents.template_id , documents.document_description from Documents where  documents.document_name = "value"
select documents.document_id , documents.template_id , documents.document_description from Documents where  documents.document_name = "value"
select count( distinct documents.template_id) from Documents
select count( distinct documents.template_id) from Documents
select count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "value"
select count(*) from Documents
select templates.template_id , count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_id
select documents.template_id , count(*) from Documents  group by documents.template_id
select templates.template_id , templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by Templates.Template_ID  order by count(*) desc limit 1
select templates.template_id , templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by Templates.Template_ID  order by count(*) desc limit 1
select templates.template_id from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_id having  count(*) > "value"
select templates.template_id from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_id having  count(*) > "value"
select templates.template_id from Templates where  templates.template_id not in (select Documents.Template_ID from Documents  )
select templates.template_id from Templates where  templates.template_id not in (select Documents.Template_ID from Documents  )
select count(*) from Templates
select count(*) from Templates
select templates.template_id , templates.version_number , templates.template_type_code from Templates
select templates.template_id , templates.version_number , templates.template_type_code from Templates
select distinct templates.template_type_code from Templates
select distinct templates.template_type_code from Templates
select templates.template_id from Templates where  templates.template_type_code = "value" or templates.template_type_code = "value"
select templates.template_id from Templates where  templates.template_type_code = "value" or templates.template_type_code = "value"
select count(*) from Templates where  templates.template_type_code = "value"
select count(*) from Templates
select templates.version_number , templates.template_type_code from Templates where  templates.version_number > "value"
select templates.version_number , templates.template_type_code from Templates where  templates.version_number > "value"
select templates.template_type_code , count(*) from Templates  group by templates.template_type_code
select templates.template_type_code , count(*) from Templates  group by templates.template_type_code
select templates.template_type_code from Templates  group by templates.template_type_code  order by count(*) desc limit 1
select templates.template_type_code from Templates  group by templates.template_type_code  order by count(*) desc limit 1
select templates.template_type_code from Templates  group by templates.template_type_code having  count(*) < "value"
select templates.template_type_code from Templates  group by templates.template_type_code having  count(*) < "value"
select templates.version_number , templates.template_type_code from Templates   order by templates.version_number asc limit 1
select templates.version_number , count(*) , templates.template_type_code from Templates  group by Templates.Template_ID  order by templates.version_number asc limit 1
select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = "value"
select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = "value"
select documents.document_name from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "value"   intersect select documents.document_name from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "value"
select documents.document_name from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "value"
select templates.template_type_code , count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code
select templates.template_type_code , count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code
select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code  order by count(*) desc limit 1
select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code  order by count(*) desc limit 1
select templates.template_type_code from Templates where  templates.template_id not in (select Documents.Template_ID from Documents  )
select ref_template_types.template_type_code from Ref_Template_Types where  ref_template_types.template_type_code not in (select Templates.Template_Type_Code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  )
select templates.template_type_code , ref_template_types.template_type_description from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
select ref_template_types.template_type_code , ref_template_types.template_type_description from Ref_Template_Types
select ref_template_types.template_type_description from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  templates.template_type_code = "value"
select ref_template_types.template_type_description from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  templates.template_type_code = "value"
select templates.template_type_code from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "value"
select templates.template_type_code from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "value"
select distinct ref_template_types.template_type_description from Documents join Templates on Documents.Template_ID = Templates.Template_ID join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
select distinct ref_template_types.template_type_description from Documents join Templates on Documents.Template_ID = Templates.Template_ID join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
select templates.template_id from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "value"
select templates.template_id from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "value"
select count(*) from Paragraphs
select count(*) from Paragraphs
select count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select paragraphs.other_details from Paragraphs where  paragraphs.paragraph_text = "value"
select paragraphs.other_details from Paragraphs where  paragraphs.paragraph_text = "value"
select paragraphs.paragraph_id , paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select paragraphs.paragraph_id , paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "value"
select paragraphs.document_id , count(*) from Paragraphs  group by paragraphs.document_id  order by count(*) asc
select paragraphs.document_id , count(*) from Paragraphs  group by paragraphs.document_id  order by count(*) asc
select documents.document_id , documents.document_name , count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by Documents.Document_ID
select documents.document_id , documents.document_name , count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by Documents.Document_ID
select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) >= "value"
select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) >= "value"
select paragraphs.document_id , documents.document_name from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by paragraphs.document_id,documents.document_name  order by count(*) desc limit 1
select documents.document_id , documents.document_name from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by Documents.Document_ID  order by count(*) desc limit 1
select paragraphs.document_id from Paragraphs  group by paragraphs.document_id  order by count(*) asc limit 1
select paragraphs.document_id from Paragraphs  group by paragraphs.document_id  order by count(*) asc limit 1
select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) = "value"
select documents.document_id from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by documents.document_id having  count(*) >= "value" and count(*) >= "value"
select documents.document_id from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  paragraphs.paragraph_text = "value"   intersect select documents.document_id from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  paragraphs.paragraph_text = "value"
select documents.document_id from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  paragraphs.paragraph_text = "value"   intersect select documents.document_id from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  paragraphs.paragraph_text = "value"
select count(*) from teacher
select count(*) from teacher
select teacher.name from teacher   order by teacher.age asc
select teacher.name from teacher   order by teacher.age asc
select teacher.age , teacher.hometown from teacher
select teacher.age , teacher.hometown from teacher
select teacher.name from teacher where  teacher.hometown != "value"
select teacher.name from teacher where  teacher.hometown != "value"
select teacher.name from teacher where  teacher.age = "value" or teacher.age = "value"
select teacher.name from teacher where  teacher.age = "value" or teacher.age = "value"
select teacher.hometown from teacher   order by teacher.age asc limit 1
select teacher.age from teacher   order by teacher.age asc limit 1
select teacher.hometown , count(*) from teacher  group by teacher.hometown
select teacher.hometown , count(*) from teacher  group by teacher.hometown
select teacher.hometown from teacher  group by teacher.hometown  order by count(*) desc limit 1
select teacher.hometown from teacher  group by teacher.hometown  order by count(*) desc limit 1
select teacher.hometown from teacher  group by teacher.hometown having  count(*) >= "value"
select teacher.name from teacher  group by teacher.name having  count(*) >= "value"
select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID
select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID
select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID   order by teacher.name asc
select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID   order by teacher.name asc
select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID where  course.course = "value"
select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID where  course.course = "value"
select teacher.name , count(*) from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name
select teacher.name , count(*) from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name
select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= "value"
select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= "value"
select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )
select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )
select count(*) from visitor where  visitor.age < "value"
select visitor.name from visitor where  visitor.level_of_membership > "value"   order by visitor.level_of_membership asc
select avg(visitor.age) from visitor where  visitor.level_of_membership < "value"
select visitor.name , visitor.level_of_membership from visitor where  visitor.level_of_membership > "value"   order by visitor.age desc
select museum.museum_id , museum.name from museum   order by museum.num_of_staff desc limit 1
select avg(museum.num_of_staff) from museum where  museum.open_year != "value"
select museum.open_year , museum.num_of_staff from museum where  museum.name = "value"
select museum.name from museum where  museum.num_of_staff > (select min(museum.num_of_staff) from museum where  museum.open_year > "value"  )
select museum.museum_id , visitor.name , visitor.age from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID  group by museum.museum_id,visitor.name,visitor.age having  count(*) > "value"
select museum.museum_id , museum.name , visitor.level_of_membership from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  visit.total_spent = (select sum(visit.total_spent) from visit  )
select museum.museum_id , museum.name from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID  group by museum.Museum_ID  order by count(*) desc limit 1
select museum.name from museum where  museum.name not in (select museum.name from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  visitor.name = "value"  )
select visitor.name , visitor.age from visitor where  visitor.age = (select visitor.age from visit join visitor on visit.visitor_ID = visitor.ID  group by visitor.age  order by count(*) desc limit 1 )
select avg(visit.num_of_ticket) , max(visit.num_of_ticket) from visit
select sum(visit.num_of_ticket) from visit join visitor on visit.visitor_ID = visitor.ID where  visitor.level_of_membership = "value"
select visitor.name from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  museum.open_year = "value" and museum.open_year > "value"
select count(*) from visitor where  visitor.id not in (select visitor.ID from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  museum.open_year > "value"  )
select count(*) from museum where  museum.open_year = "value" or museum.open_year < "value"
select count(*) from players
select count(*) from players
select count(*) from matches
select count(*) from matches
select players.first_name , players.birth_date from players where  players.country_code = "value"
select players.first_name , players.birth_date from players where  players.country_code = "value"
select avg(matches.loser_age) , avg(matches.winner_age) from matches join players on matches.winner_id = players.player_id
select avg(matches.winner_age) , avg(matches.loser_age) from matches where  matches.match_num = "value"
select avg(matches.winner_rank) from matches where  matches.match_num = "value"
select avg(matches.loser_rank) from matches where  matches.match_num = "value"
select max(matches.loser_rank) from matches where  matches.match_num = "value"
select matches.loser_rank from matches where  matches.match_num = "value"
select count( distinct players.country_code) from players
select count( distinct players.country_code) from players
select count( distinct matches.loser_name) from matches
select count( distinct matches.loser_name) from matches
select matches.tourney_name from matches  group by matches.tourney_name having  count(*) > "value"
select matches.loser_name from matches  group by matches.loser_name having  count(*) > "value"
select matches.winner_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_id = "value" and players.last_name = "value"
select players.last_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_id = "value" and players.last_name = "value"
select count(*) from matches where  matches.tourney_id = "value" or matches.tourney_id = "value"
select count(*) from matches where  matches.tourney_id = "value" or matches.tourney_id = "value"
select players.country_code , players.first_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "value"   intersect select players.country_code , players.first_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "value"
select players.first_name , players.country_code from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "value" and players.last_name = "value"
select players.first_name , players.country_code from players   order by players.birth_date desc limit 1
select players.first_name , players.country_code from players   order by players.birth_date desc limit 1
select players.first_name , players.last_name from players   order by players.birth_date asc
select players.player_id , players.first_name from players   order by players.birth_date asc
select players.first_name , players.last_name from players where  players.birth_date = "value"   order by players.birth_date asc
select players.last_name , players.first_name from players   order by players.birth_date asc
select players.first_name , players.country_code from rankings join players on rankings.player_id = players.player_id  group by players.player_id  order by count(*) desc limit 1
select players.first_name , players.country_code from rankings join players on rankings.player_id = players.player_id   order by rankings.tours desc limit 1
select matches.year from matches  group by matches.year  order by count(*) desc limit 1
select matches.year from matches  group by matches.year  order by count(*) desc limit 1
select matches.winner_name , matches.winner_rank_points from matches  group by matches.winner_name,matches.winner_rank_points  order by count(*) desc limit 1
select matches.winner_name , count(*) from matches  group by matches.winner_name  order by count(*) desc limit 1
select matches.winner_name from matches where  matches.tourney_name = "value"   intersect select matches.winner_name from matches where  matches.tourney_name = "value"
select matches.winner_name from matches join players on matches.winner_id = players.player_id join rankings on players.player_id = rankings.player_id where  matches.tourney_name = "value"   order by rankings.ranking_points desc limit 1
select matches.loser_name , matches.winner_name from matches   order by matches.minutes desc limit 1
select matches.winner_name , matches.loser_name from matches   order by matches.year desc limit 1
select avg(rankings.ranking_date) , players.player_id from rankings join players on rankings.player_id = players.player_id  group by players.player_id
select players.first_name , avg(rankings.player_id) from rankings join players on rankings.player_id = players.player_id  group by players.first_name
select sum(rankings.ranking_points) , players.first_name from rankings join players on rankings.player_id = players.player_id  group by players.first_name
select players.first_name , sum(rankings.ranking_points) from rankings join players on rankings.player_id = players.player_id  group by players.first_name
select count(*) , players.country_code from players  group by players.country_code
select players.country_code , count(*) from players  group by players.country_code
select players.country_code from players  group by players.country_code  order by count(*) desc limit 1
select players.country_code from players  group by players.country_code  order by count(*) desc limit 1
select players.country_code from players  group by players.country_code having  count(*) > "value"
select players.country_code from players  group by players.country_code having  count(*) > "value"
select rankings.ranking_date , sum(rankings.tours) from rankings  group by rankings.ranking_date
select rankings.ranking_date , sum(rankings.tours) from rankings  group by rankings.ranking_date
select count(*) , matches.year from matches  group by matches.year
select matches.match_num , count(*) from matches where  matches.year = "value"  group by matches.match_num
select players.last_name , matches.winner_rank from matches join players on matches.winner_id = players.player_id   order by matches.loser_age asc limit 3
select matches.winner_name , matches.loser_rank from matches   order by matches.loser_age asc limit 3
select count(*) from matches where  matches.tourney_name = "value"   intersect select count(*) from matches where  matches.tourney_name = "value"
select count(*) from matches where  matches.tourney_name = "value"   intersect select count(*) from matches where  matches.tourney_name = "value"
select players.first_name , players.country_code , players.birth_date from matches join players on matches.winner_id = players.player_id   order by matches.winner_rank_points desc limit 1
select players.first_name , players.country_code , players.birth_date from matches join players on matches.winner_id = players.player_id   order by matches.winner_rank_points desc limit 1
select players.hand , count(*) from players  group by players.hand
select players.hand , count(*) from players  group by players.hand
select count(*) from ship where  ship.disposition_of_ship = "value"
select ship.name , ship.tonnage from ship   order by ship.name desc
select battle.name , battle.date , battle.result from battle
select max(death.id) , min(death.killed) from death
select avg(death.caused_by_ship_id) , death.caused_by_ship_id from death  group by death.caused_by_ship_id
select death.id , death.caused_by_ship_id from death join ship on death.caused_by_ship_id = ship.id where  ship.tonnage = "value"
select battle.name , battle.result from battle where  battle.bulgarian_commander != "value"
select battle.id , battle.name from ship join battle on ship.lost_in_battle = battle.id where  ship.ship_type = "value"
select battle.id , battle.name from death join ship on death.caused_by_ship_id = ship.id join battle on ship.lost_in_battle = battle.id where  death.killed > "value"
select ship.id , ship.name from death join ship on death.caused_by_ship_id = ship.id  group by ship.id  order by count(*) desc limit 1
select distinct battle.name from battle where  battle.bulgarian_commander >= "value" and battle.latin_commander = "value"
select count( distinct battle.result) from battle
select count(*) from battle where  battle.id not in (select ship.lost_in_battle from ship where  ship.tonnage = "value"  )
select battle.name , battle.date from ship join battle on ship.lost_in_battle = battle.id where  ship.name = "value"   intersect select battle.name , battle.date from ship join battle on ship.lost_in_battle = battle.id where  ship.name = "value"
select battle.name , battle.result , battle.bulgarian_commander from battle where  battle.name not in (select battle.name from ship join battle on ship.lost_in_battle = battle.id where  ship.location = "value"  )
select death.note from death where  death.note like "value"
select addresses.address_id from Addresses where  addresses.line_1 like "value" and addresses.line_2 = "value"
select students.first_name , addresses.line_1 from Students join Addresses on Students.permanent_address_id = Addresses.address_id
select count(*) from Courses
select count(*) from Courses
select courses.course_name from Courses where  courses.course_name = "value"
select courses.course_description from Courses where  courses.course_name = "value"
select addresses.zip_postcode from Addresses where  addresses.city = "value"
select addresses.zip_postcode from Addresses where  addresses.city = "value"
select departments.department_name , degree_programs.department_id from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id  group by departments.department_name,degree_programs.department_id  order by count(*) desc limit 1
select departments.department_id , departments.department_name from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id  group by Departments.department_id  order by count(*) desc limit 1
select count(*) , degree_programs.department_id from Degree_Programs  group by degree_programs.department_id
select count( distinct degree_programs.degree_summary_name) from Degree_Programs
select count( distinct degree_programs.degree_summary_name) from Degree_Programs
select count( distinct degree_programs.degree_summary_name) from Degree_Programs
select count(*) , degree_programs.department_id from Degree_Programs  group by degree_programs.department_id
select count(*) from Degree_Programs
select sections.section_name , sections.section_description from Sections
select sections.section_name , sections.section_description from Sections
select courses.course_name , courses.course_id from Sections join Courses on Sections.course_id = Courses.course_id  group by Courses.course_id having  count(*) <= "value"
select courses.course_name , courses.course_id from Sections join Courses on Sections.course_id = Courses.course_id  group by Courses.course_id having  count(*) < "value"
select addresses.line_1 from Addresses join Transcripts on Addresses.address_id = Transcripts.transcript_id   order by transcripts.transcript_date desc
select sections.section_name from Sections   order by sections.section_name desc
select semesters.semester_name , student_enrolment.semester_id from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id  group by semesters.semester_name,student_enrolment.semester_id  order by count(*) desc limit 1
select semesters.semester_name , semesters.semester_id , student_enrolment.student_enrolment_id from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Semesters on Student_Enrolment.semester_id = Semesters.semester_id  group by semesters.semester_name,semesters.semester_id,student_enrolment.student_enrolment_id  order by count(*) desc limit 1
select departments.department_description from Departments where  departments.department_name like "value"
select departments.department_description from Departments where  departments.department_name like "value"
select students.first_name , students.middle_name , students.last_name , student_enrolment.student_enrolment_id from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.department_id = "value"
NO PREDICTION
select students.first_name , students.middle_name , students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "value"
select students.first_name , students.middle_name , students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "value"
select student_enrolment.degree_program_id from Student_Enrolment  group by student_enrolment.degree_program_id  order by count(*) desc limit 1
select degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by degree_programs.degree_summary_name  order by count(*) desc limit 1
select student_enrolment.degree_program_id , degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by student_enrolment.degree_program_id,degree_programs.degree_summary_name  order by count(*) desc limit 1
select degree_programs.degree_program_id , degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by Degree_Programs.degree_program_id  order by count(*) desc limit 1
select students.student_id , students.first_name , students.last_name , count(*) from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by Students.student_id  order by count(*) desc limit 1
select students.first_name , students.middle_name , students.last_name , count(*) from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by Students.student_id  order by count(*) desc limit 1
select semesters.semester_name from Semesters where  semesters.semester_id not in (select Student_Enrolment.semester_id from Student_Enrolment  )
select semesters.semester_name from Semesters where  semesters.semester_name not in (select semesters.semester_name from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id  )
select courses.course_name from Student_Enrolment_Courses join Student_Enrolment on Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id join Courses on Student_Enrolment_Courses.course_id = Courses.course_id
select courses.course_name from Student_Enrolment_Courses join Student_Enrolment on Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id join Courses on Student_Enrolment_Courses.course_id = Courses.course_id
select courses.course_name from Sections join Courses on Sections.course_id = Courses.course_id  group by courses.course_name  order by count(*) desc limit 1
select courses.course_name from Student_Enrolment_Courses join Student_Enrolment on Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id join Courses on Student_Enrolment_Courses.course_id = Courses.course_id  group by courses.course_name  order by count(*) desc limit 1
select students.last_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.state_province_county = "value"   except select students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
select students.last_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.state_province_county = "value"   except select students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
select transcripts.transcript_date , transcripts.transcript_id from Transcript_Contents join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id  group by Transcripts.transcript_id having  count(*) >= "value"
select transcripts.transcript_date , transcripts.transcript_id from Transcripts  group by Transcripts.transcript_id having  count(*) >= "value"
select students.last_name from Students where  students.first_name = "value" and students.last_name = "value"
select students.cell_mobile_number from Students where  students.last_name = "value"
select students.first_name , students.middle_name , students.last_name from Students
select students.first_name , students.middle_name , students.last_name from Students
select students.first_name , students.middle_name , students.last_name from Students   order by students.last_name asc limit 1
select students.first_name , students.middle_name , students.last_name from Students   order by students.last_name asc limit 1
select distinct students.first_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id
select distinct students.first_name from Students where  students.permanent_address_id = "value"
select addresses.address_id , addresses.line_1 from Students join Addresses on Students.permanent_address_id = Addresses.address_id  group by Addresses.address_id  order by count(*) desc limit 1
select addresses.address_id , addresses.line_1 , addresses.line_2 from Students join Addresses on Students.permanent_address_id = Addresses.address_id  group by Addresses.address_id  order by count(*) desc limit 1
select transcripts.transcript_date , avg(transcripts.transcript_date) from Transcripts  group by transcripts.transcript_date
select avg(transcripts.transcript_date) from Transcripts
select transcripts.transcript_date , transcripts.other_details from Transcripts   order by transcripts.transcript_date desc limit 1
select transcripts.transcript_date , transcripts.other_details from Transcripts
select count(*) from Transcripts
select count(*) from Transcripts
select students.last_name from Transcript_Contents join Student_Enrolment_Courses on Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id join Student_Enrolment on Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id join Students on Student_Enrolment.student_id = Students.student_id join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id   order by transcripts.transcript_date desc limit 1
select students.last_name from Students  group by students.last_name  order by count(*) desc limit 1
select transcripts.transcript_id , count(*) from Transcript_Contents join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id  group by transcripts.transcript_id
select count(*) , transcript_contents.student_course_id from Transcript_Contents join Student_Enrolment_Courses on Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id join Courses on Student_Enrolment_Courses.course_id = Courses.course_id  group by transcript_contents.student_course_id
select transcripts.transcript_date , transcripts.transcript_id from Transcripts  group by Transcripts.transcript_id  order by count(*) asc limit 1
select transcripts.transcript_date , transcripts.transcript_id from Transcripts  group by Transcripts.transcript_id  order by count(*) asc limit 1
select semesters.semester_name from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "value" and student_enrolment.other_details = "value"
select semesters.semester_id from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id where  semesters.semester_name = "value" and student_enrolment.other_details = "value"
select count( distinct addresses.address_id) from Addresses
select distinct addresses.address_id from Addresses
select students.other_student_details from Students   order by students.other_student_details asc
select students.other_student_details from Students   order by students.other_student_details asc
select sections.section_name from Sections where  sections.section_name = "value"
select sections.section_description from Sections where  sections.section_name = "value"
select students.first_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.country = "value" or students.cell_mobile_number = "value"
select students.first_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.country = "value" or students.cell_mobile_number = "value"
select cartoon.title from Cartoon   order by cartoon.title asc
select cartoon.title from Cartoon   order by cartoon.title asc
select cartoon.directed_by from Cartoon where  cartoon.directed_by = "value"
select cartoon.directed_by from Cartoon where  cartoon.directed_by = "value"
select count(*) from Cartoon where  cartoon.written_by = "value"
select count(*) from Cartoon where  cartoon.written_by = "value"
select cartoon.title , cartoon.directed_by from Cartoon   order by cartoon.original_air_date asc
select tv_channel.series_name , cartoon.directed_by from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id   order by cartoon.original_air_date asc
select cartoon.directed_by from Cartoon where  cartoon.directed_by = "value" or cartoon.directed_by = "value"
select cartoon.title from Cartoon where  cartoon.directed_by = "value" or cartoon.directed_by = "value"
select tv_channel.country , count(*) from TV_Channel  group by tv_channel.country  order by count(*) desc limit 1
select tv_channel.country , count(*) from TV_Channel  group by tv_channel.country  order by count(*) desc limit 1
select count( distinct tv_channel.series_name) , tv_channel.series_name , tv_channel.content from TV_Channel  group by TV_Channel.id
select count( distinct tv_series.id) , tv_channel.content from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id  group by tv_channel.content
select tv_channel.content from TV_Channel where  tv_channel.series_name = "value"
select tv_channel.content from TV_Channel where  tv_channel.series_name = "value"
select tv_channel.package_option from TV_Channel where  tv_channel.series_name = "value"
select tv_channel.package_option from TV_Channel where  tv_channel.series_name = "value"
select count(*) from TV_Channel where  tv_channel.language = "value"
select count(*) from TV_Channel where  tv_channel.language = "value"
select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language  order by count(*) asc limit 1
select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language  order by count(*) asc limit 1
select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language
select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language
select tv_channel.id from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.title = "value"
select tv_channel.series_name from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.title = "value"   intersect select tv_channel.series_name from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.title = "value"
select cartoon.title from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  tv_channel.series_name = "value"
select cartoon.title from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  tv_channel.series_name = "value"
select tv_series.episode from TV_series   order by tv_series.rating asc
select tv_series.episode from TV_series   order by tv_series.rating asc
select tv_series.id , tv_series.rating from TV_series   order by tv_series.rating desc limit 3
select tv_series.episode , tv_series.rating from TV_series  group by TV_series.id  order by count(*) desc limit 3
select min(tv_series.share) , max(tv_series.share) from TV_series
select max(tv_series.share) , min(tv_series.share) from TV_series
select tv_series.air_date from TV_series where  tv_series.episode = "value"
select tv_series.air_date from TV_series where  tv_series.episode = "value"
select tv_series.weekly_rank from TV_series where  tv_series.episode = "value"
select tv_series.weekly_rank from TV_series where  tv_series.episode = "value"
select tv_channel.id from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_series.episode = "value"
select tv_channel.series_name from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_series.episode = "value"
select tv_series.episode from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = "value"   intersect select tv_series.episode from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = "value"
select tv_series.episode from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = "value"
select cartoon.directed_by , count(*) from Cartoon  group by cartoon.directed_by
select count(*) , cartoon.directed_by from Cartoon where  cartoon.directed_by = "value"  group by cartoon.directed_by
select cartoon.production_code , cartoon.channel from Cartoon   order by cartoon.original_air_date desc limit 1
select cartoon.production_code , cartoon.channel from Cartoon   order by cartoon.original_air_date desc limit 1
select tv_channel.package_option , tv_channel.series_name from TV_Channel where  tv_channel.hight_definition_tv = "value"
select tv_channel.package_option , tv_channel.series_name from TV_Channel where  tv_channel.hight_definition_tv = "value"
select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "value"
select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "value"
select tv_channel.country from TV_Channel where  tv_channel.country not in (select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "value"  )
select tv_channel.country from TV_Channel where  tv_channel.country not in (select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "value"  )
select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"   intersect select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"
select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"   intersect select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"
select tv_channel.pixel_aspect_ratio_par , tv_channel.language from TV_Channel where  tv_channel.language != "value"
select tv_channel.pixel_aspect_ratio_par , tv_channel.country from TV_Channel where  tv_channel.language != "value"
select tv_channel.id from TV_Channel  group by tv_channel.id having  count(*) > "value"
select tv_channel.id from TV_Channel  group by tv_channel.id having  count(*) > "value"
select tv_channel.id from TV_Channel where  tv_channel.id not in (select tv_channel.id from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"  )
select tv_channel.id from TV_Channel where  tv_channel.id not in (select tv_channel.id from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"  )
select tv_channel.package_option from TV_Channel where  tv_channel.package_option not in (select tv_channel.package_option from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"  )
select tv_channel.package_option from TV_Channel where  tv_channel.package_option not in (select tv_channel.package_option from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "value"  )
select count(*) from poker_player
select count(*) from poker_player
select poker_player.earnings from poker_player   order by poker_player.earnings desc
select poker_player.earnings from poker_player   order by poker_player.earnings desc
select poker_player.final_table_made , poker_player.best_finish from poker_player
select max(poker_player.final_table_made) , poker_player.best_finish from poker_player  group by poker_player.best_finish
select avg(poker_player.earnings) from poker_player
select avg(poker_player.earnings) from poker_player
select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1
select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1
select max(poker_player.final_table_made) from poker_player where  poker_player.earnings < "value"
select max(poker_player.final_table_made) from poker_player where  poker_player.earnings < "value"
select people.name from people
select people.name from people
select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > "value"
select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > "value"
select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.final_table_made asc
select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.final_table_made asc
select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings asc limit 1
select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings asc limit 1
select poker_player.money_rank from poker_player   order by poker_player.money_rank desc limit 1
select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID   order by people.height desc limit 1
select avg(poker_player.earnings) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > "value"
select avg(poker_player.earnings) from poker_player where  poker_player.earnings > "value"
select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings desc
select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings desc
select count(*) , people.nationality from people  group by people.nationality
select count(*) , people.nationality from people  group by people.nationality
select people.nationality from people  group by people.nationality  order by count(*) desc limit 1
select people.nationality from people  group by people.nationality  order by count(*) desc limit 1
select people.nationality from people  group by people.nationality having  count(*) >= "value"
select people.nationality from people  group by people.nationality having  count(*) >= "value"
select people.name , people.birth_date from people   order by people.name asc
select people.name , people.birth_date from people   order by people.name asc
select people.name from people where  people.nationality != "value"
select people.name from people where  people.name not in (select people.name from people where  people.nationality != "value"  )
select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )
select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )
select count( distinct people.nationality) from people
select count( distinct people.nationality) from people
select count(*) from AREA_CODE_STATE
select contestants.contestant_number , contestants.contestant_name from CONTESTANTS   order by contestants.contestant_name desc
select votes.vote_id , votes.phone_number , area_code_state.state from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state
select max(area_code_state.area_code) , min(area_code_state.state) from AREA_CODE_STATE
select votes.created from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  area_code_state.state = "value"
select contestants.contestant_name from CONTESTANTS where  contestants.contestant_name != "value"
select distinct area_code_state.state , votes.created from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state
select contestants.contestant_number , contestants.contestant_name from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number  group by CONTESTANTS.contestant_number having  count(*) >= "value"
select contestants.contestant_number , contestants.contestant_name from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number  group by CONTESTANTS.contestant_number  order by count(*) asc limit 1
select count(*) from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  votes.state = "value" or area_code_state.state = "value"
select count(*) from CONTESTANTS where  contestants.contestant_number not in (select VOTES.contestant_number from VOTES  )
select area_code_state.area_code from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state  group by area_code_state.area_code  order by count(*) desc limit 1
select votes.created , area_code_state.state , votes.phone_number from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = "value"
select area_code_state.area_code from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = "value"   intersect select area_code_state.area_code from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = "value"
select contestants.contestant_name from CONTESTANTS where  contestants.contestant_name like "value"
select country.name from country where  country.indepyear > "value"
select country.name from country where  country.indepyear > "value"
select count(*) from country where  country.governmentform = "value"
select count(*) from country where  country.governmentform = "value"
select sum(country.surfacearea) from country where  country.region = "value"
select sum(country.surfacearea) from country where  country.governmentform = "value"
select country.continent from country where  country.localname = "value"
select country.continent from country where  country.localname = "value"
select country.region from city join country on city.CountryCode = country.Code where  city.name = "value"
select country.region from city join country on city.CountryCode = country.Code where  city.name = "value"
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.localname = "value"  group by countrylanguage.language  order by count(*) desc limit 1
select countrylanguage.language from countrylanguage where  countrylanguage.language = "value"
select city.population , country.lifeexpectancy from city join country on city.CountryCode = country.Code where  country.name = "value"
select city.population , country.lifeexpectancy from city join country on city.CountryCode = country.Code where  country.name = "value"   intersect select city.population , country.lifeexpectancy from city join country on city.CountryCode = country.Code where  country.name = "value"
select country.region , country.population from country where  country.localname = "value"
select country.region , city.population from city join country on city.CountryCode = country.Code where  country.localname = "value"
select avg(country.lifeexpectancy) from country where  country.continent = "value"
select avg(country.lifeexpectancy) from country where  country.continent = "value"   intersect select avg(country.lifeexpectancy) from country where  country.continent = "value"   order by avg(country.lifeexpectancy) desc limit 1
select country.name from country where  country.continent = "value"   order by country.lifeexpectancy asc limit 1
select country.name from country where  country.continent = "value"   order by country.lifeexpectancy asc limit 1
select sum(city.population) , sum(country.gnp) from city join country on city.CountryCode = country.Code where  country.continent = "value"
select count(*) , country.continent from country  group by country.continent  order by country.gnp desc limit 1
select avg(country.lifeexpectancy) from country where  country.name = "value"   intersect select avg(country.lifeexpectancy) from country where  country.name = "value"
select avg(country.lifeexpectancy) from country where  country.continent = "value"
select sum(country.surfacearea) from country where  country.continent = "value"   intersect select sum(country.surfacearea) from country where  country.continent = "value"
select sum(country.surfacearea) from country where  country.continent = "value" or country.continent = "value"
select count(*) from city where  city.district = "value"
select sum(city.population) from city where  city.district = "value"
select avg(country.gnp) , sum(country.population) from country where  country.code2 = "value"
select avg(country.gnp) , sum(country.population) from country where  country.code2 = "value"
select count( distinct countrylanguage.language) from countrylanguage
select count( distinct countrylanguage.language) from countrylanguage
select count(*) from country where  country.continent = "value"
select count( distinct country.governmentform) from country where  country.continent = "value"
select sum(countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.localname = "value"
select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.localname = "value"
select count(*) from countrylanguage where  countrylanguage.language = "value"
select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name  order by count(*) desc limit 1
select countrylanguage.language from countrylanguage   order by countrylanguage.language desc limit 1
select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.continent  order by count(*) desc limit 1
select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.continent  order by count(*) desc limit 1
select country.name , count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"  group by country.name  intersect select country.name , count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"  group by country.name
select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   intersect select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select count( distinct country.continent) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.region from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" or countrylanguage.language = "value"
select country.region from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" or countrylanguage.language = "value"
select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" or countrylanguage.language = "value"
select distinct country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" or countrylanguage.language = "value"
select countrylanguage.language from countrylanguage  group by countrylanguage.language  order by count(*) desc limit 1
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"  group by countrylanguage.language  order by count(*) desc limit 1
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = "value"
select distinct countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = "value"
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"   order by city.population desc limit 1
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"  group by city.name  order by count(*) desc limit 1
select country.name , country.population , country.lifeexpectancy from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   order by country.surfacearea desc limit 1
select country.name , city.population , country.lifeexpectancy from city join country on city.CountryCode = country.Code where  country.region = "value"
select avg(country.lifeexpectancy) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" and countrylanguage.language != "value"
select avg(country.lifeexpectancy) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value" and countrylanguage.language != "value"
select sum(country.headofstate) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "value" and countrylanguage.language != "value"
select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "value" and countrylanguage.language != "value"
select countrylanguage.isofficial from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = "value"
select countrylanguage.isofficial from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = "value"
select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < "value"
select countrylanguage.language , count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < "value"  group by countrylanguage.language
select country.name from country where  country.surfacearea > (select max(country.surfacearea) from country where  country.continent = "value"  )
select country.name from country where  country.surfacearea > (select max(country.surfacearea) from country where  country.continent = "value"  )
select country.name from country where  country.population < (select max(country.population) from country where  country.continent = "value"  )
select country.name from country where  country.population < (select min(country.population) from country where  country.continent = "value"  )
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = "value"   intersect select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = "value"
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.population > (select max(country.Population) from country where  country.continent = "value"  )
select city.countrycode from city where  city.population not in (select country.Population from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "value"  )
select city.countrycode from city where  city.population not in (select country.Population from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"  )
select city.countrycode from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value" and countrylanguage.language like "value"
select city.countrycode from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language != "value" and countrylanguage.language != "value"
select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "value" and country.governmentform != "value" and country.governmentform != "value"
select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "value" and country.governmentform != "value"
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"   except select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"   except select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"   intersect select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "value"
select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  country.continent = "value" and countrylanguage.language = "value"
select country.name , city.name , country.surfacearea from city join country on city.CountryCode = country.Code   order by country.population asc limit 1
select country.name , city.name , country.surfacearea from city join country on city.CountryCode = country.Code   order by country.population asc limit 1
select country.population , country.name , country.surfacearea from country   order by country.surfacearea desc limit 1
select country.name , country.population , country.headofstate from country where  country.surfacearea = (select max(country.surfacearea) from country   order by country.surfacearea desc limit 1 )
select country.name , countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name,countrylanguage.language having  count(*) >= "value"
select countrylanguage.language , count( distinct countrylanguage.language) from countrylanguage  group by countrylanguage.language having  count(*) > "value"
select count(*) , city.district from city where  city.population > (select avg(city.population) from city  )  group by city.district
select count(*) , city.district from city where  city.population > (select avg(city.population) from city  )  group by city.district
select country.governmentform , sum(country.population) from country  group by country.governmentform having  avg(country.lifeexpectancy) > "value"
select country.governmentform , sum(country.population) from country  group by country.governmentform having  avg(country.lifeexpectancy) > "value"
select avg(country.lifeexpectancy) , sum(country.population) from country where  country.lifeexpectancy < "value"
select country.continent , sum(country.lifeexpectancy) , avg(country.lifeexpectancy) from country  group by country.continent having  avg(country.lifeexpectancy) < "value"
select country.name , country.surfacearea from country   order by country.surfacearea desc limit 5
select country.name , country.surfacearea from country   order by country.population desc limit 1
select country.name from country   order by country.population desc limit 3
select country.name from country  group by country.name  order by count(*) desc limit 3
select country.name from city join country on city.CountryCode = country.Code   order by city.population asc limit 3
select country.name from country  group by country.name  order by count(*) asc limit 3
select count(*) from country where  country.continent = "value"
select count(*) from country where  country.continent = "value"
select country.name from country where  country.continent = "value" and country.population > "value"
select country.name from country where  country.continent = "value" and country.population = "value"
select sum(city.population) , avg(country.surfacearea) from city join country on city.CountryCode = country.Code where  country.continent = "value" and country.surfacearea > "value"
select sum(country.population) , avg(country.surfacearea) from country where  country.name = "value" and country.surfacearea > "value"
select city.name from city where  city.population between "value" and "value"
select city.name from city where  city.population between "value" and "value"
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language  order by count(*) desc limit 1
select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language  order by count(*) desc limit 1
select countrylanguage.language , max(countrylanguage.percentage) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = "value"  group by countrylanguage.language
select country.name , countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code
select sum(countrylanguage.percentage) from countrylanguage   order by countrylanguage.percentage desc limit 1
select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"   order by countrylanguage.percentage desc limit 1
select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "value"
select count(*) from conductor
select count(*) from conductor
select conductor.name from conductor   order by conductor.age asc
select conductor.name from conductor   order by conductor.age asc
select conductor.name from conductor where  conductor.nationality != "value"
select conductor.name from conductor where  conductor.nationality != "value"
select orchestra.record_company from orchestra   order by orchestra.year_of_founded desc
select orchestra.record_company from orchestra   order by orchestra.year_of_founded desc
select avg(show.attendance) from show
select avg(show.attendance) from show
select max(performance.share) , min(performance.share) from performance where  performance.type != "value"
select max(performance.share) , min(performance.share) from performance where  performance.type = "value"
select count( distinct conductor.nationality) from conductor
select count( distinct conductor.nationality) from conductor
select conductor.name from conductor   order by conductor.year_of_work desc
select conductor.name from conductor   order by conductor.year_of_work desc
select conductor.name from conductor   order by conductor.year_of_work desc limit 1
select conductor.name from conductor   order by conductor.year_of_work desc limit 1
select conductor.name , orchestra.orchestra from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID
select conductor.name from conductor
select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by conductor.name having  count(*) > "value"
select conductor.name from performance join orchestra on performance.Orchestra_ID = orchestra.Orchestra_ID join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by conductor.name having  count(*) > "value"
select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by conductor.name  order by count(*) desc limit 1
select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by conductor.name  order by count(*) desc limit 1
select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > "value"
select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > "value"
select orchestra.record_company , count(*) from orchestra  group by orchestra.record_company
select count(*) , orchestra.record_company from orchestra  group by orchestra.record_company
select orchestra.record_company from orchestra  group by orchestra.record_company  order by count(*) asc
select orchestra.major_record_format from orchestra  group by orchestra.major_record_format  order by count(*) asc
select orchestra.record_company from orchestra  group by orchestra.record_company  order by count(*) desc limit 1
select orchestra.record_company from orchestra  group by orchestra.record_company  order by count(*) desc limit 1
select orchestra.orchestra from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )
select orchestra.orchestra from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )
select orchestra.record_company from orchestra where  orchestra.year_of_founded < "value" and orchestra.year_of_founded > "value"
select orchestra.record_company from orchestra where  orchestra.year_of_founded < "value" and orchestra.year_of_founded > "value"
select count(*) from orchestra where  orchestra.major_record_format = "value" or orchestra.major_record_format = "value"
select count(*) from orchestra where  orchestra.major_record_format = "value" or orchestra.major_record_format = "value"
select orchestra.year_of_founded from performance join orchestra on performance.Orchestra_ID = orchestra.Orchestra_ID  group by orchestra.year_of_founded having  count(*) > "value"
select orchestra.year_of_founded from performance join orchestra on performance.Orchestra_ID = orchestra.Orchestra_ID  group by orchestra.year_of_founded having  count(*) > "value"
select count(*) from Highschooler
select count(*) from Highschooler
select highschooler.name , highschooler.grade from Highschooler
select highschooler.name , highschooler.grade from Highschooler
select highschooler.grade from Highschooler
select distinct highschooler.grade from Highschooler
select distinct highschooler.name from Highschooler where  highschooler.name = "value"
select distinct highschooler.grade from Highschooler where  highschooler.name = "value"
select highschooler.name from Highschooler where  highschooler.grade = "value"
select highschooler.name from Highschooler where  highschooler.grade = "value"
select highschooler.id from Highschooler where  highschooler.name = "value"
select highschooler.id from Highschooler where  highschooler.name = "value"
select count(*) from Highschooler where  highschooler.grade = "value" or highschooler.grade = "value"
select count(*) from Highschooler where  highschooler.grade = "value" or highschooler.grade = "value"
select count(*) , highschooler.grade from Highschooler  group by highschooler.grade
select highschooler.grade , count(*) from Highschooler  group by highschooler.grade
select highschooler.grade from Highschooler  group by highschooler.grade  order by count(*) desc limit 1
select highschooler.grade from Highschooler  group by highschooler.grade  order by count(*) desc limit 1
select highschooler.grade from Highschooler  group by highschooler.grade having  count(*) >= "value"
select highschooler.grade from Highschooler  group by highschooler.grade having  count(*) >= "value"
select friend.student_id , count(*) from Friend  group by friend.student_id
select count(*) , friend.student_id from Friend  group by friend.student_id
select highschooler.name , count(*) from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by highschooler.name
select highschooler.name , count(*) from Highschooler  group by highschooler.name
select highschooler.name from Highschooler  group by highschooler.name  order by count(*) desc limit 1
select highschooler.name from Highschooler  group by highschooler.name  order by count(*) desc limit 1
select highschooler.name from Highschooler  group by highschooler.name having  count(*) >= "value"
select highschooler.name from Highschooler  group by highschooler.name having  count(*) >= "value"
select highschooler.name from Highschooler where  highschooler.name = "value"
select highschooler.name from Highschooler where  highschooler.name = "value"
select count( distinct friend.friend_id) from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.name = "value"
select count(*) from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.name = "value"
select highschooler.id from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  )
select highschooler.id from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  )
select highschooler.name from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  )
select highschooler.name from Highschooler where  highschooler.name not in (select highschooler.name from Highschooler  )
select highschooler.id from Highschooler
select highschooler.id from Highschooler
select highschooler.name , friend.student_id , likes.liked_id from Friend join Highschooler on Friend.friend_id = Highschooler.ID join Likes on Highschooler.ID = Likes.student_id
select highschooler.name from Highschooler
select count(*) , likes.student_id from Likes  group by likes.student_id
select likes.student_id , count(*) from Likes  group by likes.student_id
select highschooler.name , likes.liked_id , count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name,likes.liked_id
select highschooler.name , count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name
select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name  order by count(*) desc limit 1
select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name  order by count(*) desc limit 1
select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name having  count(*) >= "value"
select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by highschooler.name having  count(*) >= "value"
select highschooler.name from Highschooler where  highschooler.grade > "value"  group by highschooler.name having  count(*) >= "value"
select highschooler.name from Highschooler where  highschooler.grade >= "value"  group by highschooler.name having  count(*) >= "value"
select count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID where  highschooler.name = "value"
select count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID where  highschooler.name = "value"
select avg(highschooler.grade) from Highschooler
select avg(highschooler.grade) from Highschooler
select * from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  )
select highschooler.grade from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  )
select owners.state , professionals.state from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id join Owners on Dogs.owner_id = Owners.owner_id
select owners.state from Owners
select avg(dogs.age) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment = "value"
select avg(dogs.age) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment = "value"
select professionals.professional_id , professionals.last_name , professionals.home_phone from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  professionals.state = "value"  group by Professionals.professional_id having  count(*) > "value"
select professionals.professional_id , professionals.last_name , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  professionals.state = "value"  group by Professionals.professional_id having  count(*) > "value"
select dogs.name from Dogs where  dogs.owner_id not in (select dogs.owner_id from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment > "value"  )
select dogs.name from Dogs  group by dogs.name having  count(*) > "value"
select professionals.first_name from Professionals where  professionals.first_name = "value"   except select professionals.first_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id
select professionals.first_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id where  dogs.abandoned_yn = "value"   except select professionals.first_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id
select professionals.professional_id , professionals.role_code , professionals.email_address from Professionals where  professionals.professional_id not in (select Treatments.professional_id from Treatments  )
select professionals.professional_id , professionals.role_code , professionals.email_address from Professionals where  professionals.professional_id not in (select Treatments.professional_id from Treatments  )
select owners.owner_id , owners.first_name , owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id  group by Owners.owner_id  order by count(*) desc limit 1
select owners.owner_id , owners.first_name , owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id  group by Owners.owner_id  order by count(*) desc limit 1
select professionals.professional_id , professionals.role_code , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by Professionals.professional_id having  count(*) >= "value"
select professionals.professional_id , professionals.role_code , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by Professionals.professional_id having  count(*) >= "value"
select breeds.breed_name from Dogs join Breeds on Dogs.breed_code = Breeds.breed_code  group by breeds.breed_name  order by count(*) desc limit 1
select breeds.breed_name from Dogs join Breeds on Dogs.breed_code = Breeds.breed_code  group by breeds.breed_name  order by count(*) desc limit 1
select dogs.owner_id , owners.last_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Owners on Dogs.owner_id = Owners.owner_id  group by dogs.owner_id,owners.last_name  order by count(*) desc limit 1
select owners.owner_id , owners.last_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Owners on Dogs.owner_id = Owners.owner_id  group by Owners.owner_id  order by count(*) desc limit 1
select treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code  group by treatment_types.treatment_type_description  order by sum(treatments.cost_of_treatment) asc limit 1
select treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code   order by treatments.cost_of_treatment asc limit 1
select owners.owner_id , owners.zip_code from Charges join Owners on Charges.charge_id = Owners.owner_id  group by Owners.owner_id  order by sum(charges.charge_amount) desc limit 1
select owners.owner_id , owners.zip_code from Dogs join Owners on Dogs.owner_id = Owners.owner_id  group by Owners.owner_id  order by count(*) desc limit 1
select professionals.professional_id , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by Professionals.professional_id having  count(*) >= "value"
select professionals.professional_id , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.date_of_treatment = "value"  group by Professionals.professional_id having  count(*) >= "value"
select professionals.first_name , professionals.last_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(treatments.cost_of_treatment) from Treatments  )
select professionals.first_name , professionals.last_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(treatments.cost_of_treatment) from Treatments  )
select treatments.date_of_treatment , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id
select treatments.date_of_treatment , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id
select treatments.cost_of_treatment , treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code
select treatments.cost_of_treatment , treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code
select owners.first_name , owners.last_name , sizes.size_description from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Sizes on Dogs.size_code = Sizes.size_code
select owners.first_name , owners.last_name , sizes.size_description from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Sizes on Dogs.size_code = Sizes.size_code
select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id
select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id
select dogs.name , treatments.date_of_treatment from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id
select dogs.name , treatments.date_of_treatment from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id
select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id where  owners.state = "value"
select owners.first_name , owners.state , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id
select dogs.date_arrived , dogs.date_departed from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id
select dogs.date_arrived , dogs.date_departed from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id
select owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id   order by dogs.date_of_birth asc limit 1
select owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id   order by dogs.age desc limit 1
select distinct professionals.email_address from Professionals where  professionals.state = "value" or professionals.state = "value"
select professionals.email_address from Professionals where  professionals.state = "value" or professionals.state = "value"
select dogs.date_arrived , dogs.date_departed from Dogs
select dogs.date_arrived , dogs.date_adopted from Dogs
select count(*) from Dogs
select count(*) from Dogs
select count(*) from Professionals
select count(*) from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.dog_id = "value"
select professionals.city , professionals.street , professionals.state from Professionals where  professionals.city like "value"
select professionals.role_code , professionals.street , professionals.state from Professionals where  professionals.city like "value"
select owners.first_name , owners.last_name , owners.email_address from Owners where  owners.state like "value"
select owners.first_name , owners.last_name , owners.email_address from Owners where  owners.state like "value"
select count(*) from Dogs where  dogs.age < (select avg(dogs.age) from Dogs  )
select count(*) from Dogs where  dogs.age < (select avg(dogs.age) from Dogs  )
select max(treatments.cost_of_treatment) from Treatments   order by treatments.cost_of_treatment desc limit 1
select treatments.cost_of_treatment from Treatments   order by treatments.date_of_treatment desc limit 1
select count(*) from Dogs where  dogs.dog_id not in (select Treatments.dog_id from Treatments  )
select count(*) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment = "value"
select count(*) from Owners where  owners.owner_id not in (select Dogs.owner_id from Dogs  )
select count(*) from Owners where  owners.owner_id not in (select Dogs.owner_id from Dogs  )
select count(*) from Professionals where  professionals.professional_id not in (select Treatments.professional_id from Treatments  )
select count(*) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id where  dogs.dog_id not in (select Dogs.dog_id from Dogs  )
select dogs.name , dogs.age , dogs.weight from Dogs where  dogs.age = "value" and dogs.abandoned_yn = "value"
select dogs.name , dogs.age , dogs.weight from Dogs where  dogs.age = "value"   intersect select dogs.name , dogs.age , dogs.weight from Dogs where  dogs.age = "value"
select avg(dogs.age) from Dogs
select avg(dogs.age) from Dogs
select dogs.age from Dogs   order by dogs.age desc limit 1
select dogs.age from Dogs   order by dogs.age desc limit 1
select charges.charge_type , charges.charge_amount from Charges
select charges.charge_type , charges.charge_amount from Charges
select charges.charge_type , max(charges.charge_amount) from Charges join Treatments on Charges.charge_id = Treatments.treatment_id  group by charges.charge_type  order by treatments.cost_of_treatment desc limit 1
select charges.charge_amount from Charges   order by charges.charge_amount desc limit 1
select professionals.email_address , professionals.cell_number , professionals.home_phone from Professionals
select professionals.email_address , professionals.cell_number , professionals.home_phone from Professionals
select breeds.breed_name , sizes.size_description from Dogs join Sizes on Dogs.size_code = Sizes.size_code join Breeds on Dogs.breed_code = Breeds.breed_code
select distinct breeds.breed_name , dogs.size_code from Dogs join Breeds on Dogs.breed_code = Breeds.breed_code
select professionals.first_name , sizes.size_description from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id join Sizes on Dogs.size_code = Sizes.size_code
select professionals.first_name , treatment_types.treatment_type_description from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code
select count(*) from singer
select count(*) from singer
select singer.name from singer   order by singer.net_worth_millions asc
select singer.name from singer   order by singer.net_worth_millions asc
select singer.birth_year , singer.citizenship from singer
select singer.birth_year , singer.citizenship from singer
select singer.name from singer where  singer.citizenship != "value"
select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )
select singer.name from singer where  singer.birth_year = "value" or singer.birth_year = "value"
select singer.name from singer where  singer.birth_year = "value" or singer.birth_year = "value"
select singer.name from singer   order by singer.net_worth_millions desc limit 1
select singer.name from singer  group by singer.name  order by count(*) desc limit 1
select singer.citizenship , count(*) from singer  group by singer.citizenship
select count(*) , singer.citizenship from singer  group by singer.citizenship
select singer.citizenship from singer  group by singer.citizenship  order by count(*) desc limit 1
select singer.citizenship from singer  group by singer.citizenship  order by count(*) desc limit 1
select singer.citizenship , max(singer.net_worth_millions) from singer  group by singer.citizenship
select singer.citizenship , max(singer.net_worth_millions) from singer  group by singer.citizenship  order by max(singer.net_worth_millions) desc limit 1
select song.title , singer.name from song join singer on song.Singer_ID = singer.Singer_ID
select song.title , singer.name from song join singer on song.Singer_ID = singer.Singer_ID
select distinct singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > "value"
select distinct singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > "value"
select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > "value"
select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > "value"
select singer.name , sum(song.sales) from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name
select sum(song.sales) , singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name
select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )
select song.title from song where  song.song_id not in (select song.Song_ID from song  )
select singer.citizenship from singer where  singer.birth_year < "value" and singer.birth_year > "value"
select singer.citizenship from singer where  singer.birth_year < "value" and singer.birth_year > "value"
select count(*) from Other_Available_Features
select ref_feature_types.feature_type_name from Other_Available_Features join Ref_Feature_Types on Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code where  other_available_features.feature_name = "value"
select ref_property_types.property_type_description from Ref_Property_Types
select properties.property_name from Properties where  properties.room_count > "value" or properties.room_count > "value"
